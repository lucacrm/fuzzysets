Crisp_2dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 2
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: Crisp
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 0.2): 0.266666666667
(1, 1.0, 0.3): 0.666666666667
(2, 100.0, 0.2): 0.533333333333
(3, 100.0, 0.3): 0.6
(4, 10.0, 0.3): 0.266666666667
(5, 100.0, 0.3): 0.6
(6, 1.0, 0.3): 0.133333333333
(7, 1.0, 0.2): 0.4
(8, 100.0, 0.3): 0.266666666667
(9, 1.0, 0.3): 0.6

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 0.2): 0.733333333333
(1, 1.0, 0.3): 0.333333333333
(2, 100.0, 0.2): 0.466666666667
(3, 100.0, 0.3): 0.4
(4, 10.0, 0.3): 0.733333333333
(5, 100.0, 0.3): 0.4
(6, 1.0, 0.3): 0.866666666667
(7, 1.0, 0.2): 0.6
(8, 100.0, 0.3): 0.733333333333
(9, 1.0, 0.3): 0.4

Accuracy mean :0.4333333333333334
Std deviation :0.17950549357115014
Loss mean :0.5666666666666667
Std deviation :0.17950549357115014

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 10.0, 0.2): 0.637037037037
(1, 1.0, 0.3): 0.622222222222
(2, 100.0, 0.2): 0.577777777778
(3, 100.0, 0.3): 0.644444444444
(4, 10.0, 0.3): 0.659259259259
(5, 100.0, 0.3): 0.659259259259
(6, 1.0, 0.3): 0.355555555556
(7, 1.0, 0.2): 0.644444444444
(8, 100.0, 0.3): 0.562962962963
(9, 1.0, 0.3): 0.577777777778
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 0.2): 0.362962962963
(1, 1.0, 0.3): 0.377777777778
(2, 100.0, 0.2): 0.422222222222
(3, 100.0, 0.3): 0.355555555556
(4, 10.0, 0.3): 0.340740740741
(5, 100.0, 0.3): 0.340740740741
(6, 1.0, 0.3): 0.644444444444
(7, 1.0, 0.2): 0.355555555556
(8, 100.0, 0.3): 0.437037037037
(9, 1.0, 0.3): 0.422222222222

Accuracy mean :0.5940740740740741
Std deviation :0.08637176798310169
Loss mean :0.4059259259259259
Std deviation :0.0863717679831017

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 0.2): 0.466666666667
(0, 1.0, 0.3): 0.4
(0, 10.0, 0.2): 0.6
(0, 10.0, 0.3): 0.4
(0, 100.0, 0.2): 0.533333333333
(0, 100.0, 0.3): 0.466666666667
(1, 1.0, 0.1): 0.133333333333
(1, 1.0, 0.2): 0.533333333333
(1, 1.0, 0.3): 0.8
(1, 10.0, 0.1): 0.333333333333
(1, 10.0, 0.2): 0.466666666667
(1, 10.0, 0.3): 0.6
(1, 100.0, 0.1): 0.266666666667
(1, 100.0, 0.2): 0.4
(1, 100.0, 0.3): 0.6
(2, 1.0, 0.1): 0.2
(2, 1.0, 0.2): 0.466666666667
(2, 1.0, 0.3): 0.333333333333
(2, 10.0, 0.1): 0.2
(2, 10.0, 0.2): 0.466666666667
(2, 10.0, 0.3): 0.333333333333
(2, 100.0, 0.1): 0.2
(2, 100.0, 0.2): 0.466666666667
(2, 100.0, 0.3): 0.333333333333
(3, 1.0, 0.1): 0.533333333333
(3, 1.0, 0.2): 0.333333333333
(3, 1.0, 0.3): 0.533333333333
(3, 10.0, 0.1): 0.333333333333
(3, 10.0, 0.2): 0.333333333333
(3, 10.0, 0.3): 0.6
(3, 100.0, 0.1): 0.333333333333
(3, 100.0, 0.2): 0.466666666667
(3, 100.0, 0.3): 0.666666666667
(4, 1.0, 0.2): 0.4
(4, 1.0, 0.3): 0.6
(4, 10.0, 0.2): 0.4
(4, 10.0, 0.3): 0.666666666667
(4, 100.0, 0.2): 0.266666666667
(4, 100.0, 0.3): 0.533333333333
(5, 1.0, 0.1): 0.133333333333
(5, 1.0, 0.2): 0.466666666667
(5, 1.0, 0.3): 0.666666666667
(5, 10.0, 0.1): 0.266666666667
(5, 10.0, 0.2): 0.2
(5, 10.0, 0.3): 0.6
(5, 100.0, 0.1): 0.4
(5, 100.0, 0.2): 0.2
(5, 100.0, 0.3): 0.733333333333
(6, 1.0, 0.1): 0.333333333333
(6, 1.0, 0.2): 0.333333333333
(6, 1.0, 0.3): 0.6
(6, 10.0, 0.1): 0.133333333333
(6, 10.0, 0.2): 0.533333333333
(6, 10.0, 0.3): 0.333333333333
(6, 100.0, 0.1): 0.4
(6, 100.0, 0.2): 0.4
(6, 100.0, 0.3): 0.4
(7, 1.0, 0.1): 0.2
(7, 1.0, 0.2): 0.666666666667
(7, 1.0, 0.3): 0.466666666667
(7, 10.0, 0.1): 0.333333333333
(7, 10.0, 0.2): 0.466666666667
(7, 10.0, 0.3): 0.466666666667
(7, 100.0, 0.1): 0.333333333333
(7, 100.0, 0.2): 0.4
(7, 100.0, 0.3): 0.333333333333
(8, 0.1, 0.3): 0.466666666667
(8, 1.0, 0.1): 0.133333333333
(8, 1.0, 0.2): 0.2
(8, 1.0, 0.3): 0.466666666667
(8, 10.0, 0.1): 0.2
(8, 10.0, 0.2): 0.333333333333
(8, 10.0, 0.3): 0.466666666667
(8, 100.0, 0.1): 0.266666666667
(8, 100.0, 0.2): 0.4
(8, 100.0, 0.3): 0.6
(9, 1.0, 0.1): 0.266666666667
(9, 1.0, 0.2): 0.4
(9, 1.0, 0.3): 0.466666666667
(9, 10.0, 0.1): 0.2
(9, 10.0, 0.2): 0.333333333333
(9, 10.0, 0.3): 0.133333333333
(9, 100.0, 0.1): 0.266666666667
(9, 100.0, 0.2): 0.266666666667
(9, 100.0, 0.3): 0.133333333333

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 0.2): 0.533333333333
(0, 1.0, 0.3): 0.6
(0, 10.0, 0.2): 0.4
(0, 10.0, 0.3): 0.6
(0, 100.0, 0.2): 0.466666666667
(0, 100.0, 0.3): 0.533333333333
(1, 1.0, 0.1): 0.866666666667
(1, 1.0, 0.2): 0.466666666667
(1, 1.0, 0.3): 0.2
(1, 10.0, 0.1): 0.666666666667
(1, 10.0, 0.2): 0.533333333333
(1, 10.0, 0.3): 0.4
(1, 100.0, 0.1): 0.733333333333
(1, 100.0, 0.2): 0.6
(1, 100.0, 0.3): 0.4
(2, 1.0, 0.1): 0.8
(2, 1.0, 0.2): 0.533333333333
(2, 1.0, 0.3): 0.666666666667
(2, 10.0, 0.1): 0.8
(2, 10.0, 0.2): 0.533333333333
(2, 10.0, 0.3): 0.666666666667
(2, 100.0, 0.1): 0.8
(2, 100.0, 0.2): 0.533333333333
(2, 100.0, 0.3): 0.666666666667
(3, 1.0, 0.1): 0.466666666667
(3, 1.0, 0.2): 0.666666666667
(3, 1.0, 0.3): 0.466666666667
(3, 10.0, 0.1): 0.666666666667
(3, 10.0, 0.2): 0.666666666667
(3, 10.0, 0.3): 0.4
(3, 100.0, 0.1): 0.666666666667
(3, 100.0, 0.2): 0.533333333333
(3, 100.0, 0.3): 0.333333333333
(4, 1.0, 0.2): 0.6
(4, 1.0, 0.3): 0.4
(4, 10.0, 0.2): 0.6
(4, 10.0, 0.3): 0.333333333333
(4, 100.0, 0.2): 0.733333333333
(4, 100.0, 0.3): 0.466666666667
(5, 1.0, 0.1): 0.866666666667
(5, 1.0, 0.2): 0.533333333333
(5, 1.0, 0.3): 0.333333333333
(5, 10.0, 0.1): 0.733333333333
(5, 10.0, 0.2): 0.8
(5, 10.0, 0.3): 0.4
(5, 100.0, 0.1): 0.6
(5, 100.0, 0.2): 0.8
(5, 100.0, 0.3): 0.266666666667
(6, 1.0, 0.1): 0.666666666667
(6, 1.0, 0.2): 0.666666666667
(6, 1.0, 0.3): 0.4
(6, 10.0, 0.1): 0.866666666667
(6, 10.0, 0.2): 0.466666666667
(6, 10.0, 0.3): 0.666666666667
(6, 100.0, 0.1): 0.6
(6, 100.0, 0.2): 0.6
(6, 100.0, 0.3): 0.6
(7, 1.0, 0.1): 0.8
(7, 1.0, 0.2): 0.333333333333
(7, 1.0, 0.3): 0.533333333333
(7, 10.0, 0.1): 0.666666666667
(7, 10.0, 0.2): 0.533333333333
(7, 10.0, 0.3): 0.533333333333
(7, 100.0, 0.1): 0.666666666667
(7, 100.0, 0.2): 0.6
(7, 100.0, 0.3): 0.666666666667
(8, 0.1, 0.3): 0.533333333333
(8, 1.0, 0.1): 0.866666666667
(8, 1.0, 0.2): 0.8
(8, 1.0, 0.3): 0.533333333333
(8, 10.0, 0.1): 0.8
(8, 10.0, 0.2): 0.666666666667
(8, 10.0, 0.3): 0.533333333333
(8, 100.0, 0.1): 0.733333333333
(8, 100.0, 0.2): 0.6
(8, 100.0, 0.3): 0.4
(9, 1.0, 0.1): 0.733333333333
(9, 1.0, 0.2): 0.6
(9, 1.0, 0.3): 0.533333333333
(9, 10.0, 0.1): 0.8
(9, 10.0, 0.2): 0.666666666667
(9, 10.0, 0.3): 0.866666666667
(9, 100.0, 0.1): 0.733333333333
(9, 100.0, 0.2): 0.733333333333
(9, 100.0, 0.3): 0.866666666667

Accuracy mean :0.39764705882352935
Std deviation :0.15456354196388417
Loss mean :0.6023529411764706
Std deviation :0.15456354196388414



Linear_2dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 2
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: Linear
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 0.2): 0.933333333333
(1, 1.0, 0.2): 0.6
(2, 100.0, 0.2): 0.733333333333
(3, 100.0, 0.2): 0.8
(4, 100.0, 0.2): 0.8
(5, 10.0, 0.2): 0.8
(6, 1.0, 0.2): 0.866666666667
(7, 100.0, 0.2): 0.933333333333
(8, 100.0, 0.2): 0.933333333333
(9, 100.0, 0.1): 0.6

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 0.2): 0.0666666666667
(1, 1.0, 0.2): 0.4
(2, 100.0, 0.2): 0.266666666667
(3, 100.0, 0.2): 0.2
(4, 100.0, 0.2): 0.2
(5, 10.0, 0.2): 0.2
(6, 1.0, 0.2): 0.133333333333
(7, 100.0, 0.2): 0.0666666666667
(8, 100.0, 0.2): 0.0666666666667
(9, 100.0, 0.1): 0.4

Accuracy mean :0.8
Std deviation :0.11925695879998881
Loss mean :0.2
Std deviation :0.1192569587999888

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 100.0, 0.2): 0.874074074074
(1, 1.0, 0.2): 0.77037037037
(2, 100.0, 0.2): 0.896296296296
(3, 100.0, 0.2): 0.881481481481
(4, 100.0, 0.2): 0.888888888889
(5, 10.0, 0.2): 0.874074074074
(6, 1.0, 0.2): 0.866666666667
(7, 100.0, 0.2): 0.874074074074
(8, 100.0, 0.2): 0.866666666667
(9, 100.0, 0.1): 0.711111111111
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 0.2): 0.125925925926
(1, 1.0, 0.2): 0.22962962963
(2, 100.0, 0.2): 0.103703703704
(3, 100.0, 0.2): 0.118518518519
(4, 100.0, 0.2): 0.111111111111
(5, 10.0, 0.2): 0.125925925926
(6, 1.0, 0.2): 0.133333333333
(7, 100.0, 0.2): 0.125925925926
(8, 100.0, 0.2): 0.133333333333
(9, 100.0, 0.1): 0.288888888889

Accuracy mean :0.8503703703703703
Std deviation :0.05707069713854287
Loss mean :0.14962962962962964
Std deviation :0.05707069713854287

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 0.1): 0.333333333333
(0, 1.0, 0.2): 0.866666666667
(0, 1.0, 0.3): 0.666666666667
(0, 10.0, 0.1): 0.266666666667
(0, 10.0, 0.2): 0.866666666667
(0, 10.0, 0.3): 0.466666666667
(0, 100.0, 0.1): 0.333333333333
(0, 100.0, 0.2): 0.933333333333
(0, 100.0, 0.3): 0.466666666667
(1, 1.0, 0.1): 0.6
(1, 1.0, 0.2): 0.866666666667
(1, 1.0, 0.3): 0.733333333333
(1, 10.0, 0.1): 0.6
(1, 10.0, 0.2): 0.866666666667
(1, 10.0, 0.3): 0.733333333333
(1, 100.0, 0.1): 0.666666666667
(1, 100.0, 0.2): 0.866666666667
(1, 100.0, 0.3): 0.733333333333
(2, 1.0, 0.1): 0.333333333333
(2, 1.0, 0.2): 0.933333333333
(2, 1.0, 0.3): 0.933333333333
(2, 10.0, 0.1): 0.333333333333
(2, 10.0, 0.2): 1.0
(2, 10.0, 0.3): 0.933333333333
(2, 100.0, 0.1): 0.333333333333
(2, 100.0, 0.2): 1.0
(2, 100.0, 0.3): 0.933333333333
(3, 0.1, 0.3): 0.266666666667
(3, 1.0, 0.1): 0.266666666667
(3, 1.0, 0.2): 0.933333333333
(3, 1.0, 0.3): 0.533333333333
(3, 10.0, 0.1): 0.266666666667
(3, 10.0, 0.2): 0.933333333333
(3, 10.0, 0.3): 0.533333333333
(3, 100.0, 0.1): 0.266666666667
(3, 100.0, 0.2): 0.933333333333
(3, 100.0, 0.3): 0.533333333333
(4, 1.0, 0.1): 0.866666666667
(4, 1.0, 0.2): 0.933333333333
(4, 1.0, 0.3): 0.866666666667
(4, 10.0, 0.1): 0.8
(4, 10.0, 0.2): 0.933333333333
(4, 10.0, 0.3): 0.866666666667
(4, 100.0, 0.1): 0.8
(4, 100.0, 0.2): 0.933333333333
(4, 100.0, 0.3): 0.866666666667
(5, 1.0, 0.2): 0.866666666667
(5, 1.0, 0.3): 0.6
(5, 10.0, 0.2): 0.866666666667
(5, 10.0, 0.3): 0.666666666667
(5, 100.0, 0.2): 0.866666666667
(5, 100.0, 0.3): 0.6
(6, 0.1, 0.3): 0.733333333333
(6, 1.0, 0.1): 0.533333333333
(6, 1.0, 0.2): 1.0
(6, 1.0, 0.3): 0.733333333333
(6, 10.0, 0.1): 0.466666666667
(6, 10.0, 0.2): 1.0
(6, 10.0, 0.3): 0.733333333333
(6, 100.0, 0.1): 0.4
(6, 100.0, 0.2): 1.0
(6, 100.0, 0.3): 0.733333333333
(7, 1.0, 0.1): 0.733333333333
(7, 1.0, 0.2): 0.8
(7, 1.0, 0.3): 0.6
(7, 10.0, 0.2): 0.8
(7, 10.0, 0.3): 0.6
(7, 100.0, 0.2): 0.866666666667
(7, 100.0, 0.3): 0.6
(8, 1.0, 0.1): 0.733333333333
(8, 1.0, 0.2): 0.933333333333
(8, 1.0, 0.3): 0.533333333333
(8, 10.0, 0.1): 0.8
(8, 10.0, 0.2): 0.933333333333
(8, 10.0, 0.3): 0.533333333333
(8, 100.0, 0.1): 0.733333333333
(8, 100.0, 0.2): 0.933333333333
(8, 100.0, 0.3): 0.533333333333
(9, 1.0, 0.2): 0.333333333333
(9, 1.0, 0.3): 0.6
(9, 10.0, 0.2): 0.266666666667
(9, 10.0, 0.3): 0.6
(9, 100.0, 0.1): 0.8
(9, 100.0, 0.2): 0.266666666667
(9, 100.0, 0.3): 0.6

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 0.1): 0.666666666667
(0, 1.0, 0.2): 0.133333333333
(0, 1.0, 0.3): 0.333333333333
(0, 10.0, 0.1): 0.733333333333
(0, 10.0, 0.2): 0.133333333333
(0, 10.0, 0.3): 0.533333333333
(0, 100.0, 0.1): 0.666666666667
(0, 100.0, 0.2): 0.0666666666667
(0, 100.0, 0.3): 0.533333333333
(1, 1.0, 0.1): 0.4
(1, 1.0, 0.2): 0.133333333333
(1, 1.0, 0.3): 0.266666666667
(1, 10.0, 0.1): 0.4
(1, 10.0, 0.2): 0.133333333333
(1, 10.0, 0.3): 0.266666666667
(1, 100.0, 0.1): 0.333333333333
(1, 100.0, 0.2): 0.133333333333
(1, 100.0, 0.3): 0.266666666667
(2, 1.0, 0.1): 0.666666666667
(2, 1.0, 0.2): 0.0666666666667
(2, 1.0, 0.3): 0.0666666666667
(2, 10.0, 0.1): 0.666666666667
(2, 10.0, 0.2): 0.0
(2, 10.0, 0.3): 0.0666666666667
(2, 100.0, 0.1): 0.666666666667
(2, 100.0, 0.2): 0.0
(2, 100.0, 0.3): 0.0666666666667
(3, 0.1, 0.3): 0.733333333333
(3, 1.0, 0.1): 0.733333333333
(3, 1.0, 0.2): 0.0666666666667
(3, 1.0, 0.3): 0.466666666667
(3, 10.0, 0.1): 0.733333333333
(3, 10.0, 0.2): 0.0666666666667
(3, 10.0, 0.3): 0.466666666667
(3, 100.0, 0.1): 0.733333333333
(3, 100.0, 0.2): 0.0666666666667
(3, 100.0, 0.3): 0.466666666667
(4, 1.0, 0.1): 0.133333333333
(4, 1.0, 0.2): 0.0666666666667
(4, 1.0, 0.3): 0.133333333333
(4, 10.0, 0.1): 0.2
(4, 10.0, 0.2): 0.0666666666667
(4, 10.0, 0.3): 0.133333333333
(4, 100.0, 0.1): 0.2
(4, 100.0, 0.2): 0.0666666666667
(4, 100.0, 0.3): 0.133333333333
(5, 1.0, 0.2): 0.133333333333
(5, 1.0, 0.3): 0.4
(5, 10.0, 0.2): 0.133333333333
(5, 10.0, 0.3): 0.333333333333
(5, 100.0, 0.2): 0.133333333333
(5, 100.0, 0.3): 0.4
(6, 0.1, 0.3): 0.266666666667
(6, 1.0, 0.1): 0.466666666667
(6, 1.0, 0.2): 0.0
(6, 1.0, 0.3): 0.266666666667
(6, 10.0, 0.1): 0.533333333333
(6, 10.0, 0.2): 0.0
(6, 10.0, 0.3): 0.266666666667
(6, 100.0, 0.1): 0.6
(6, 100.0, 0.2): 0.0
(6, 100.0, 0.3): 0.266666666667
(7, 1.0, 0.1): 0.266666666667
(7, 1.0, 0.2): 0.2
(7, 1.0, 0.3): 0.4
(7, 10.0, 0.2): 0.2
(7, 10.0, 0.3): 0.4
(7, 100.0, 0.2): 0.133333333333
(7, 100.0, 0.3): 0.4
(8, 1.0, 0.1): 0.266666666667
(8, 1.0, 0.2): 0.0666666666667
(8, 1.0, 0.3): 0.466666666667
(8, 10.0, 0.1): 0.2
(8, 10.0, 0.2): 0.0666666666667
(8, 10.0, 0.3): 0.466666666667
(8, 100.0, 0.1): 0.266666666667
(8, 100.0, 0.2): 0.0666666666667
(8, 100.0, 0.3): 0.466666666667
(9, 1.0, 0.2): 0.666666666667
(9, 1.0, 0.3): 0.4
(9, 10.0, 0.2): 0.733333333333
(9, 10.0, 0.3): 0.4
(9, 100.0, 0.1): 0.2
(9, 100.0, 0.2): 0.733333333333
(9, 100.0, 0.3): 0.4

Accuracy mean :0.6925490196078431
Std deviation :0.22523054103892282
Loss mean :0.30745098039215685
Std deviation :0.22523054103892282



QuantileConstPiecewise_2dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 2
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: QuantileConstPiecewise
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 0.3): 0.6
(1, 100.0, 0.3): 0.6
(2, 10.0, 0.3): 0.866666666667
(3, 10.0, 0.3): 0.666666666667
(4, 100.0, 0.3): 0.733333333333
(5, 1.0, 0.3): 0.0
(6, 0.1, 0.3): 0.6
(7, 1.0, 0.3): 0.4
(8, 1.0, 0.3): 0.533333333333
(9, 100.0, 0.3): 0.533333333333

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 0.3): 0.4
(1, 100.0, 0.3): 0.4
(2, 10.0, 0.3): 0.133333333333
(3, 10.0, 0.3): 0.333333333333
(4, 100.0, 0.3): 0.266666666667
(5, 1.0, 0.3): 1.0
(6, 0.1, 0.3): 0.4
(7, 1.0, 0.3): 0.6
(8, 1.0, 0.3): 0.466666666667
(9, 100.0, 0.3): 0.466666666667

Accuracy mean :0.5533333333333333
Std deviation :0.21919042963698127
Loss mean :0.44666666666666666
Std deviation :0.21919042963698127

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 10.0, 0.3): 0.659259259259
(1, 100.0, 0.3): 0.666666666667
(2, 10.0, 0.3): 0.711111111111
(3, 10.0, 0.3): 0.659259259259
(4, 100.0, 0.3): 0.681481481481
(5, 1.0, 0.3): 0.362962962963
(6, 0.1, 0.3): 0.762962962963
(7, 1.0, 0.3): 0.303703703704
(8, 1.0, 0.3): 0.711111111111
(9, 100.0, 0.3): 0.681481481481
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 0.3): 0.340740740741
(1, 100.0, 0.3): 0.333333333333
(2, 10.0, 0.3): 0.288888888889
(3, 10.0, 0.3): 0.340740740741
(4, 100.0, 0.3): 0.318518518519
(5, 1.0, 0.3): 0.637037037037
(6, 0.1, 0.3): 0.237037037037
(7, 1.0, 0.3): 0.696296296296
(8, 1.0, 0.3): 0.288888888889
(9, 100.0, 0.3): 0.318518518519

Accuracy mean :0.6199999999999999
Std deviation :0.14696005074772883
Loss mean :0.38
Std deviation :0.14696005074772886

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 0.1, 0.3): 0.533333333333
(0, 1.0, 0.2): 0.533333333333
(0, 1.0, 0.3): 0.533333333333
(0, 10.0, 0.1): 0.333333333333
(0, 10.0, 0.2): 0.333333333333
(0, 10.0, 0.3): 0.533333333333
(0, 100.0, 0.2): 0.4
(0, 100.0, 0.3): 0.533333333333
(1, 1.0, 0.1): 0.4
(1, 1.0, 0.2): 0.4
(1, 1.0, 0.3): 0.6
(1, 10.0, 0.1): 0.133333333333
(1, 10.0, 0.2): 0.533333333333
(1, 10.0, 0.3): 0.6
(1, 100.0, 0.1): 0.4
(1, 100.0, 0.2): 0.333333333333
(1, 100.0, 0.3): 0.6
(2, 1.0, 0.2): 0.733333333333
(2, 1.0, 0.3): 0.8
(2, 10.0, 0.2): 0.6
(2, 10.0, 0.3): 0.866666666667
(2, 100.0, 0.2): 0.533333333333
(2, 100.0, 0.3): 0.666666666667
(3, 1.0, 0.1): 0.4
(3, 1.0, 0.2): 0.466666666667
(3, 1.0, 0.3): 0.6
(3, 10.0, 0.1): 0.4
(3, 10.0, 0.2): 0.466666666667
(3, 10.0, 0.3): 0.8
(3, 100.0, 0.1): 0.466666666667
(3, 100.0, 0.2): 0.4
(3, 100.0, 0.3): 0.6
(4, 1.0, 0.1): 0.133333333333
(4, 1.0, 0.2): 0.466666666667
(4, 1.0, 0.3): 0.733333333333
(4, 10.0, 0.1): 0.266666666667
(4, 10.0, 0.2): 0.533333333333
(4, 10.0, 0.3): 0.8
(4, 100.0, 0.1): 0.333333333333
(4, 100.0, 0.2): 0.533333333333
(4, 100.0, 0.3): 0.866666666667
(5, 1.0, 0.1): 0.266666666667
(5, 1.0, 0.2): 0.466666666667
(5, 1.0, 0.3): 0.8
(5, 10.0, 0.1): 0.333333333333
(5, 10.0, 0.2): 0.6
(5, 10.0, 0.3): 0.733333333333
(5, 100.0, 0.1): 0.2
(5, 100.0, 0.2): 0.533333333333
(5, 100.0, 0.3): 0.733333333333
(6, 0.1, 0.3): 0.733333333333
(6, 1.0, 0.1): 0.333333333333
(6, 1.0, 0.2): 0.266666666667
(6, 1.0, 0.3): 0.733333333333
(6, 10.0, 0.1): 0.466666666667
(6, 10.0, 0.2): 0.2
(6, 10.0, 0.3): 0.733333333333
(6, 100.0, 0.1): 0.333333333333
(6, 100.0, 0.2): 0.333333333333
(6, 100.0, 0.3): 0.733333333333
(7, 1.0, 0.1): 0.333333333333
(7, 1.0, 0.2): 0.866666666667
(7, 1.0, 0.3): 0.866666666667
(7, 10.0, 0.1): 0.333333333333
(7, 10.0, 0.2): 0.466666666667
(7, 10.0, 0.3): 0.133333333333
(7, 100.0, 0.1): 0.266666666667
(7, 100.0, 0.2): 0.666666666667
(7, 100.0, 0.3): 0.8
(8, 1.0, 0.1): 0.133333333333
(8, 1.0, 0.2): 0.4
(8, 1.0, 0.3): 0.733333333333
(8, 10.0, 0.1): 0.133333333333
(8, 10.0, 0.2): 0.466666666667
(8, 10.0, 0.3): 0.133333333333
(8, 100.0, 0.2): 0.533333333333
(8, 100.0, 0.3): 0.466666666667
(9, 0.1, 0.3): 0.666666666667
(9, 1.0, 0.1): 0.333333333333
(9, 1.0, 0.2): 0.466666666667
(9, 1.0, 0.3): 0.666666666667
(9, 10.0, 0.1): 0.333333333333
(9, 10.0, 0.2): 0.666666666667
(9, 10.0, 0.3): 0.666666666667
(9, 100.0, 0.1): 0.4
(9, 100.0, 0.2): 0.6
(9, 100.0, 0.3): 0.666666666667

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 0.1, 0.3): 0.466666666667
(0, 1.0, 0.2): 0.466666666667
(0, 1.0, 0.3): 0.466666666667
(0, 10.0, 0.1): 0.666666666667
(0, 10.0, 0.2): 0.666666666667
(0, 10.0, 0.3): 0.466666666667
(0, 100.0, 0.2): 0.6
(0, 100.0, 0.3): 0.466666666667
(1, 1.0, 0.1): 0.6
(1, 1.0, 0.2): 0.6
(1, 1.0, 0.3): 0.4
(1, 10.0, 0.1): 0.866666666667
(1, 10.0, 0.2): 0.466666666667
(1, 10.0, 0.3): 0.4
(1, 100.0, 0.1): 0.6
(1, 100.0, 0.2): 0.666666666667
(1, 100.0, 0.3): 0.4
(2, 1.0, 0.2): 0.266666666667
(2, 1.0, 0.3): 0.2
(2, 10.0, 0.2): 0.4
(2, 10.0, 0.3): 0.133333333333
(2, 100.0, 0.2): 0.466666666667
(2, 100.0, 0.3): 0.333333333333
(3, 1.0, 0.1): 0.6
(3, 1.0, 0.2): 0.533333333333
(3, 1.0, 0.3): 0.4
(3, 10.0, 0.1): 0.6
(3, 10.0, 0.2): 0.533333333333
(3, 10.0, 0.3): 0.2
(3, 100.0, 0.1): 0.533333333333
(3, 100.0, 0.2): 0.6
(3, 100.0, 0.3): 0.4
(4, 1.0, 0.1): 0.866666666667
(4, 1.0, 0.2): 0.533333333333
(4, 1.0, 0.3): 0.266666666667
(4, 10.0, 0.1): 0.733333333333
(4, 10.0, 0.2): 0.466666666667
(4, 10.0, 0.3): 0.2
(4, 100.0, 0.1): 0.666666666667
(4, 100.0, 0.2): 0.466666666667
(4, 100.0, 0.3): 0.133333333333
(5, 1.0, 0.1): 0.733333333333
(5, 1.0, 0.2): 0.533333333333
(5, 1.0, 0.3): 0.2
(5, 10.0, 0.1): 0.666666666667
(5, 10.0, 0.2): 0.4
(5, 10.0, 0.3): 0.266666666667
(5, 100.0, 0.1): 0.8
(5, 100.0, 0.2): 0.466666666667
(5, 100.0, 0.3): 0.266666666667
(6, 0.1, 0.3): 0.266666666667
(6, 1.0, 0.1): 0.666666666667
(6, 1.0, 0.2): 0.733333333333
(6, 1.0, 0.3): 0.266666666667
(6, 10.0, 0.1): 0.533333333333
(6, 10.0, 0.2): 0.8
(6, 10.0, 0.3): 0.266666666667
(6, 100.0, 0.1): 0.666666666667
(6, 100.0, 0.2): 0.666666666667
(6, 100.0, 0.3): 0.266666666667
(7, 1.0, 0.1): 0.666666666667
(7, 1.0, 0.2): 0.133333333333
(7, 1.0, 0.3): 0.133333333333
(7, 10.0, 0.1): 0.666666666667
(7, 10.0, 0.2): 0.533333333333
(7, 10.0, 0.3): 0.866666666667
(7, 100.0, 0.1): 0.733333333333
(7, 100.0, 0.2): 0.333333333333
(7, 100.0, 0.3): 0.2
(8, 1.0, 0.1): 0.866666666667
(8, 1.0, 0.2): 0.6
(8, 1.0, 0.3): 0.266666666667
(8, 10.0, 0.1): 0.866666666667
(8, 10.0, 0.2): 0.533333333333
(8, 10.0, 0.3): 0.866666666667
(8, 100.0, 0.2): 0.466666666667
(8, 100.0, 0.3): 0.533333333333
(9, 0.1, 0.3): 0.333333333333
(9, 1.0, 0.1): 0.666666666667
(9, 1.0, 0.2): 0.533333333333
(9, 1.0, 0.3): 0.333333333333
(9, 10.0, 0.1): 0.666666666667
(9, 10.0, 0.2): 0.333333333333
(9, 10.0, 0.3): 0.333333333333
(9, 100.0, 0.1): 0.6
(9, 100.0, 0.2): 0.4
(9, 100.0, 0.3): 0.333333333333

Accuracy mean :0.5049808429118774
Std deviation :0.19772193897048287
Loss mean :0.49501915708812255
Std deviation :0.19772193897048287



Crisp_3dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 3
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: Crisp
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 0.3): 0.266666666667
(1, 10.0, 0.2): 0.4
(2, 10.0, 0.3): 0.4
(3, 1.0, 0.3): 0.333333333333
(4, 1.0, 0.2): 0.4
(5, 1.0, 0.3): 0.333333333333
(6, 1.0, 0.2): 0.333333333333
(7, 1.0, 0.2): 0.533333333333
(8, 1.0, 0.3): 0.4
(9, 1.0, 0.3): 0.133333333333

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 0.3): 0.733333333333
(1, 10.0, 0.2): 0.6
(2, 10.0, 0.3): 0.6
(3, 1.0, 0.3): 0.666666666667
(4, 1.0, 0.2): 0.6
(5, 1.0, 0.3): 0.666666666667
(6, 1.0, 0.2): 0.666666666667
(7, 1.0, 0.2): 0.466666666667
(8, 1.0, 0.3): 0.6
(9, 1.0, 0.3): 0.866666666667

Accuracy mean :0.3533333333333334
Std deviation :0.09910712498212337
Loss mean :0.6466666666666667
Std deviation :0.09910712498212337

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 100.0, 0.3): 0.533333333333
(1, 10.0, 0.2): 0.437037037037
(2, 10.0, 0.3): 0.518518518519
(3, 1.0, 0.3): 0.511111111111
(4, 1.0, 0.2): 0.4
(5, 1.0, 0.3): 0.42962962963
(6, 1.0, 0.2): 0.466666666667
(7, 1.0, 0.2): 0.488888888889
(8, 1.0, 0.3): 0.562962962963
(9, 1.0, 0.3): 0.355555555556
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 0.3): 0.466666666667
(1, 10.0, 0.2): 0.562962962963
(2, 10.0, 0.3): 0.481481481481
(3, 1.0, 0.3): 0.488888888889
(4, 1.0, 0.2): 0.6
(5, 1.0, 0.3): 0.57037037037
(6, 1.0, 0.2): 0.533333333333
(7, 1.0, 0.2): 0.511111111111
(8, 1.0, 0.3): 0.437037037037
(9, 1.0, 0.3): 0.644444444444

Accuracy mean :0.47037037037037044
Std deviation :0.06146362971528591
Loss mean :0.5296296296296296
Std deviation :0.061463629715285927

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 0.2): 0.333333333333
(0, 1.0, 0.3): 0.466666666667
(0, 10.0, 0.2): 0.333333333333
(0, 10.0, 0.3): 0.466666666667
(0, 100.0, 0.2): 0.4
(0, 100.0, 0.3): 0.666666666667
(1, 1.0, 0.2): 0.4
(1, 1.0, 0.3): 0.4
(1, 10.0, 0.2): 0.533333333333
(1, 10.0, 0.3): 0.266666666667
(1, 100.0, 0.2): 0.4
(1, 100.0, 0.3): 0.2
(2, 1.0, 0.2): 0.333333333333
(2, 1.0, 0.3): 0.466666666667
(2, 10.0, 0.2): 0.333333333333
(2, 10.0, 0.3): 0.466666666667
(2, 100.0, 0.2): 0.333333333333
(2, 100.0, 0.3): 0.466666666667
(3, 1.0, 0.3): 0.4
(3, 10.0, 0.3): 0.4
(3, 100.0, 0.3): 0.4
(4, 1.0, 0.2): 0.733333333333
(4, 1.0, 0.3): 0.533333333333
(4, 10.0, 0.2): 0.466666666667
(4, 10.0, 0.3): 0.466666666667
(4, 100.0, 0.2): 0.6
(4, 100.0, 0.3): 0.533333333333
(5, 1.0, 0.2): 0.4
(5, 1.0, 0.3): 0.466666666667
(5, 10.0, 0.2): 0.2
(5, 10.0, 0.3): 0.266666666667
(5, 100.0, 0.2): 0.333333333333
(5, 100.0, 0.3): 0.466666666667
(6, 1.0, 0.2): 0.466666666667
(6, 1.0, 0.3): 0.333333333333
(6, 10.0, 0.2): 0.4
(6, 10.0, 0.3): 0.266666666667
(6, 100.0, 0.2): 0.4
(6, 100.0, 0.3): 0.2
(7, 1.0, 0.2): 0.333333333333
(7, 1.0, 0.3): 0.266666666667
(7, 10.0, 0.2): 0.266666666667
(7, 10.0, 0.3): 0.266666666667
(7, 100.0, 0.2): 0.333333333333
(7, 100.0, 0.3): 0.2
(8, 1.0, 0.3): 0.266666666667
(8, 10.0, 0.3): 0.2
(8, 100.0, 0.3): 0.266666666667
(9, 1.0, 0.2): 0.2
(9, 1.0, 0.3): 0.4
(9, 10.0, 0.2): 0.333333333333
(9, 10.0, 0.3): 0.4
(9, 100.0, 0.2): 0.2
(9, 100.0, 0.3): 0.4

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 0.2): 0.666666666667
(0, 1.0, 0.3): 0.533333333333
(0, 10.0, 0.2): 0.666666666667
(0, 10.0, 0.3): 0.533333333333
(0, 100.0, 0.2): 0.6
(0, 100.0, 0.3): 0.333333333333
(1, 1.0, 0.2): 0.6
(1, 1.0, 0.3): 0.6
(1, 10.0, 0.2): 0.466666666667
(1, 10.0, 0.3): 0.733333333333
(1, 100.0, 0.2): 0.6
(1, 100.0, 0.3): 0.8
(2, 1.0, 0.2): 0.666666666667
(2, 1.0, 0.3): 0.533333333333
(2, 10.0, 0.2): 0.666666666667
(2, 10.0, 0.3): 0.533333333333
(2, 100.0, 0.2): 0.666666666667
(2, 100.0, 0.3): 0.533333333333
(3, 1.0, 0.3): 0.6
(3, 10.0, 0.3): 0.6
(3, 100.0, 0.3): 0.6
(4, 1.0, 0.2): 0.266666666667
(4, 1.0, 0.3): 0.466666666667
(4, 10.0, 0.2): 0.533333333333
(4, 10.0, 0.3): 0.533333333333
(4, 100.0, 0.2): 0.4
(4, 100.0, 0.3): 0.466666666667
(5, 1.0, 0.2): 0.6
(5, 1.0, 0.3): 0.533333333333
(5, 10.0, 0.2): 0.8
(5, 10.0, 0.3): 0.733333333333
(5, 100.0, 0.2): 0.666666666667
(5, 100.0, 0.3): 0.533333333333
(6, 1.0, 0.2): 0.533333333333
(6, 1.0, 0.3): 0.666666666667
(6, 10.0, 0.2): 0.6
(6, 10.0, 0.3): 0.733333333333
(6, 100.0, 0.2): 0.6
(6, 100.0, 0.3): 0.8
(7, 1.0, 0.2): 0.666666666667
(7, 1.0, 0.3): 0.733333333333
(7, 10.0, 0.2): 0.733333333333
(7, 10.0, 0.3): 0.733333333333
(7, 100.0, 0.2): 0.666666666667
(7, 100.0, 0.3): 0.8
(8, 1.0, 0.3): 0.733333333333
(8, 10.0, 0.3): 0.8
(8, 100.0, 0.3): 0.733333333333
(9, 1.0, 0.2): 0.8
(9, 1.0, 0.3): 0.6
(9, 10.0, 0.2): 0.666666666667
(9, 10.0, 0.3): 0.6
(9, 100.0, 0.2): 0.8
(9, 100.0, 0.3): 0.6

Accuracy mean :0.37654320987654305
Std deviation :0.1183962847038369
Loss mean :0.6234567901234568
Std deviation :0.1183962847038369



Linear_3dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 3
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: Linear
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 0.2): 1.0
(1, 10.0, 0.3): 0.6
(2, 100.0, 0.2): 0.933333333333
(3, 1.0, 0.3): 0.933333333333
(4, 100.0, 0.2): 0.933333333333
(5, 100.0, 0.2): 0.933333333333
(6, 10.0, 0.2): 0.933333333333
(7, 100.0, 0.2): 0.733333333333
(8, 1.0, 0.2): 0.866666666667
(9, 100.0, 0.2): 0.933333333333

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 0.2): 0.0
(1, 10.0, 0.3): 0.4
(2, 100.0, 0.2): 0.0666666666667
(3, 1.0, 0.3): 0.0666666666667
(4, 100.0, 0.2): 0.0666666666667
(5, 100.0, 0.2): 0.0666666666667
(6, 10.0, 0.2): 0.0666666666667
(7, 100.0, 0.2): 0.266666666667
(8, 1.0, 0.2): 0.133333333333
(9, 100.0, 0.2): 0.0666666666667

Accuracy mean :0.8800000000000001
Std deviation :0.11469767022723504
Loss mean :0.12
Std deviation :0.11469767022723502

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 1.0, 0.2): 0.925925925926
(1, 10.0, 0.3): 0.696296296296
(2, 100.0, 0.2): 0.911111111111
(3, 1.0, 0.3): 0.681481481481
(4, 100.0, 0.2): 0.918518518519
(5, 100.0, 0.2): 0.903703703704
(6, 10.0, 0.2): 0.918518518519
(7, 100.0, 0.2): 0.888888888889
(8, 1.0, 0.2): 0.888888888889
(9, 100.0, 0.2): 0.874074074074
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 0.2): 0.0740740740741
(1, 10.0, 0.3): 0.303703703704
(2, 100.0, 0.2): 0.0888888888889
(3, 1.0, 0.3): 0.318518518519
(4, 100.0, 0.2): 0.0814814814815
(5, 100.0, 0.2): 0.0962962962963
(6, 10.0, 0.2): 0.0814814814815
(7, 100.0, 0.2): 0.111111111111
(8, 1.0, 0.2): 0.111111111111
(9, 100.0, 0.2): 0.125925925926

Accuracy mean :0.8607407407407406
Std deviation :0.08731947868617111
Loss mean :0.13925925925925928
Std deviation :0.08731947868617111

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 0.1, 0.3): 0.6
(0, 1.0, 0.2): 0.866666666667
(0, 1.0, 0.3): 0.6
(0, 10.0, 0.2): 0.333333333333
(0, 10.0, 0.3): 0.333333333333
(0, 100.0, 0.2): 0.333333333333
(0, 100.0, 0.3): 0.333333333333
(1, 1.0, 0.2): 0.8
(1, 1.0, 0.3): 0.866666666667
(1, 10.0, 0.2): 0.8
(1, 10.0, 0.3): 0.866666666667
(1, 100.0, 0.2): 0.8
(1, 100.0, 0.3): 0.866666666667
(2, 1.0, 0.2): 0.2
(2, 1.0, 0.3): 0.533333333333
(2, 10.0, 0.2): 0.2
(2, 10.0, 0.3): 0.533333333333
(2, 100.0, 0.2): 0.8
(2, 100.0, 0.3): 0.533333333333
(3, 1.0, 0.3): 0.6
(3, 10.0, 0.3): 0.6
(3, 100.0, 0.3): 0.6
(4, 0.1, 0.3): 0.866666666667
(4, 1.0, 0.2): 0.933333333333
(4, 1.0, 0.3): 0.866666666667
(4, 10.0, 0.2): 0.933333333333
(4, 10.0, 0.3): 0.866666666667
(4, 100.0, 0.2): 0.933333333333
(4, 100.0, 0.3): 0.866666666667
(5, 1.0, 0.2): 0.8
(5, 1.0, 0.3): 0.333333333333
(5, 10.0, 0.2): 0.8
(5, 10.0, 0.3): 0.466666666667
(5, 100.0, 0.2): 0.866666666667
(5, 100.0, 0.3): 0.533333333333
(6, 1.0, 0.2): 0.866666666667
(6, 1.0, 0.3): 0.666666666667
(6, 10.0, 0.2): 0.933333333333
(6, 10.0, 0.3): 0.666666666667
(6, 100.0, 0.2): 0.866666666667
(6, 100.0, 0.3): 0.666666666667
(7, 0.1, 0.3): 0.8
(7, 1.0, 0.2): 0.8
(7, 1.0, 0.3): 0.666666666667
(7, 10.0, 0.2): 0.8
(7, 10.0, 0.3): 0.666666666667
(7, 100.0, 0.2): 0.8
(7, 100.0, 0.3): 0.666666666667
(8, 1.0, 0.2): 0.866666666667
(8, 1.0, 0.3): 0.6
(8, 10.0, 0.2): 0.866666666667
(8, 10.0, 0.3): 0.6
(8, 100.0, 0.2): 0.866666666667
(8, 100.0, 0.3): 0.6
(9, 1.0, 0.2): 0.8
(9, 1.0, 0.3): 0.6
(9, 10.0, 0.2): 0.8
(9, 10.0, 0.3): 0.6
(9, 100.0, 0.2): 0.866666666667
(9, 100.0, 0.3): 0.6

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 0.1, 0.3): 0.4
(0, 1.0, 0.2): 0.133333333333
(0, 1.0, 0.3): 0.4
(0, 10.0, 0.2): 0.666666666667
(0, 10.0, 0.3): 0.666666666667
(0, 100.0, 0.2): 0.666666666667
(0, 100.0, 0.3): 0.666666666667
(1, 1.0, 0.2): 0.2
(1, 1.0, 0.3): 0.133333333333
(1, 10.0, 0.2): 0.2
(1, 10.0, 0.3): 0.133333333333
(1, 100.0, 0.2): 0.2
(1, 100.0, 0.3): 0.133333333333
(2, 1.0, 0.2): 0.8
(2, 1.0, 0.3): 0.466666666667
(2, 10.0, 0.2): 0.8
(2, 10.0, 0.3): 0.466666666667
(2, 100.0, 0.2): 0.2
(2, 100.0, 0.3): 0.466666666667
(3, 1.0, 0.3): 0.4
(3, 10.0, 0.3): 0.4
(3, 100.0, 0.3): 0.4
(4, 0.1, 0.3): 0.133333333333
(4, 1.0, 0.2): 0.0666666666667
(4, 1.0, 0.3): 0.133333333333
(4, 10.0, 0.2): 0.0666666666667
(4, 10.0, 0.3): 0.133333333333
(4, 100.0, 0.2): 0.0666666666667
(4, 100.0, 0.3): 0.133333333333
(5, 1.0, 0.2): 0.2
(5, 1.0, 0.3): 0.666666666667
(5, 10.0, 0.2): 0.2
(5, 10.0, 0.3): 0.533333333333
(5, 100.0, 0.2): 0.133333333333
(5, 100.0, 0.3): 0.466666666667
(6, 1.0, 0.2): 0.133333333333
(6, 1.0, 0.3): 0.333333333333
(6, 10.0, 0.2): 0.0666666666667
(6, 10.0, 0.3): 0.333333333333
(6, 100.0, 0.2): 0.133333333333
(6, 100.0, 0.3): 0.333333333333
(7, 0.1, 0.3): 0.2
(7, 1.0, 0.2): 0.2
(7, 1.0, 0.3): 0.333333333333
(7, 10.0, 0.2): 0.2
(7, 10.0, 0.3): 0.333333333333
(7, 100.0, 0.2): 0.2
(7, 100.0, 0.3): 0.333333333333
(8, 1.0, 0.2): 0.133333333333
(8, 1.0, 0.3): 0.4
(8, 10.0, 0.2): 0.133333333333
(8, 10.0, 0.3): 0.4
(8, 100.0, 0.2): 0.133333333333
(8, 100.0, 0.3): 0.4
(9, 1.0, 0.2): 0.2
(9, 1.0, 0.3): 0.4
(9, 10.0, 0.2): 0.2
(9, 10.0, 0.3): 0.4
(9, 100.0, 0.2): 0.133333333333
(9, 100.0, 0.3): 0.4

Accuracy mean :0.6933333333333332
Std deviation :0.19175601782048554
Loss mean :0.30666666666666664
Std deviation :0.1917560178204855



QuantileConstPiecewise_3dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 3
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: QuantileConstPiecewise
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 0.2): 0.333333333333
(1, 10.0, 0.3): 0.4
(2, 1.0, 0.3): 0.466666666667
(3, 1.0, 0.2): 0.533333333333
(4, 10.0, 0.3): 0.666666666667
(5, 10.0, 0.2): 0.266666666667
(6, 1.0, 0.3): 0.466666666667
(7, 1.0, 0.3): 0.333333333333
(8, 10.0, 0.2): 0.266666666667
(9, 1.0, 0.3): 0.333333333333

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 0.2): 0.666666666667
(1, 10.0, 0.3): 0.6
(2, 1.0, 0.3): 0.533333333333
(3, 1.0, 0.2): 0.466666666667
(4, 10.0, 0.3): 0.333333333333
(5, 10.0, 0.2): 0.733333333333
(6, 1.0, 0.3): 0.533333333333
(7, 1.0, 0.3): 0.666666666667
(8, 10.0, 0.2): 0.733333333333
(9, 1.0, 0.3): 0.666666666667

Accuracy mean :0.4066666666666666
Std deviation :0.12092238098144703
Loss mean :0.5933333333333334
Std deviation :0.12092238098144702

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 1.0, 0.2): 0.333333333333
(1, 10.0, 0.3): 0.555555555556
(2, 1.0, 0.3): 0.481481481481
(3, 1.0, 0.2): 0.666666666667
(4, 10.0, 0.3): 0.577777777778
(5, 10.0, 0.2): 0.340740740741
(6, 1.0, 0.3): 0.6
(7, 1.0, 0.3): 0.548148148148
(8, 10.0, 0.2): 0.407407407407
(9, 1.0, 0.3): 0.577777777778
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 0.2): 0.666666666667
(1, 10.0, 0.3): 0.444444444444
(2, 1.0, 0.3): 0.518518518519
(3, 1.0, 0.2): 0.333333333333
(4, 10.0, 0.3): 0.422222222222
(5, 10.0, 0.2): 0.659259259259
(6, 1.0, 0.3): 0.4
(7, 1.0, 0.3): 0.451851851852
(8, 10.0, 0.2): 0.592592592593
(9, 1.0, 0.3): 0.422222222222

Accuracy mean :0.5088888888888888
Std deviation :0.107957721745595
Loss mean :0.49111111111111116
Std deviation :0.10795772174559498

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 0.2): 0.266666666667
(0, 1.0, 0.3): 0.0666666666667
(0, 10.0, 0.2): 0.266666666667
(0, 10.0, 0.3): 0.0666666666667
(0, 100.0, 0.2): 0.133333333333
(0, 100.0, 0.3): 0.0666666666667
(1, 1.0, 0.2): 0.4
(1, 1.0, 0.3): 0.2
(1, 10.0, 0.2): 0.133333333333
(1, 10.0, 0.3): 0.466666666667
(1, 100.0, 0.2): 0.333333333333
(1, 100.0, 0.3): 0.333333333333
(2, 1.0, 0.2): 0.266666666667
(2, 1.0, 0.3): 0.6
(2, 10.0, 0.3): 0.533333333333
(2, 100.0, 0.3): 0.4
(3, 0.1, 0.3): 0.666666666667
(3, 1.0, 0.2): 0.333333333333
(3, 1.0, 0.3): 0.266666666667
(3, 10.0, 0.2): 0.333333333333
(3, 10.0, 0.3): 0.266666666667
(3, 100.0, 0.2): 0.266666666667
(3, 100.0, 0.3): 0.266666666667
(4, 1.0, 0.2): 0.266666666667
(4, 1.0, 0.3): 0.533333333333
(4, 10.0, 0.3): 0.6
(4, 100.0, 0.2): 0.266666666667
(4, 100.0, 0.3): 0.4
(5, 1.0, 0.2): 0.2
(5, 1.0, 0.3): 0.333333333333
(5, 10.0, 0.2): 0.4
(5, 10.0, 0.3): 0.266666666667
(5, 100.0, 0.2): 0.4
(5, 100.0, 0.3): 0.4
(6, 0.1, 0.3): 0.533333333333
(6, 1.0, 0.2): 0.2
(6, 1.0, 0.3): 0.533333333333
(6, 10.0, 0.2): 0.333333333333
(6, 10.0, 0.3): 0.333333333333
(6, 100.0, 0.2): 0.266666666667
(6, 100.0, 0.3): 0.466666666667
(7, 1.0, 0.2): 0.4
(7, 1.0, 0.3): 0.6
(7, 10.0, 0.2): 0.266666666667
(7, 10.0, 0.3): 0.6
(7, 100.0, 0.2): 0.333333333333
(7, 100.0, 0.3): 0.6
(8, 1.0, 0.2): 0.333333333333
(8, 1.0, 0.3): 0.266666666667
(8, 10.0, 0.2): 0.333333333333
(8, 10.0, 0.3): 0.2
(8, 100.0, 0.2): 0.133333333333
(8, 100.0, 0.3): 0.266666666667
(9, 1.0, 0.2): 0.266666666667
(9, 1.0, 0.3): 0.6
(9, 10.0, 0.2): 0.333333333333
(9, 10.0, 0.3): 0.466666666667
(9, 100.0, 0.2): 0.4
(9, 100.0, 0.3): 0.533333333333

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 0.2): 0.733333333333
(0, 1.0, 0.3): 0.933333333333
(0, 10.0, 0.2): 0.733333333333
(0, 10.0, 0.3): 0.933333333333
(0, 100.0, 0.2): 0.866666666667
(0, 100.0, 0.3): 0.933333333333
(1, 1.0, 0.2): 0.6
(1, 1.0, 0.3): 0.8
(1, 10.0, 0.2): 0.866666666667
(1, 10.0, 0.3): 0.533333333333
(1, 100.0, 0.2): 0.666666666667
(1, 100.0, 0.3): 0.666666666667
(2, 1.0, 0.2): 0.733333333333
(2, 1.0, 0.3): 0.4
(2, 10.0, 0.3): 0.466666666667
(2, 100.0, 0.3): 0.6
(3, 0.1, 0.3): 0.333333333333
(3, 1.0, 0.2): 0.666666666667
(3, 1.0, 0.3): 0.733333333333
(3, 10.0, 0.2): 0.666666666667
(3, 10.0, 0.3): 0.733333333333
(3, 100.0, 0.2): 0.733333333333
(3, 100.0, 0.3): 0.733333333333
(4, 1.0, 0.2): 0.733333333333
(4, 1.0, 0.3): 0.466666666667
(4, 10.0, 0.3): 0.4
(4, 100.0, 0.2): 0.733333333333
(4, 100.0, 0.3): 0.6
(5, 1.0, 0.2): 0.8
(5, 1.0, 0.3): 0.666666666667
(5, 10.0, 0.2): 0.6
(5, 10.0, 0.3): 0.733333333333
(5, 100.0, 0.2): 0.6
(5, 100.0, 0.3): 0.6
(6, 0.1, 0.3): 0.466666666667
(6, 1.0, 0.2): 0.8
(6, 1.0, 0.3): 0.466666666667
(6, 10.0, 0.2): 0.666666666667
(6, 10.0, 0.3): 0.666666666667
(6, 100.0, 0.2): 0.733333333333
(6, 100.0, 0.3): 0.533333333333
(7, 1.0, 0.2): 0.6
(7, 1.0, 0.3): 0.4
(7, 10.0, 0.2): 0.733333333333
(7, 10.0, 0.3): 0.4
(7, 100.0, 0.2): 0.666666666667
(7, 100.0, 0.3): 0.4
(8, 1.0, 0.2): 0.666666666667
(8, 1.0, 0.3): 0.733333333333
(8, 10.0, 0.2): 0.666666666667
(8, 10.0, 0.3): 0.8
(8, 100.0, 0.2): 0.866666666667
(8, 100.0, 0.3): 0.733333333333
(9, 1.0, 0.2): 0.733333333333
(9, 1.0, 0.3): 0.4
(9, 10.0, 0.2): 0.666666666667
(9, 10.0, 0.3): 0.533333333333
(9, 100.0, 0.2): 0.6
(9, 100.0, 0.3): 0.466666666667

Accuracy mean :0.34915254237288135
Std deviation :0.14746520317356338
Loss mean :0.6508474576271185
Std deviation :0.1474652031735634



Crisp_4dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 4
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: Crisp
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 0.2): 0.2
(1, 10.0, 0.3): 0.4
(2, 1.0, 0.3): 0.4
(3, 100.0, 0.3): 0.466666666667
(4, 0.1, 0.3): 0.266666666667
(5, 1.0, 0.2): 0.4
(6, 1.0, 0.2): 0.333333333333
(7, 0.1, 0.3): 0.266666666667
(8, 100.0, 0.2): 0.2
(9, 100.0, 0.3): 0.533333333333

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 0.2): 0.8
(1, 10.0, 0.3): 0.6
(2, 1.0, 0.3): 0.6
(3, 100.0, 0.3): 0.533333333333
(4, 0.1, 0.3): 0.733333333333
(5, 1.0, 0.2): 0.6
(6, 1.0, 0.2): 0.666666666667
(7, 0.1, 0.3): 0.733333333333
(8, 100.0, 0.2): 0.8
(9, 100.0, 0.3): 0.466666666667

Accuracy mean :0.3466666666666667
Std deviation :0.10666666666666667
Loss mean :0.6533333333333333
Std deviation :0.10666666666666667

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 100.0, 0.2): 0.325925925926
(1, 10.0, 0.3): 0.577777777778
(2, 1.0, 0.3): 0.511111111111
(3, 100.0, 0.3): 0.562962962963
(4, 0.1, 0.3): 0.340740740741
(5, 1.0, 0.2): 0.318518518519
(6, 1.0, 0.2): 0.414814814815
(7, 0.1, 0.3): 0.340740740741
(8, 100.0, 0.2): 0.348148148148
(9, 100.0, 0.3): 0.577777777778
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 0.2): 0.674074074074
(1, 10.0, 0.3): 0.422222222222
(2, 1.0, 0.3): 0.488888888889
(3, 100.0, 0.3): 0.437037037037
(4, 0.1, 0.3): 0.659259259259
(5, 1.0, 0.2): 0.681481481481
(6, 1.0, 0.2): 0.585185185185
(7, 0.1, 0.3): 0.659259259259
(8, 100.0, 0.2): 0.651851851852
(9, 100.0, 0.3): 0.422222222222

Accuracy mean :0.4318518518518518
Std deviation :0.10678234468207966
Loss mean :0.5681481481481481
Std deviation :0.10678234468207967

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 0.1, 0.3): 0.266666666667
(0, 1.0, 0.2): 0.4
(0, 1.0, 0.3): 0.266666666667
(0, 10.0, 0.2): 0.266666666667
(0, 10.0, 0.3): 0.266666666667
(0, 100.0, 0.2): 0.533333333333
(0, 100.0, 0.3): 0.266666666667
(1, 0.1, 0.3): 0.333333333333
(1, 1.0, 0.2): 0.4
(1, 1.0, 0.3): 0.4
(1, 10.0, 0.2): 0.533333333333
(1, 10.0, 0.3): 0.6
(1, 100.0, 0.2): 0.466666666667
(1, 100.0, 0.3): 0.333333333333
(2, 0.1, 0.2): 0.133333333333
(2, 0.1, 0.3): 0.466666666667
(2, 1.0, 0.2): 0.133333333333
(2, 1.0, 0.3): 0.466666666667
(2, 10.0, 0.3): 0.4
(2, 100.0, 0.3): 0.4
(3, 0.1, 0.3): 0.333333333333
(3, 1.0, 0.2): 0.333333333333
(3, 1.0, 0.3): 0.4
(3, 10.0, 0.2): 0.333333333333
(3, 10.0, 0.3): 0.333333333333
(3, 100.0, 0.2): 0.333333333333
(3, 100.0, 0.3): 0.533333333333
(4, 0.1, 0.3): 0.533333333333
(4, 1.0, 0.3): 0.133333333333
(4, 10.0, 0.3): 0.466666666667
(4, 100.0, 0.3): 0.4
(5, 0.1, 0.3): 0.466666666667
(5, 1.0, 0.2): 0.533333333333
(5, 1.0, 0.3): 0.266666666667
(5, 10.0, 0.2): 0.2
(5, 10.0, 0.3): 0.333333333333
(5, 100.0, 0.2): 0.2
(5, 100.0, 0.3): 0.533333333333
(6, 1.0, 0.2): 0.333333333333
(6, 1.0, 0.3): 0.2
(6, 10.0, 0.2): 0.333333333333
(6, 10.0, 0.3): 0.2
(6, 100.0, 0.2): 0.266666666667
(6, 100.0, 0.3): 0.133333333333
(7, 0.1, 0.3): 0.466666666667
(7, 1.0, 0.2): 0.266666666667
(7, 1.0, 0.3): 0.4
(7, 10.0, 0.2): 0.2
(7, 10.0, 0.3): 0.333333333333
(7, 100.0, 0.2): 0.2
(7, 100.0, 0.3): 0.4
(8, 1.0, 0.2): 0.333333333333
(8, 1.0, 0.3): 0.266666666667
(8, 10.0, 0.2): 0.333333333333
(8, 10.0, 0.3): 0.333333333333
(8, 100.0, 0.2): 0.4
(8, 100.0, 0.3): 0.266666666667
(9, 0.1, 0.3): 0.4
(9, 1.0, 0.2): 0.2
(9, 1.0, 0.3): 0.333333333333
(9, 10.0, 0.2): 0.2
(9, 10.0, 0.3): 0.133333333333
(9, 100.0, 0.2): 0.4
(9, 100.0, 0.3): 0.533333333333

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 0.1, 0.3): 0.733333333333
(0, 1.0, 0.2): 0.6
(0, 1.0, 0.3): 0.733333333333
(0, 10.0, 0.2): 0.733333333333
(0, 10.0, 0.3): 0.733333333333
(0, 100.0, 0.2): 0.466666666667
(0, 100.0, 0.3): 0.733333333333
(1, 0.1, 0.3): 0.666666666667
(1, 1.0, 0.2): 0.6
(1, 1.0, 0.3): 0.6
(1, 10.0, 0.2): 0.466666666667
(1, 10.0, 0.3): 0.4
(1, 100.0, 0.2): 0.533333333333
(1, 100.0, 0.3): 0.666666666667
(2, 0.1, 0.2): 0.866666666667
(2, 0.1, 0.3): 0.533333333333
(2, 1.0, 0.2): 0.866666666667
(2, 1.0, 0.3): 0.533333333333
(2, 10.0, 0.3): 0.6
(2, 100.0, 0.3): 0.6
(3, 0.1, 0.3): 0.666666666667
(3, 1.0, 0.2): 0.666666666667
(3, 1.0, 0.3): 0.6
(3, 10.0, 0.2): 0.666666666667
(3, 10.0, 0.3): 0.666666666667
(3, 100.0, 0.2): 0.666666666667
(3, 100.0, 0.3): 0.466666666667
(4, 0.1, 0.3): 0.466666666667
(4, 1.0, 0.3): 0.866666666667
(4, 10.0, 0.3): 0.533333333333
(4, 100.0, 0.3): 0.6
(5, 0.1, 0.3): 0.533333333333
(5, 1.0, 0.2): 0.466666666667
(5, 1.0, 0.3): 0.733333333333
(5, 10.0, 0.2): 0.8
(5, 10.0, 0.3): 0.666666666667
(5, 100.0, 0.2): 0.8
(5, 100.0, 0.3): 0.466666666667
(6, 1.0, 0.2): 0.666666666667
(6, 1.0, 0.3): 0.8
(6, 10.0, 0.2): 0.666666666667
(6, 10.0, 0.3): 0.8
(6, 100.0, 0.2): 0.733333333333
(6, 100.0, 0.3): 0.866666666667
(7, 0.1, 0.3): 0.533333333333
(7, 1.0, 0.2): 0.733333333333
(7, 1.0, 0.3): 0.6
(7, 10.0, 0.2): 0.8
(7, 10.0, 0.3): 0.666666666667
(7, 100.0, 0.2): 0.8
(7, 100.0, 0.3): 0.6
(8, 1.0, 0.2): 0.666666666667
(8, 1.0, 0.3): 0.733333333333
(8, 10.0, 0.2): 0.666666666667
(8, 10.0, 0.3): 0.666666666667
(8, 100.0, 0.2): 0.6
(8, 100.0, 0.3): 0.733333333333
(9, 0.1, 0.3): 0.6
(9, 1.0, 0.2): 0.8
(9, 1.0, 0.3): 0.666666666667
(9, 10.0, 0.2): 0.8
(9, 10.0, 0.3): 0.866666666667
(9, 100.0, 0.2): 0.6
(9, 100.0, 0.3): 0.466666666667

Accuracy mean :0.3416666666666667
Std deviation :0.11814539065631521
Loss mean :0.6583333333333333
Std deviation :0.11814539065631521



Linear_4dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 4
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: Linear
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 0.3): 0.666666666667
(1, 0.1, 0.3): 0.533333333333
(2, 0.1, 0.3): 0.533333333333
(3, 10.0, 0.2): 0.533333333333
(4, 100.0, 0.2): 0.2
(5, 10.0, 0.3): 0.6
(6, 1.0, 0.3): 0.733333333333
(7, 1.0, 0.3): 0.466666666667
(8, 100.0, 0.3): 0.533333333333
(9, 0.1, 0.3): 0.6

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 0.3): 0.333333333333
(1, 0.1, 0.3): 0.466666666667
(2, 0.1, 0.3): 0.466666666667
(3, 10.0, 0.2): 0.466666666667
(4, 100.0, 0.2): 0.8
(5, 10.0, 0.3): 0.4
(6, 1.0, 0.3): 0.266666666667
(7, 1.0, 0.3): 0.533333333333
(8, 100.0, 0.3): 0.466666666667
(9, 0.1, 0.3): 0.4

Accuracy mean :0.54
Std deviation :0.13482498944104454
Loss mean :0.45999999999999996
Std deviation :0.13482498944104457

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 10.0, 0.3): 0.666666666667
(1, 0.1, 0.3): 0.681481481481
(2, 0.1, 0.3): 0.681481481481
(3, 10.0, 0.2): 0.659259259259
(4, 100.0, 0.2): 0.348148148148
(5, 10.0, 0.3): 0.674074074074
(6, 1.0, 0.3): 0.659259259259
(7, 1.0, 0.3): 0.681481481481
(8, 100.0, 0.3): 0.681481481481
(9, 0.1, 0.3): 0.674074074074
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 0.3): 0.333333333333
(1, 0.1, 0.3): 0.318518518519
(2, 0.1, 0.3): 0.318518518519
(3, 10.0, 0.2): 0.340740740741
(4, 100.0, 0.2): 0.651851851852
(5, 10.0, 0.3): 0.325925925926
(6, 1.0, 0.3): 0.340740740741
(7, 1.0, 0.3): 0.318518518519
(8, 100.0, 0.3): 0.318518518519
(9, 0.1, 0.3): 0.325925925926

Accuracy mean :0.6407407407407407
Std deviation :0.09789274946493846
Loss mean :0.3592592592592593
Std deviation :0.09789274946493849

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 0.3): 0.6
(0, 10.0, 0.3): 0.6
(0, 100.0, 0.3): 0.6
(1, 0.1, 0.2): 0.266666666667
(1, 0.1, 0.3): 0.666666666667
(1, 1.0, 0.2): 0.266666666667
(1, 1.0, 0.3): 0.666666666667
(1, 10.0, 0.2): 0.266666666667
(1, 10.0, 0.3): 0.666666666667
(1, 100.0, 0.2): 0.266666666667
(1, 100.0, 0.3): 0.666666666667
(2, 0.1, 0.3): 0.6
(2, 1.0, 0.3): 0.6
(2, 10.0, 0.2): 0.266666666667
(2, 10.0, 0.3): 0.6
(2, 100.0, 0.3): 0.6
(3, 0.1, 0.3): 0.8
(3, 1.0, 0.2): 0.8
(3, 1.0, 0.3): 0.8
(3, 10.0, 0.2): 0.8
(3, 10.0, 0.3): 0.8
(3, 100.0, 0.2): 0.8
(3, 100.0, 0.3): 0.8
(4, 0.1, 0.3): 0.533333333333
(4, 1.0, 0.2): 0.2
(4, 1.0, 0.3): 0.533333333333
(4, 10.0, 0.2): 0.6
(4, 10.0, 0.3): 0.533333333333
(4, 100.0, 0.2): 0.6
(4, 100.0, 0.3): 0.533333333333
(5, 0.1, 0.3): 0.6
(5, 1.0, 0.2): 0.6
(5, 1.0, 0.3): 0.733333333333
(5, 10.0, 0.2): 0.6
(5, 10.0, 0.3): 0.733333333333
(5, 100.0, 0.2): 0.6
(5, 100.0, 0.3): 0.733333333333
(6, 1.0, 0.2): 0.6
(6, 1.0, 0.3): 0.6
(6, 10.0, 0.2): 0.333333333333
(6, 10.0, 0.3): 0.6
(6, 100.0, 0.2): 0.6
(6, 100.0, 0.3): 0.6
(7, 0.1, 0.3): 0.866666666667
(7, 1.0, 0.2): 0.533333333333
(7, 1.0, 0.3): 0.933333333333
(7, 10.0, 0.2): 0.2
(7, 10.0, 0.3): 0.866666666667
(7, 100.0, 0.2): 0.2
(7, 100.0, 0.3): 0.866666666667
(8, 1.0, 0.3): 0.866666666667
(8, 10.0, 0.2): 0.466666666667
(8, 10.0, 0.3): 0.866666666667
(8, 100.0, 0.3): 0.933333333333
(9, 0.1, 0.2): 0.266666666667
(9, 0.1, 0.3): 0.666666666667
(9, 1.0, 0.3): 0.666666666667
(9, 10.0, 0.2): 0.266666666667
(9, 10.0, 0.3): 0.666666666667
(9, 100.0, 0.2): 0.266666666667
(9, 100.0, 0.3): 0.266666666667

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 0.3): 0.4
(0, 10.0, 0.3): 0.4
(0, 100.0, 0.3): 0.4
(1, 0.1, 0.2): 0.733333333333
(1, 0.1, 0.3): 0.333333333333
(1, 1.0, 0.2): 0.733333333333
(1, 1.0, 0.3): 0.333333333333
(1, 10.0, 0.2): 0.733333333333
(1, 10.0, 0.3): 0.333333333333
(1, 100.0, 0.2): 0.733333333333
(1, 100.0, 0.3): 0.333333333333
(2, 0.1, 0.3): 0.4
(2, 1.0, 0.3): 0.4
(2, 10.0, 0.2): 0.733333333333
(2, 10.0, 0.3): 0.4
(2, 100.0, 0.3): 0.4
(3, 0.1, 0.3): 0.2
(3, 1.0, 0.2): 0.2
(3, 1.0, 0.3): 0.2
(3, 10.0, 0.2): 0.2
(3, 10.0, 0.3): 0.2
(3, 100.0, 0.2): 0.2
(3, 100.0, 0.3): 0.2
(4, 0.1, 0.3): 0.466666666667
(4, 1.0, 0.2): 0.8
(4, 1.0, 0.3): 0.466666666667
(4, 10.0, 0.2): 0.4
(4, 10.0, 0.3): 0.466666666667
(4, 100.0, 0.2): 0.4
(4, 100.0, 0.3): 0.466666666667
(5, 0.1, 0.3): 0.4
(5, 1.0, 0.2): 0.4
(5, 1.0, 0.3): 0.266666666667
(5, 10.0, 0.2): 0.4
(5, 10.0, 0.3): 0.266666666667
(5, 100.0, 0.2): 0.4
(5, 100.0, 0.3): 0.266666666667
(6, 1.0, 0.2): 0.4
(6, 1.0, 0.3): 0.4
(6, 10.0, 0.2): 0.666666666667
(6, 10.0, 0.3): 0.4
(6, 100.0, 0.2): 0.4
(6, 100.0, 0.3): 0.4
(7, 0.1, 0.3): 0.133333333333
(7, 1.0, 0.2): 0.466666666667
(7, 1.0, 0.3): 0.0666666666667
(7, 10.0, 0.2): 0.8
(7, 10.0, 0.3): 0.133333333333
(7, 100.0, 0.2): 0.8
(7, 100.0, 0.3): 0.133333333333
(8, 1.0, 0.3): 0.133333333333
(8, 10.0, 0.2): 0.533333333333
(8, 10.0, 0.3): 0.133333333333
(8, 100.0, 0.3): 0.0666666666667
(9, 0.1, 0.2): 0.733333333333
(9, 0.1, 0.3): 0.333333333333
(9, 1.0, 0.3): 0.333333333333
(9, 10.0, 0.2): 0.733333333333
(9, 10.0, 0.3): 0.333333333333
(9, 100.0, 0.2): 0.733333333333
(9, 100.0, 0.3): 0.733333333333

Accuracy mean :0.5890710382513662
Std deviation :0.2034959764710488
Loss mean :0.41092896174863386
Std deviation :0.2034959764710488



QuantileConstPiecewise_4dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 4
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: QuantileConstPiecewise
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 0.3): 0.4
(1, 100.0, 0.3): 0.4
(2, 10.0, 0.3): 0.2
(3, 1.0, 0.3): 0.533333333333
(4, 0.1, 0.3): 0.4
(5, 100.0, 0.3): 0.333333333333
(6, 10.0, 0.3): 0.466666666667
(7, 1.0, 0.3): 0.2
(8, 100.0, 0.2): 0.4
(9, 1.0, 0.2): 0.2

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 0.3): 0.6
(1, 100.0, 0.3): 0.6
(2, 10.0, 0.3): 0.8
(3, 1.0, 0.3): 0.466666666667
(4, 0.1, 0.3): 0.6
(5, 100.0, 0.3): 0.666666666667
(6, 10.0, 0.3): 0.533333333333
(7, 1.0, 0.3): 0.8
(8, 100.0, 0.2): 0.6
(9, 1.0, 0.2): 0.8

Accuracy mean :0.3533333333333334
Std deviation :0.11175369742826806
Loss mean :0.6466666666666667
Std deviation :0.11175369742826809

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 100.0, 0.3): 0.525925925926
(1, 100.0, 0.3): 0.511111111111
(2, 10.0, 0.3): 0.474074074074
(3, 1.0, 0.3): 0.333333333333
(4, 0.1, 0.3): 0.540740740741
(5, 100.0, 0.3): 0.355555555556
(6, 10.0, 0.3): 0.481481481481
(7, 1.0, 0.3): 0.437037037037
(8, 100.0, 0.2): 0.392592592593
(9, 1.0, 0.2): 0.414814814815
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 0.3): 0.474074074074
(1, 100.0, 0.3): 0.488888888889
(2, 10.0, 0.3): 0.525925925926
(3, 1.0, 0.3): 0.666666666667
(4, 0.1, 0.3): 0.459259259259
(5, 100.0, 0.3): 0.644444444444
(6, 10.0, 0.3): 0.518518518519
(7, 1.0, 0.3): 0.562962962963
(8, 100.0, 0.2): 0.607407407407
(9, 1.0, 0.2): 0.585185185185

Accuracy mean :0.44666666666666666
Std deviation :0.06813606978309629
Loss mean :0.5533333333333333
Std deviation :0.0681360697830963

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 0.1, 0.3): 0.466666666667
(0, 1.0, 0.2): 0.533333333333
(0, 1.0, 0.3): 0.533333333333
(0, 10.0, 0.2): 0.4
(0, 10.0, 0.3): 0.466666666667
(0, 100.0, 0.2): 0.533333333333
(0, 100.0, 0.3): 0.6
(1, 0.1, 0.3): 0.4
(1, 1.0, 0.3): 0.466666666667
(1, 10.0, 0.3): 0.533333333333
(1, 100.0, 0.3): 0.533333333333
(2, 0.1, 0.3): 0.133333333333
(2, 1.0, 0.2): 0.266666666667
(2, 1.0, 0.3): 0.0666666666667
(2, 10.0, 0.2): 0.266666666667
(2, 10.0, 0.3): 0.4
(2, 100.0, 0.2): 0.333333333333
(2, 100.0, 0.3): 0.266666666667
(3, 1.0, 0.3): 0.333333333333
(3, 10.0, 0.3): 0.333333333333
(3, 100.0, 0.3): 0.333333333333
(4, 0.1, 0.3): 0.466666666667
(4, 1.0, 0.2): 0.266666666667
(4, 1.0, 0.3): 0.333333333333
(4, 10.0, 0.2): 0.266666666667
(4, 10.0, 0.3): 0.333333333333
(4, 100.0, 0.2): 0.266666666667
(4, 100.0, 0.3): 0.4
(5, 0.1, 0.3): 0.2
(5, 1.0, 0.2): 0.2
(5, 1.0, 0.3): 0.333333333333
(5, 10.0, 0.2): 0.2
(5, 10.0, 0.3): 0.4
(5, 100.0, 0.2): 0.2
(5, 100.0, 0.3): 0.4
(6, 1.0, 0.3): 0.533333333333
(6, 10.0, 0.3): 0.6
(6, 100.0, 0.3): 0.6
(7, 1.0, 0.2): 0.133333333333
(7, 1.0, 0.3): 0.4
(7, 10.0, 0.3): 0.333333333333
(7, 100.0, 0.3): 0.2
(8, 0.1, 0.3): 0.266666666667
(8, 1.0, 0.2): 0.333333333333
(8, 1.0, 0.3): 0.266666666667
(8, 10.0, 0.2): 0.4
(8, 10.0, 0.3): 0.333333333333
(8, 100.0, 0.2): 0.533333333333
(8, 100.0, 0.3): 0.4
(9, 1.0, 0.2): 0.333333333333
(9, 1.0, 0.3): 0.266666666667
(9, 10.0, 0.2): 0.333333333333
(9, 10.0, 0.3): 0.333333333333
(9, 100.0, 0.2): 0.333333333333
(9, 100.0, 0.3): 0.333333333333

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 0.1, 0.3): 0.533333333333
(0, 1.0, 0.2): 0.466666666667
(0, 1.0, 0.3): 0.466666666667
(0, 10.0, 0.2): 0.6
(0, 10.0, 0.3): 0.533333333333
(0, 100.0, 0.2): 0.466666666667
(0, 100.0, 0.3): 0.4
(1, 0.1, 0.3): 0.6
(1, 1.0, 0.3): 0.533333333333
(1, 10.0, 0.3): 0.466666666667
(1, 100.0, 0.3): 0.466666666667
(2, 0.1, 0.3): 0.866666666667
(2, 1.0, 0.2): 0.733333333333
(2, 1.0, 0.3): 0.933333333333
(2, 10.0, 0.2): 0.733333333333
(2, 10.0, 0.3): 0.6
(2, 100.0, 0.2): 0.666666666667
(2, 100.0, 0.3): 0.733333333333
(3, 1.0, 0.3): 0.666666666667
(3, 10.0, 0.3): 0.666666666667
(3, 100.0, 0.3): 0.666666666667
(4, 0.1, 0.3): 0.533333333333
(4, 1.0, 0.2): 0.733333333333
(4, 1.0, 0.3): 0.666666666667
(4, 10.0, 0.2): 0.733333333333
(4, 10.0, 0.3): 0.666666666667
(4, 100.0, 0.2): 0.733333333333
(4, 100.0, 0.3): 0.6
(5, 0.1, 0.3): 0.8
(5, 1.0, 0.2): 0.8
(5, 1.0, 0.3): 0.666666666667
(5, 10.0, 0.2): 0.8
(5, 10.0, 0.3): 0.6
(5, 100.0, 0.2): 0.8
(5, 100.0, 0.3): 0.6
(6, 1.0, 0.3): 0.466666666667
(6, 10.0, 0.3): 0.4
(6, 100.0, 0.3): 0.4
(7, 1.0, 0.2): 0.866666666667
(7, 1.0, 0.3): 0.6
(7, 10.0, 0.3): 0.666666666667
(7, 100.0, 0.3): 0.8
(8, 0.1, 0.3): 0.733333333333
(8, 1.0, 0.2): 0.666666666667
(8, 1.0, 0.3): 0.733333333333
(8, 10.0, 0.2): 0.6
(8, 10.0, 0.3): 0.666666666667
(8, 100.0, 0.2): 0.466666666667
(8, 100.0, 0.3): 0.6
(9, 1.0, 0.2): 0.666666666667
(9, 1.0, 0.3): 0.733333333333
(9, 10.0, 0.2): 0.666666666667
(9, 10.0, 0.3): 0.666666666667
(9, 100.0, 0.2): 0.666666666667
(9, 100.0, 0.3): 0.666666666667

Accuracy mean :0.35878787878787866
Std deviation :0.12422911976066867
Loss mean :0.6412121212121212
Std deviation :0.12422911976066868



