QuantileLinPiecewise_2dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Using same parameters for all the clusterization: True
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 2
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: QuantileLinPiecewise
Cluster graph uses all connections: False
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random
Number of cluster considerated for validation (top_k): None


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.2): 0.8
(1, 1.0, 1.0, 0.2): 1.0
(2, 1.0, 1.0, 0.2): 0.733333333333
(3, 100.0, 100.0, 0.2): 0.933333333333
(4, 10.0, 10.0, 0.2): 0.866666666667
(5, 10.0, 10.0, 0.1): 0.733333333333
(6, 10.0, 10.0, 0.2): 0.866666666667
(7, 100.0, 100.0, 0.2): 0.933333333333
(8, 100.0, 100.0, 0.1): 1.0
(9, 100.0, 100.0, 0.3): 0.666666666667

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.2): 0.2
(1, 1.0, 1.0, 0.2): 0.0
(2, 1.0, 1.0, 0.2): 0.266666666667
(3, 100.0, 100.0, 0.2): 0.0666666666667
(4, 10.0, 10.0, 0.2): 0.133333333333
(5, 10.0, 10.0, 0.1): 0.266666666667
(6, 10.0, 10.0, 0.2): 0.133333333333
(7, 100.0, 100.0, 0.2): 0.0666666666667
(8, 100.0, 100.0, 0.1): 0.0
(9, 100.0, 100.0, 0.3): 0.333333333333

Accuracy mean :0.8533333333333333
Std deviation :0.11075498483890768
Loss mean :0.14666666666666667
Std deviation :0.11075498483890765

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 1.0, 1.0, 0.2): 0.896296296296
(1, 1.0, 1.0, 0.2): 0.859259259259
(2, 1.0, 1.0, 0.2): 0.896296296296
(3, 100.0, 100.0, 0.2): 0.866666666667
(4, 10.0, 10.0, 0.2): 0.814814814815
(5, 10.0, 10.0, 0.1): 0.718518518519
(6, 10.0, 10.0, 0.2): 0.881481481481
(7, 100.0, 100.0, 0.2): 0.874074074074
(8, 100.0, 100.0, 0.1): 0.792592592593
(9, 100.0, 100.0, 0.3): 0.666666666667
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.2): 0.103703703704
(1, 1.0, 1.0, 0.2): 0.140740740741
(2, 1.0, 1.0, 0.2): 0.103703703704
(3, 100.0, 100.0, 0.2): 0.133333333333
(4, 10.0, 10.0, 0.2): 0.185185185185
(5, 10.0, 10.0, 0.1): 0.281481481481
(6, 10.0, 10.0, 0.2): 0.118518518519
(7, 100.0, 100.0, 0.2): 0.125925925926
(8, 100.0, 100.0, 0.1): 0.207407407407
(9, 100.0, 100.0, 0.3): 0.333333333333

Accuracy mean :0.8266666666666665
Std deviation :0.07497233143039998
Loss mean :0.17333333333333334
Std deviation :0.07497233143039997

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 1.0, 0.2): 1.0
(0, 1.0, 1.0, 0.3): 0.8
(0, 10.0, 10.0, 0.2): 1.0
(0, 10.0, 10.0, 0.3): 0.8
(0, 100.0, 100.0, 0.2): 1.0
(0, 100.0, 100.0, 0.3): 0.866666666667
(1, 1.0, 1.0, 0.1): 0.6
(1, 1.0, 1.0, 0.2): 0.933333333333
(1, 1.0, 1.0, 0.3): 0.866666666667
(1, 10.0, 10.0, 0.1): 0.533333333333
(1, 10.0, 10.0, 0.2): 0.866666666667
(1, 10.0, 10.0, 0.3): 0.733333333333
(1, 100.0, 100.0, 0.1): 0.666666666667
(1, 100.0, 100.0, 0.2): 0.866666666667
(1, 100.0, 100.0, 0.3): 0.733333333333
(2, 1.0, 1.0, 0.1): 0.333333333333
(2, 1.0, 1.0, 0.2): 1.0
(2, 1.0, 1.0, 0.3): 0.666666666667
(2, 10.0, 10.0, 0.1): 0.4
(2, 10.0, 10.0, 0.2): 1.0
(2, 10.0, 10.0, 0.3): 0.666666666667
(2, 100.0, 100.0, 0.1): 0.533333333333
(2, 100.0, 100.0, 0.2): 1.0
(2, 100.0, 100.0, 0.3): 0.666666666667
(3, 1.0, 1.0, 0.1): 0.866666666667
(3, 1.0, 1.0, 0.2): 0.933333333333
(3, 1.0, 1.0, 0.3): 0.733333333333
(3, 10.0, 10.0, 0.1): 0.8
(3, 10.0, 10.0, 0.2): 0.933333333333
(3, 10.0, 10.0, 0.3): 0.733333333333
(3, 100.0, 100.0, 0.1): 0.666666666667
(3, 100.0, 100.0, 0.2): 0.933333333333
(3, 100.0, 100.0, 0.3): 0.733333333333
(4, 1.0, 1.0, 0.1): 0.533333333333
(4, 1.0, 1.0, 0.2): 0.733333333333
(4, 1.0, 1.0, 0.3): 0.466666666667
(4, 10.0, 10.0, 0.1): 0.6
(4, 10.0, 10.0, 0.2): 0.866666666667
(4, 10.0, 10.0, 0.3): 0.466666666667
(4, 100.0, 100.0, 0.1): 0.466666666667
(4, 100.0, 100.0, 0.2): 0.733333333333
(4, 100.0, 100.0, 0.3): 0.466666666667
(5, 0.1, 0.1, 0.3): 0.6
(5, 1.0, 1.0, 0.1): 0.666666666667
(5, 1.0, 1.0, 0.2): 0.733333333333
(5, 1.0, 1.0, 0.3): 0.6
(5, 10.0, 10.0, 0.1): 0.8
(5, 10.0, 10.0, 0.2): 0.733333333333
(5, 10.0, 10.0, 0.3): 0.6
(5, 100.0, 100.0, 0.1): 0.8
(5, 100.0, 100.0, 0.2): 0.733333333333
(5, 100.0, 100.0, 0.3): 0.6
(6, 0.1, 0.1, 0.3): 0.533333333333
(6, 1.0, 1.0, 0.2): 0.866666666667
(6, 1.0, 1.0, 0.3): 0.533333333333
(6, 10.0, 10.0, 0.2): 0.866666666667
(6, 10.0, 10.0, 0.3): 0.533333333333
(6, 100.0, 100.0, 0.2): 0.866666666667
(6, 100.0, 100.0, 0.3): 0.533333333333
(7, 0.1, 0.1, 0.3): 0.666666666667
(7, 1.0, 1.0, 0.1): 0.6
(7, 1.0, 1.0, 0.2): 0.866666666667
(7, 1.0, 1.0, 0.3): 0.666666666667
(7, 10.0, 10.0, 0.1): 0.666666666667
(7, 10.0, 10.0, 0.2): 0.866666666667
(7, 10.0, 10.0, 0.3): 0.666666666667
(7, 100.0, 100.0, 0.1): 0.533333333333
(7, 100.0, 100.0, 0.2): 0.866666666667
(7, 100.0, 100.0, 0.3): 0.666666666667
(8, 1.0, 1.0, 0.1): 0.733333333333
(8, 1.0, 1.0, 0.2): 0.933333333333
(8, 1.0, 1.0, 0.3): 0.666666666667
(8, 10.0, 10.0, 0.1): 0.733333333333
(8, 10.0, 10.0, 0.2): 0.866666666667
(8, 10.0, 10.0, 0.3): 0.666666666667
(8, 100.0, 100.0, 0.1): 0.933333333333
(8, 100.0, 100.0, 0.2): 0.933333333333
(8, 100.0, 100.0, 0.3): 0.666666666667
(9, 1.0, 1.0, 0.1): 0.266666666667
(9, 1.0, 1.0, 0.2): 0.733333333333
(9, 1.0, 1.0, 0.3): 0.8
(9, 10.0, 10.0, 0.1): 0.266666666667
(9, 10.0, 10.0, 0.2): 0.733333333333
(9, 10.0, 10.0, 0.3): 0.8
(9, 100.0, 100.0, 0.1): 0.2
(9, 100.0, 100.0, 0.2): 0.733333333333
(9, 100.0, 100.0, 0.3): 0.8

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.2): 0.0
(0, 1.0, 1.0, 0.3): 0.2
(0, 10.0, 10.0, 0.2): 0.0
(0, 10.0, 10.0, 0.3): 0.2
(0, 100.0, 100.0, 0.2): 0.0
(0, 100.0, 100.0, 0.3): 0.133333333333
(1, 1.0, 1.0, 0.1): 0.4
(1, 1.0, 1.0, 0.2): 0.0666666666667
(1, 1.0, 1.0, 0.3): 0.133333333333
(1, 10.0, 10.0, 0.1): 0.466666666667
(1, 10.0, 10.0, 0.2): 0.133333333333
(1, 10.0, 10.0, 0.3): 0.266666666667
(1, 100.0, 100.0, 0.1): 0.333333333333
(1, 100.0, 100.0, 0.2): 0.133333333333
(1, 100.0, 100.0, 0.3): 0.266666666667
(2, 1.0, 1.0, 0.1): 0.666666666667
(2, 1.0, 1.0, 0.2): 0.0
(2, 1.0, 1.0, 0.3): 0.333333333333
(2, 10.0, 10.0, 0.1): 0.6
(2, 10.0, 10.0, 0.2): 0.0
(2, 10.0, 10.0, 0.3): 0.333333333333
(2, 100.0, 100.0, 0.1): 0.466666666667
(2, 100.0, 100.0, 0.2): 0.0
(2, 100.0, 100.0, 0.3): 0.333333333333
(3, 1.0, 1.0, 0.1): 0.133333333333
(3, 1.0, 1.0, 0.2): 0.0666666666667
(3, 1.0, 1.0, 0.3): 0.266666666667
(3, 10.0, 10.0, 0.1): 0.2
(3, 10.0, 10.0, 0.2): 0.0666666666667
(3, 10.0, 10.0, 0.3): 0.266666666667
(3, 100.0, 100.0, 0.1): 0.333333333333
(3, 100.0, 100.0, 0.2): 0.0666666666667
(3, 100.0, 100.0, 0.3): 0.266666666667
(4, 1.0, 1.0, 0.1): 0.466666666667
(4, 1.0, 1.0, 0.2): 0.266666666667
(4, 1.0, 1.0, 0.3): 0.533333333333
(4, 10.0, 10.0, 0.1): 0.4
(4, 10.0, 10.0, 0.2): 0.133333333333
(4, 10.0, 10.0, 0.3): 0.533333333333
(4, 100.0, 100.0, 0.1): 0.533333333333
(4, 100.0, 100.0, 0.2): 0.266666666667
(4, 100.0, 100.0, 0.3): 0.533333333333
(5, 0.1, 0.1, 0.3): 0.4
(5, 1.0, 1.0, 0.1): 0.333333333333
(5, 1.0, 1.0, 0.2): 0.266666666667
(5, 1.0, 1.0, 0.3): 0.4
(5, 10.0, 10.0, 0.1): 0.2
(5, 10.0, 10.0, 0.2): 0.266666666667
(5, 10.0, 10.0, 0.3): 0.4
(5, 100.0, 100.0, 0.1): 0.2
(5, 100.0, 100.0, 0.2): 0.266666666667
(5, 100.0, 100.0, 0.3): 0.4
(6, 0.1, 0.1, 0.3): 0.466666666667
(6, 1.0, 1.0, 0.2): 0.133333333333
(6, 1.0, 1.0, 0.3): 0.466666666667
(6, 10.0, 10.0, 0.2): 0.133333333333
(6, 10.0, 10.0, 0.3): 0.466666666667
(6, 100.0, 100.0, 0.2): 0.133333333333
(6, 100.0, 100.0, 0.3): 0.466666666667
(7, 0.1, 0.1, 0.3): 0.333333333333
(7, 1.0, 1.0, 0.1): 0.4
(7, 1.0, 1.0, 0.2): 0.133333333333
(7, 1.0, 1.0, 0.3): 0.333333333333
(7, 10.0, 10.0, 0.1): 0.333333333333
(7, 10.0, 10.0, 0.2): 0.133333333333
(7, 10.0, 10.0, 0.3): 0.333333333333
(7, 100.0, 100.0, 0.1): 0.466666666667
(7, 100.0, 100.0, 0.2): 0.133333333333
(7, 100.0, 100.0, 0.3): 0.333333333333
(8, 1.0, 1.0, 0.1): 0.266666666667
(8, 1.0, 1.0, 0.2): 0.0666666666667
(8, 1.0, 1.0, 0.3): 0.333333333333
(8, 10.0, 10.0, 0.1): 0.266666666667
(8, 10.0, 10.0, 0.2): 0.133333333333
(8, 10.0, 10.0, 0.3): 0.333333333333
(8, 100.0, 100.0, 0.1): 0.0666666666667
(8, 100.0, 100.0, 0.2): 0.0666666666667
(8, 100.0, 100.0, 0.3): 0.333333333333
(9, 1.0, 1.0, 0.1): 0.733333333333
(9, 1.0, 1.0, 0.2): 0.266666666667
(9, 1.0, 1.0, 0.3): 0.2
(9, 10.0, 10.0, 0.1): 0.733333333333
(9, 10.0, 10.0, 0.2): 0.266666666667
(9, 10.0, 10.0, 0.3): 0.2
(9, 100.0, 100.0, 0.1): 0.8
(9, 100.0, 100.0, 0.2): 0.266666666667
(9, 100.0, 100.0, 0.3): 0.2

Accuracy mean :0.7164750957854406
Std deviation :0.17716899330719907
Loss mean :0.28352490421455934
Std deviation :0.17716899330719907



Crisp_2dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Using same parameters for all the clusterization: True
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 2
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: Crisp
Cluster graph uses all connections: False
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random
Number of cluster considerated for validation (top_k): None


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.3): 0.333333333333
(1, 10.0, 10.0, 0.1): 0.266666666667
(2, 10.0, 10.0, 0.3): 0.533333333333
(3, 10.0, 10.0, 0.3): 0.4
(4, 100.0, 100.0, 0.2): 0.4
(5, 1.0, 1.0, 0.2): 0.666666666667
(6, 1.0, 1.0, 0.2): 0.466666666667
(7, 10.0, 10.0, 0.3): 0.466666666667
(8, 1.0, 1.0, 0.2): 0.466666666667
(9, 100.0, 100.0, 0.3): 0.533333333333

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.3): 0.666666666667
(1, 10.0, 10.0, 0.1): 0.733333333333
(2, 10.0, 10.0, 0.3): 0.466666666667
(3, 10.0, 10.0, 0.3): 0.6
(4, 100.0, 100.0, 0.2): 0.6
(5, 1.0, 1.0, 0.2): 0.333333333333
(6, 1.0, 1.0, 0.2): 0.533333333333
(7, 10.0, 10.0, 0.3): 0.533333333333
(8, 1.0, 1.0, 0.2): 0.533333333333
(9, 100.0, 100.0, 0.3): 0.466666666667

Accuracy mean :0.4533333333333333
Std deviation :0.10666666666666666
Loss mean :0.5466666666666666
Std deviation :0.10666666666666666

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 10.0, 10.0, 0.3): 0.562962962963
(1, 10.0, 10.0, 0.1): 0.340740740741
(2, 10.0, 10.0, 0.3): 0.548148148148
(3, 10.0, 10.0, 0.3): 0.585185185185
(4, 100.0, 100.0, 0.2): 0.555555555556
(5, 1.0, 1.0, 0.2): 0.688888888889
(6, 1.0, 1.0, 0.2): 0.6
(7, 10.0, 10.0, 0.3): 0.696296296296
(8, 1.0, 1.0, 0.2): 0.562962962963
(9, 100.0, 100.0, 0.3): 0.57037037037
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.3): 0.437037037037
(1, 10.0, 10.0, 0.1): 0.659259259259
(2, 10.0, 10.0, 0.3): 0.451851851852
(3, 10.0, 10.0, 0.3): 0.414814814815
(4, 100.0, 100.0, 0.2): 0.444444444444
(5, 1.0, 1.0, 0.2): 0.311111111111
(6, 1.0, 1.0, 0.2): 0.4
(7, 10.0, 10.0, 0.3): 0.303703703704
(8, 1.0, 1.0, 0.2): 0.437037037037
(9, 100.0, 100.0, 0.3): 0.42962962963

Accuracy mean :0.5711111111111112
Std deviation :0.09195036533097252
Loss mean :0.4288888888888889
Std deviation :0.0919503653309725

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 1.0, 0.1): 0.133333333333
(0, 1.0, 1.0, 0.2): 0.533333333333
(0, 1.0, 1.0, 0.3): 0.333333333333
(0, 10.0, 10.0, 0.1): 0.266666666667
(0, 10.0, 10.0, 0.2): 0.533333333333
(0, 10.0, 10.0, 0.3): 0.6
(0, 100.0, 100.0, 0.1): 0.466666666667
(0, 100.0, 100.0, 0.2): 0.466666666667
(0, 100.0, 100.0, 0.3): 0.466666666667
(1, 0.1, 0.1, 0.3): 0.4
(1, 1.0, 1.0, 0.1): 0.333333333333
(1, 1.0, 1.0, 0.2): 0.466666666667
(1, 1.0, 1.0, 0.3): 0.466666666667
(1, 10.0, 10.0, 0.1): 0.466666666667
(1, 10.0, 10.0, 0.2): 0.266666666667
(1, 10.0, 10.0, 0.3): 0.4
(1, 100.0, 100.0, 0.1): 0.4
(1, 100.0, 100.0, 0.2): 0.266666666667
(1, 100.0, 100.0, 0.3): 0.333333333333
(2, 1.0, 1.0, 0.1): 0.333333333333
(2, 1.0, 1.0, 0.2): 0.466666666667
(2, 1.0, 1.0, 0.3): 0.666666666667
(2, 10.0, 10.0, 0.1): 0.333333333333
(2, 10.0, 10.0, 0.2): 0.4
(2, 10.0, 10.0, 0.3): 0.666666666667
(2, 100.0, 100.0, 0.1): 0.333333333333
(2, 100.0, 100.0, 0.2): 0.466666666667
(2, 100.0, 100.0, 0.3): 0.533333333333
(3, 1.0, 1.0, 0.1): 0.4
(3, 1.0, 1.0, 0.2): 0.4
(3, 1.0, 1.0, 0.3): 0.533333333333
(3, 10.0, 10.0, 0.1): 0.4
(3, 10.0, 10.0, 0.2): 0.6
(3, 10.0, 10.0, 0.3): 0.666666666667
(3, 100.0, 100.0, 0.1): 0.533333333333
(3, 100.0, 100.0, 0.2): 0.6
(3, 100.0, 100.0, 0.3): 0.6
(4, 1.0, 1.0, 0.1): 0.266666666667
(4, 1.0, 1.0, 0.2): 0.466666666667
(4, 1.0, 1.0, 0.3): 0.533333333333
(4, 10.0, 10.0, 0.1): 0.2
(4, 10.0, 10.0, 0.2): 0.4
(4, 10.0, 10.0, 0.3): 0.533333333333
(4, 100.0, 100.0, 0.1): 0.4
(4, 100.0, 100.0, 0.2): 0.6
(4, 100.0, 100.0, 0.3): 0.466666666667
(5, 1.0, 1.0, 0.1): 0.333333333333
(5, 1.0, 1.0, 0.2): 0.733333333333
(5, 1.0, 1.0, 0.3): 0.533333333333
(5, 10.0, 10.0, 0.1): 0.333333333333
(5, 10.0, 10.0, 0.2): 0.466666666667
(5, 10.0, 10.0, 0.3): 0.4
(5, 100.0, 100.0, 0.1): 0.266666666667
(5, 100.0, 100.0, 0.2): 0.466666666667
(5, 100.0, 100.0, 0.3): 0.466666666667
(6, 0.1, 0.1, 0.3): 0.4
(6, 1.0, 1.0, 0.1): 0.466666666667
(6, 1.0, 1.0, 0.2): 0.6
(6, 1.0, 1.0, 0.3): 0.4
(6, 10.0, 10.0, 0.1): 0.533333333333
(6, 10.0, 10.0, 0.2): 0.466666666667
(6, 10.0, 10.0, 0.3): 0.4
(6, 100.0, 100.0, 0.1): 0.466666666667
(6, 100.0, 100.0, 0.2): 0.466666666667
(6, 100.0, 100.0, 0.3): 0.4
(7, 1.0, 1.0, 0.1): 0.333333333333
(7, 1.0, 1.0, 0.2): 0.266666666667
(7, 1.0, 1.0, 0.3): 0.666666666667
(7, 10.0, 10.0, 0.1): 0.4
(7, 10.0, 10.0, 0.2): 0.266666666667
(7, 10.0, 10.0, 0.3): 0.666666666667
(7, 100.0, 100.0, 0.1): 0.6
(7, 100.0, 100.0, 0.2): 0.533333333333
(7, 100.0, 100.0, 0.3): 0.6
(8, 1.0, 1.0, 0.1): 0.333333333333
(8, 1.0, 1.0, 0.2): 0.666666666667
(8, 1.0, 1.0, 0.3): 0.4
(8, 10.0, 10.0, 0.1): 0.4
(8, 10.0, 10.0, 0.2): 0.533333333333
(8, 10.0, 10.0, 0.3): 0.6
(8, 100.0, 100.0, 0.1): 0.333333333333
(8, 100.0, 100.0, 0.2): 0.533333333333
(8, 100.0, 100.0, 0.3): 0.6
(9, 1.0, 1.0, 0.1): 0.333333333333
(9, 1.0, 1.0, 0.2): 0.4
(9, 1.0, 1.0, 0.3): 0.266666666667
(9, 10.0, 10.0, 0.1): 0.2
(9, 10.0, 10.0, 0.2): 0.2
(9, 10.0, 10.0, 0.3): 0.533333333333
(9, 100.0, 100.0, 0.1): 0.4
(9, 100.0, 100.0, 0.2): 0.266666666667
(9, 100.0, 100.0, 0.3): 0.6

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.1): 0.866666666667
(0, 1.0, 1.0, 0.2): 0.466666666667
(0, 1.0, 1.0, 0.3): 0.666666666667
(0, 10.0, 10.0, 0.1): 0.733333333333
(0, 10.0, 10.0, 0.2): 0.466666666667
(0, 10.0, 10.0, 0.3): 0.4
(0, 100.0, 100.0, 0.1): 0.533333333333
(0, 100.0, 100.0, 0.2): 0.533333333333
(0, 100.0, 100.0, 0.3): 0.533333333333
(1, 0.1, 0.1, 0.3): 0.6
(1, 1.0, 1.0, 0.1): 0.666666666667
(1, 1.0, 1.0, 0.2): 0.533333333333
(1, 1.0, 1.0, 0.3): 0.533333333333
(1, 10.0, 10.0, 0.1): 0.533333333333
(1, 10.0, 10.0, 0.2): 0.733333333333
(1, 10.0, 10.0, 0.3): 0.6
(1, 100.0, 100.0, 0.1): 0.6
(1, 100.0, 100.0, 0.2): 0.733333333333
(1, 100.0, 100.0, 0.3): 0.666666666667
(2, 1.0, 1.0, 0.1): 0.666666666667
(2, 1.0, 1.0, 0.2): 0.533333333333
(2, 1.0, 1.0, 0.3): 0.333333333333
(2, 10.0, 10.0, 0.1): 0.666666666667
(2, 10.0, 10.0, 0.2): 0.6
(2, 10.0, 10.0, 0.3): 0.333333333333
(2, 100.0, 100.0, 0.1): 0.666666666667
(2, 100.0, 100.0, 0.2): 0.533333333333
(2, 100.0, 100.0, 0.3): 0.466666666667
(3, 1.0, 1.0, 0.1): 0.6
(3, 1.0, 1.0, 0.2): 0.6
(3, 1.0, 1.0, 0.3): 0.466666666667
(3, 10.0, 10.0, 0.1): 0.6
(3, 10.0, 10.0, 0.2): 0.4
(3, 10.0, 10.0, 0.3): 0.333333333333
(3, 100.0, 100.0, 0.1): 0.466666666667
(3, 100.0, 100.0, 0.2): 0.4
(3, 100.0, 100.0, 0.3): 0.4
(4, 1.0, 1.0, 0.1): 0.733333333333
(4, 1.0, 1.0, 0.2): 0.533333333333
(4, 1.0, 1.0, 0.3): 0.466666666667
(4, 10.0, 10.0, 0.1): 0.8
(4, 10.0, 10.0, 0.2): 0.6
(4, 10.0, 10.0, 0.3): 0.466666666667
(4, 100.0, 100.0, 0.1): 0.6
(4, 100.0, 100.0, 0.2): 0.4
(4, 100.0, 100.0, 0.3): 0.533333333333
(5, 1.0, 1.0, 0.1): 0.666666666667
(5, 1.0, 1.0, 0.2): 0.266666666667
(5, 1.0, 1.0, 0.3): 0.466666666667
(5, 10.0, 10.0, 0.1): 0.666666666667
(5, 10.0, 10.0, 0.2): 0.533333333333
(5, 10.0, 10.0, 0.3): 0.6
(5, 100.0, 100.0, 0.1): 0.733333333333
(5, 100.0, 100.0, 0.2): 0.533333333333
(5, 100.0, 100.0, 0.3): 0.533333333333
(6, 0.1, 0.1, 0.3): 0.6
(6, 1.0, 1.0, 0.1): 0.533333333333
(6, 1.0, 1.0, 0.2): 0.4
(6, 1.0, 1.0, 0.3): 0.6
(6, 10.0, 10.0, 0.1): 0.466666666667
(6, 10.0, 10.0, 0.2): 0.533333333333
(6, 10.0, 10.0, 0.3): 0.6
(6, 100.0, 100.0, 0.1): 0.533333333333
(6, 100.0, 100.0, 0.2): 0.533333333333
(6, 100.0, 100.0, 0.3): 0.6
(7, 1.0, 1.0, 0.1): 0.666666666667
(7, 1.0, 1.0, 0.2): 0.733333333333
(7, 1.0, 1.0, 0.3): 0.333333333333
(7, 10.0, 10.0, 0.1): 0.6
(7, 10.0, 10.0, 0.2): 0.733333333333
(7, 10.0, 10.0, 0.3): 0.333333333333
(7, 100.0, 100.0, 0.1): 0.4
(7, 100.0, 100.0, 0.2): 0.466666666667
(7, 100.0, 100.0, 0.3): 0.4
(8, 1.0, 1.0, 0.1): 0.666666666667
(8, 1.0, 1.0, 0.2): 0.333333333333
(8, 1.0, 1.0, 0.3): 0.6
(8, 10.0, 10.0, 0.1): 0.6
(8, 10.0, 10.0, 0.2): 0.466666666667
(8, 10.0, 10.0, 0.3): 0.4
(8, 100.0, 100.0, 0.1): 0.666666666667
(8, 100.0, 100.0, 0.2): 0.466666666667
(8, 100.0, 100.0, 0.3): 0.4
(9, 1.0, 1.0, 0.1): 0.666666666667
(9, 1.0, 1.0, 0.2): 0.6
(9, 1.0, 1.0, 0.3): 0.733333333333
(9, 10.0, 10.0, 0.1): 0.8
(9, 10.0, 10.0, 0.2): 0.8
(9, 10.0, 10.0, 0.3): 0.466666666667
(9, 100.0, 100.0, 0.1): 0.6
(9, 100.0, 100.0, 0.2): 0.733333333333
(9, 100.0, 100.0, 0.3): 0.4

Accuracy mean :0.4449275362318841
Std deviation :0.12782411513809927
Loss mean :0.5550724637681159
Std deviation :0.12782411513809927



Linear_2dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Using same parameters for all the clusterization: True
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 2
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: Linear
Cluster graph uses all connections: False
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random
Number of cluster considerated for validation (top_k): None


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.2): 0.8
(1, 10.0, 10.0, 0.3): 0.866666666667
(2, 10.0, 10.0, 0.3): 0.466666666667
(3, 1.0, 1.0, 0.3): 0.466666666667
(4, 1.0, 1.0, 0.2): 0.933333333333
(5, 1.0, 1.0, 0.2): 0.933333333333
(6, 1.0, 1.0, 0.2): 0.4
(7, 100.0, 100.0, 0.2): 0.666666666667
(8, 10.0, 10.0, 0.3): 0.933333333333
(9, 1.0, 1.0, 0.3): 0.666666666667

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.2): 0.2
(1, 10.0, 10.0, 0.3): 0.133333333333
(2, 10.0, 10.0, 0.3): 0.533333333333
(3, 1.0, 1.0, 0.3): 0.533333333333
(4, 1.0, 1.0, 0.2): 0.0666666666667
(5, 1.0, 1.0, 0.2): 0.0666666666667
(6, 1.0, 1.0, 0.2): 0.6
(7, 100.0, 100.0, 0.2): 0.333333333333
(8, 10.0, 10.0, 0.3): 0.0666666666667
(9, 1.0, 1.0, 0.3): 0.333333333333

Accuracy mean :0.7133333333333334
Std deviation :0.20011108026404847
Loss mean :0.2866666666666667
Std deviation :0.20011108026404845

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 10.0, 10.0, 0.2): 0.903703703704
(1, 10.0, 10.0, 0.3): 0.777777777778
(2, 10.0, 10.0, 0.3): 0.688888888889
(3, 1.0, 1.0, 0.3): 0.755555555556
(4, 1.0, 1.0, 0.2): 0.837037037037
(5, 1.0, 1.0, 0.2): 0.874074074074
(6, 1.0, 1.0, 0.2): 0.696296296296
(7, 100.0, 100.0, 0.2): 0.866666666667
(8, 10.0, 10.0, 0.3): 0.814814814815
(9, 1.0, 1.0, 0.3): 0.666666666667
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.2): 0.0962962962963
(1, 10.0, 10.0, 0.3): 0.222222222222
(2, 10.0, 10.0, 0.3): 0.311111111111
(3, 1.0, 1.0, 0.3): 0.244444444444
(4, 1.0, 1.0, 0.2): 0.162962962963
(5, 1.0, 1.0, 0.2): 0.125925925926
(6, 1.0, 1.0, 0.2): 0.303703703704
(7, 100.0, 100.0, 0.2): 0.133333333333
(8, 10.0, 10.0, 0.3): 0.185185185185
(9, 1.0, 1.0, 0.3): 0.333333333333

Accuracy mean :0.7881481481481482
Std deviation :0.08013705680769495
Loss mean :0.21185185185185187
Std deviation :0.08013705680769492

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 1.0, 0.1): 0.666666666667
(0, 1.0, 1.0, 0.2): 0.866666666667
(0, 1.0, 1.0, 0.3): 0.666666666667
(0, 10.0, 10.0, 0.1): 0.6
(0, 10.0, 10.0, 0.2): 0.866666666667
(0, 10.0, 10.0, 0.3): 0.666666666667
(0, 100.0, 100.0, 0.1): 0.666666666667
(0, 100.0, 100.0, 0.2): 0.866666666667
(0, 100.0, 100.0, 0.3): 0.666666666667
(1, 0.1, 0.1, 0.3): 0.333333333333
(1, 1.0, 1.0, 0.1): 0.733333333333
(1, 1.0, 1.0, 0.2): 0.8
(1, 1.0, 1.0, 0.3): 0.8
(1, 10.0, 10.0, 0.1): 0.8
(1, 10.0, 10.0, 0.2): 0.8
(1, 10.0, 10.0, 0.3): 0.8
(1, 100.0, 100.0, 0.1): 0.666666666667
(1, 100.0, 100.0, 0.2): 0.8
(1, 100.0, 100.0, 0.3): 0.733333333333
(2, 1.0, 1.0, 0.2): 0.666666666667
(2, 1.0, 1.0, 0.3): 0.8
(2, 10.0, 10.0, 0.2): 0.666666666667
(2, 10.0, 10.0, 0.3): 0.8
(2, 100.0, 100.0, 0.2): 0.666666666667
(2, 100.0, 100.0, 0.3): 0.8
(3, 1.0, 1.0, 0.1): 0.666666666667
(3, 1.0, 1.0, 0.2): 0.8
(3, 1.0, 1.0, 0.3): 0.866666666667
(3, 10.0, 10.0, 0.1): 0.666666666667
(3, 10.0, 10.0, 0.2): 0.8
(3, 10.0, 10.0, 0.3): 0.8
(3, 100.0, 100.0, 0.1): 0.733333333333
(3, 100.0, 100.0, 0.2): 0.8
(3, 100.0, 100.0, 0.3): 0.866666666667
(4, 1.0, 1.0, 0.1): 0.533333333333
(4, 1.0, 1.0, 0.2): 0.866666666667
(4, 1.0, 1.0, 0.3): 0.8
(4, 10.0, 10.0, 0.1): 0.466666666667
(4, 10.0, 10.0, 0.2): 0.866666666667
(4, 10.0, 10.0, 0.3): 0.8
(4, 100.0, 100.0, 0.1): 0.466666666667
(4, 100.0, 100.0, 0.2): 0.866666666667
(4, 100.0, 100.0, 0.3): 0.8
(5, 1.0, 1.0, 0.1): 0.933333333333
(5, 1.0, 1.0, 0.2): 0.933333333333
(5, 1.0, 1.0, 0.3): 0.666666666667
(5, 10.0, 10.0, 0.1): 0.733333333333
(5, 10.0, 10.0, 0.2): 0.933333333333
(5, 10.0, 10.0, 0.3): 0.666666666667
(5, 100.0, 100.0, 0.1): 0.866666666667
(5, 100.0, 100.0, 0.2): 0.933333333333
(5, 100.0, 100.0, 0.3): 0.666666666667
(6, 1.0, 1.0, 0.2): 0.733333333333
(6, 1.0, 1.0, 0.3): 0.666666666667
(6, 10.0, 10.0, 0.2): 0.733333333333
(6, 10.0, 10.0, 0.3): 0.666666666667
(6, 100.0, 100.0, 0.2): 0.733333333333
(6, 100.0, 100.0, 0.3): 0.666666666667
(7, 1.0, 1.0, 0.1): 0.333333333333
(7, 1.0, 1.0, 0.2): 0.733333333333
(7, 1.0, 1.0, 0.3): 0.6
(7, 10.0, 10.0, 0.1): 0.466666666667
(7, 10.0, 10.0, 0.2): 0.733333333333
(7, 10.0, 10.0, 0.3): 0.6
(7, 100.0, 100.0, 0.1): 0.4
(7, 100.0, 100.0, 0.2): 0.733333333333
(7, 100.0, 100.0, 0.3): 0.6
(8, 0.1, 0.1, 0.3): 0.933333333333
(8, 1.0, 1.0, 0.1): 0.733333333333
(8, 1.0, 1.0, 0.2): 0.8
(8, 1.0, 1.0, 0.3): 0.466666666667
(8, 10.0, 10.0, 0.1): 0.533333333333
(8, 10.0, 10.0, 0.2): 0.8
(8, 10.0, 10.0, 0.3): 0.933333333333
(8, 100.0, 100.0, 0.05): 0.2
(8, 100.0, 100.0, 0.1): 0.6
(8, 100.0, 100.0, 0.2): 0.8
(8, 100.0, 100.0, 0.3): 0.466666666667
(9, 1.0, 1.0, 0.1): 0.6
(9, 1.0, 1.0, 0.2): 0.466666666667
(9, 1.0, 1.0, 0.3): 0.733333333333
(9, 10.0, 10.0, 0.1): 0.6
(9, 10.0, 10.0, 0.2): 0.666666666667
(9, 10.0, 10.0, 0.3): 0.6
(9, 100.0, 100.0, 0.1): 0.533333333333
(9, 100.0, 100.0, 0.2): 0.266666666667
(9, 100.0, 100.0, 0.3): 0.6

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.1): 0.333333333333
(0, 1.0, 1.0, 0.2): 0.133333333333
(0, 1.0, 1.0, 0.3): 0.333333333333
(0, 10.0, 10.0, 0.1): 0.4
(0, 10.0, 10.0, 0.2): 0.133333333333
(0, 10.0, 10.0, 0.3): 0.333333333333
(0, 100.0, 100.0, 0.1): 0.333333333333
(0, 100.0, 100.0, 0.2): 0.133333333333
(0, 100.0, 100.0, 0.3): 0.333333333333
(1, 0.1, 0.1, 0.3): 0.666666666667
(1, 1.0, 1.0, 0.1): 0.266666666667
(1, 1.0, 1.0, 0.2): 0.2
(1, 1.0, 1.0, 0.3): 0.2
(1, 10.0, 10.0, 0.1): 0.2
(1, 10.0, 10.0, 0.2): 0.2
(1, 10.0, 10.0, 0.3): 0.2
(1, 100.0, 100.0, 0.1): 0.333333333333
(1, 100.0, 100.0, 0.2): 0.2
(1, 100.0, 100.0, 0.3): 0.266666666667
(2, 1.0, 1.0, 0.2): 0.333333333333
(2, 1.0, 1.0, 0.3): 0.2
(2, 10.0, 10.0, 0.2): 0.333333333333
(2, 10.0, 10.0, 0.3): 0.2
(2, 100.0, 100.0, 0.2): 0.333333333333
(2, 100.0, 100.0, 0.3): 0.2
(3, 1.0, 1.0, 0.1): 0.333333333333
(3, 1.0, 1.0, 0.2): 0.2
(3, 1.0, 1.0, 0.3): 0.133333333333
(3, 10.0, 10.0, 0.1): 0.333333333333
(3, 10.0, 10.0, 0.2): 0.2
(3, 10.0, 10.0, 0.3): 0.2
(3, 100.0, 100.0, 0.1): 0.266666666667
(3, 100.0, 100.0, 0.2): 0.2
(3, 100.0, 100.0, 0.3): 0.133333333333
(4, 1.0, 1.0, 0.1): 0.466666666667
(4, 1.0, 1.0, 0.2): 0.133333333333
(4, 1.0, 1.0, 0.3): 0.2
(4, 10.0, 10.0, 0.1): 0.533333333333
(4, 10.0, 10.0, 0.2): 0.133333333333
(4, 10.0, 10.0, 0.3): 0.2
(4, 100.0, 100.0, 0.1): 0.533333333333
(4, 100.0, 100.0, 0.2): 0.133333333333
(4, 100.0, 100.0, 0.3): 0.2
(5, 1.0, 1.0, 0.1): 0.0666666666667
(5, 1.0, 1.0, 0.2): 0.0666666666667
(5, 1.0, 1.0, 0.3): 0.333333333333
(5, 10.0, 10.0, 0.1): 0.266666666667
(5, 10.0, 10.0, 0.2): 0.0666666666667
(5, 10.0, 10.0, 0.3): 0.333333333333
(5, 100.0, 100.0, 0.1): 0.133333333333
(5, 100.0, 100.0, 0.2): 0.0666666666667
(5, 100.0, 100.0, 0.3): 0.333333333333
(6, 1.0, 1.0, 0.2): 0.266666666667
(6, 1.0, 1.0, 0.3): 0.333333333333
(6, 10.0, 10.0, 0.2): 0.266666666667
(6, 10.0, 10.0, 0.3): 0.333333333333
(6, 100.0, 100.0, 0.2): 0.266666666667
(6, 100.0, 100.0, 0.3): 0.333333333333
(7, 1.0, 1.0, 0.1): 0.666666666667
(7, 1.0, 1.0, 0.2): 0.266666666667
(7, 1.0, 1.0, 0.3): 0.4
(7, 10.0, 10.0, 0.1): 0.533333333333
(7, 10.0, 10.0, 0.2): 0.266666666667
(7, 10.0, 10.0, 0.3): 0.4
(7, 100.0, 100.0, 0.1): 0.6
(7, 100.0, 100.0, 0.2): 0.266666666667
(7, 100.0, 100.0, 0.3): 0.4
(8, 0.1, 0.1, 0.3): 0.0666666666667
(8, 1.0, 1.0, 0.1): 0.266666666667
(8, 1.0, 1.0, 0.2): 0.2
(8, 1.0, 1.0, 0.3): 0.533333333333
(8, 10.0, 10.0, 0.1): 0.466666666667
(8, 10.0, 10.0, 0.2): 0.2
(8, 10.0, 10.0, 0.3): 0.0666666666667
(8, 100.0, 100.0, 0.05): 0.8
(8, 100.0, 100.0, 0.1): 0.4
(8, 100.0, 100.0, 0.2): 0.2
(8, 100.0, 100.0, 0.3): 0.533333333333
(9, 1.0, 1.0, 0.1): 0.4
(9, 1.0, 1.0, 0.2): 0.533333333333
(9, 1.0, 1.0, 0.3): 0.266666666667
(9, 10.0, 10.0, 0.1): 0.4
(9, 10.0, 10.0, 0.2): 0.333333333333
(9, 10.0, 10.0, 0.3): 0.4
(9, 100.0, 100.0, 0.1): 0.466666666667
(9, 100.0, 100.0, 0.2): 0.733333333333
(9, 100.0, 100.0, 0.3): 0.4

Accuracy mean :0.6980842911877395
Std deviation :0.15522869231551295
Loss mean :0.3019157088122605
Std deviation :0.15522869231551292



QuantileConstPiecewise_2dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Using same parameters for all the clusterization: True
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 2
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: QuantileConstPiecewise
Cluster graph uses all connections: False
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random
Number of cluster considerated for validation (top_k): None


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.3): 0.4
(1, 1.0, 1.0, 0.2): 0.666666666667
(2, 10.0, 10.0, 0.3): 0.2
(3, 10.0, 10.0, 0.3): 0.6
(4, 100.0, 100.0, 0.3): 0.8
(5, 100.0, 100.0, 0.3): 0.866666666667
(6, 100.0, 100.0, 0.3): 0.333333333333
(7, 1.0, 1.0, 0.3): 0.466666666667
(8, 1.0, 1.0, 0.3): 0.6
(9, 0.1, 0.1, 0.3): 0.733333333333

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.3): 0.6
(1, 1.0, 1.0, 0.2): 0.333333333333
(2, 10.0, 10.0, 0.3): 0.8
(3, 10.0, 10.0, 0.3): 0.4
(4, 100.0, 100.0, 0.3): 0.2
(5, 100.0, 100.0, 0.3): 0.133333333333
(6, 100.0, 100.0, 0.3): 0.666666666667
(7, 1.0, 1.0, 0.3): 0.533333333333
(8, 1.0, 1.0, 0.3): 0.4
(9, 0.1, 0.1, 0.3): 0.266666666667

Accuracy mean :0.5666666666666667
Std deviation :0.20275875100994065
Loss mean :0.4333333333333334
Std deviation :0.20275875100994065

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 10.0, 10.0, 0.3): 0.696296296296
(1, 1.0, 1.0, 0.2): 0.592592592593
(2, 10.0, 10.0, 0.3): 0.348148148148
(3, 10.0, 10.0, 0.3): 0.666666666667
(4, 100.0, 100.0, 0.3): 0.666666666667
(5, 100.0, 100.0, 0.3): 0.666666666667
(6, 100.0, 100.0, 0.3): 0.451851851852
(7, 1.0, 1.0, 0.3): 0.688888888889
(8, 1.0, 1.0, 0.3): 0.674074074074
(9, 0.1, 0.1, 0.3): 0.651851851852
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.3): 0.303703703704
(1, 1.0, 1.0, 0.2): 0.407407407407
(2, 10.0, 10.0, 0.3): 0.651851851852
(3, 10.0, 10.0, 0.3): 0.333333333333
(4, 100.0, 100.0, 0.3): 0.333333333333
(5, 100.0, 100.0, 0.3): 0.333333333333
(6, 100.0, 100.0, 0.3): 0.548148148148
(7, 1.0, 1.0, 0.3): 0.311111111111
(8, 1.0, 1.0, 0.3): 0.325925925926
(9, 0.1, 0.1, 0.3): 0.348148148148

Accuracy mean :0.6103703703703703
Std deviation :0.1109232980582808
Loss mean :0.38962962962962966
Std deviation :0.11092329805828081

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 1.0, 0.1): 0.4
(0, 1.0, 1.0, 0.2): 0.533333333333
(0, 1.0, 1.0, 0.3): 0.8
(0, 10.0, 10.0, 0.1): 0.266666666667
(0, 10.0, 10.0, 0.2): 0.4
(0, 10.0, 10.0, 0.3): 0.933333333333
(0, 100.0, 100.0, 0.1): 0.333333333333
(0, 100.0, 100.0, 0.2): 0.533333333333
(0, 100.0, 100.0, 0.3): 0.866666666667
(1, 1.0, 1.0, 0.1): 0.133333333333
(1, 1.0, 1.0, 0.2): 0.6
(1, 1.0, 1.0, 0.3): 0.133333333333
(1, 10.0, 10.0, 0.1): 0.133333333333
(1, 10.0, 10.0, 0.2): 0.533333333333
(1, 10.0, 10.0, 0.3): 0.466666666667
(1, 100.0, 100.0, 0.1): 0.266666666667
(1, 100.0, 100.0, 0.2): 0.466666666667
(1, 100.0, 100.0, 0.3): 0.6
(2, 1.0, 1.0, 0.1): 0.533333333333
(2, 1.0, 1.0, 0.2): 0.533333333333
(2, 1.0, 1.0, 0.3): 0.533333333333
(2, 10.0, 10.0, 0.1): 0.533333333333
(2, 10.0, 10.0, 0.2): 0.6
(2, 10.0, 10.0, 0.3): 0.8
(2, 100.0, 100.0, 0.1): 0.466666666667
(2, 100.0, 100.0, 0.2): 0.533333333333
(2, 100.0, 100.0, 0.3): 0.733333333333
(3, 0.1, 0.1, 0.3): 0.666666666667
(3, 1.0, 1.0, 0.2): 0.466666666667
(3, 1.0, 1.0, 0.3): 0.866666666667
(3, 10.0, 10.0, 0.2): 0.4
(3, 10.0, 10.0, 0.3): 0.866666666667
(3, 100.0, 100.0, 0.2): 0.333333333333
(3, 100.0, 100.0, 0.3): 0.866666666667
(4, 0.1, 0.1, 0.3): 0.6
(4, 1.0, 1.0, 0.2): 0.4
(4, 1.0, 1.0, 0.3): 0.8
(4, 10.0, 10.0, 0.2): 0.4
(4, 10.0, 10.0, 0.3): 0.6
(4, 100.0, 100.0, 0.2): 0.533333333333
(4, 100.0, 100.0, 0.3): 0.8
(5, 0.1, 0.1, 0.3): 0.533333333333
(5, 1.0, 1.0, 0.1): 0.266666666667
(5, 1.0, 1.0, 0.2): 0.333333333333
(5, 1.0, 1.0, 0.3): 0.533333333333
(5, 10.0, 10.0, 0.1): 0.466666666667
(5, 10.0, 10.0, 0.2): 0.533333333333
(5, 10.0, 10.0, 0.3): 0.533333333333
(5, 100.0, 100.0, 0.1): 0.4
(5, 100.0, 100.0, 0.2): 0.266666666667
(5, 100.0, 100.0, 0.3): 0.533333333333
(6, 1.0, 1.0, 0.1): 0.533333333333
(6, 1.0, 1.0, 0.2): 0.4
(6, 1.0, 1.0, 0.3): 0.6
(6, 10.0, 10.0, 0.1): 0.333333333333
(6, 10.0, 10.0, 0.2): 0.533333333333
(6, 10.0, 10.0, 0.3): 0.6
(6, 100.0, 100.0, 0.1): 0.466666666667
(6, 100.0, 100.0, 0.2): 0.4
(6, 100.0, 100.0, 0.3): 0.733333333333
(7, 1.0, 1.0, 0.1): 0.266666666667
(7, 1.0, 1.0, 0.2): 0.333333333333
(7, 1.0, 1.0, 0.3): 0.733333333333
(7, 10.0, 10.0, 0.1): 0.266666666667
(7, 10.0, 10.0, 0.2): 0.666666666667
(7, 10.0, 10.0, 0.3): 0.733333333333
(7, 100.0, 100.0, 0.1): 0.4
(7, 100.0, 100.0, 0.2): 0.466666666667
(7, 100.0, 100.0, 0.3): 0.733333333333
(8, 1.0, 1.0, 0.1): 0.533333333333
(8, 1.0, 1.0, 0.2): 0.6
(8, 1.0, 1.0, 0.3): 0.6
(8, 10.0, 10.0, 0.1): 0.266666666667
(8, 10.0, 10.0, 0.2): 0.333333333333
(8, 10.0, 10.0, 0.3): 0.6
(8, 100.0, 100.0, 0.1): 0.466666666667
(8, 100.0, 100.0, 0.2): 0.2
(8, 100.0, 100.0, 0.3): 0.6
(9, 0.1, 0.1, 0.3): 0.666666666667
(9, 1.0, 1.0, 0.1): 0.266666666667
(9, 1.0, 1.0, 0.3): 0.666666666667
(9, 10.0, 10.0, 0.1): 0.266666666667
(9, 10.0, 10.0, 0.2): 0.533333333333
(9, 10.0, 10.0, 0.3): 0.666666666667
(9, 100.0, 100.0, 0.1): 0.333333333333
(9, 100.0, 100.0, 0.3): 0.666666666667

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.1): 0.6
(0, 1.0, 1.0, 0.2): 0.466666666667
(0, 1.0, 1.0, 0.3): 0.2
(0, 10.0, 10.0, 0.1): 0.733333333333
(0, 10.0, 10.0, 0.2): 0.6
(0, 10.0, 10.0, 0.3): 0.0666666666667
(0, 100.0, 100.0, 0.1): 0.666666666667
(0, 100.0, 100.0, 0.2): 0.466666666667
(0, 100.0, 100.0, 0.3): 0.133333333333
(1, 1.0, 1.0, 0.1): 0.866666666667
(1, 1.0, 1.0, 0.2): 0.4
(1, 1.0, 1.0, 0.3): 0.866666666667
(1, 10.0, 10.0, 0.1): 0.866666666667
(1, 10.0, 10.0, 0.2): 0.466666666667
(1, 10.0, 10.0, 0.3): 0.533333333333
(1, 100.0, 100.0, 0.1): 0.733333333333
(1, 100.0, 100.0, 0.2): 0.533333333333
(1, 100.0, 100.0, 0.3): 0.4
(2, 1.0, 1.0, 0.1): 0.466666666667
(2, 1.0, 1.0, 0.2): 0.466666666667
(2, 1.0, 1.0, 0.3): 0.466666666667
(2, 10.0, 10.0, 0.1): 0.466666666667
(2, 10.0, 10.0, 0.2): 0.4
(2, 10.0, 10.0, 0.3): 0.2
(2, 100.0, 100.0, 0.1): 0.533333333333
(2, 100.0, 100.0, 0.2): 0.466666666667
(2, 100.0, 100.0, 0.3): 0.266666666667
(3, 0.1, 0.1, 0.3): 0.333333333333
(3, 1.0, 1.0, 0.2): 0.533333333333
(3, 1.0, 1.0, 0.3): 0.133333333333
(3, 10.0, 10.0, 0.2): 0.6
(3, 10.0, 10.0, 0.3): 0.133333333333
(3, 100.0, 100.0, 0.2): 0.666666666667
(3, 100.0, 100.0, 0.3): 0.133333333333
(4, 0.1, 0.1, 0.3): 0.4
(4, 1.0, 1.0, 0.2): 0.6
(4, 1.0, 1.0, 0.3): 0.2
(4, 10.0, 10.0, 0.2): 0.6
(4, 10.0, 10.0, 0.3): 0.4
(4, 100.0, 100.0, 0.2): 0.466666666667
(4, 100.0, 100.0, 0.3): 0.2
(5, 0.1, 0.1, 0.3): 0.466666666667
(5, 1.0, 1.0, 0.1): 0.733333333333
(5, 1.0, 1.0, 0.2): 0.666666666667
(5, 1.0, 1.0, 0.3): 0.466666666667
(5, 10.0, 10.0, 0.1): 0.533333333333
(5, 10.0, 10.0, 0.2): 0.466666666667
(5, 10.0, 10.0, 0.3): 0.466666666667
(5, 100.0, 100.0, 0.1): 0.6
(5, 100.0, 100.0, 0.2): 0.733333333333
(5, 100.0, 100.0, 0.3): 0.466666666667
(6, 1.0, 1.0, 0.1): 0.466666666667
(6, 1.0, 1.0, 0.2): 0.6
(6, 1.0, 1.0, 0.3): 0.4
(6, 10.0, 10.0, 0.1): 0.666666666667
(6, 10.0, 10.0, 0.2): 0.466666666667
(6, 10.0, 10.0, 0.3): 0.4
(6, 100.0, 100.0, 0.1): 0.533333333333
(6, 100.0, 100.0, 0.2): 0.6
(6, 100.0, 100.0, 0.3): 0.266666666667
(7, 1.0, 1.0, 0.1): 0.733333333333
(7, 1.0, 1.0, 0.2): 0.666666666667
(7, 1.0, 1.0, 0.3): 0.266666666667
(7, 10.0, 10.0, 0.1): 0.733333333333
(7, 10.0, 10.0, 0.2): 0.333333333333
(7, 10.0, 10.0, 0.3): 0.266666666667
(7, 100.0, 100.0, 0.1): 0.6
(7, 100.0, 100.0, 0.2): 0.533333333333
(7, 100.0, 100.0, 0.3): 0.266666666667
(8, 1.0, 1.0, 0.1): 0.466666666667
(8, 1.0, 1.0, 0.2): 0.4
(8, 1.0, 1.0, 0.3): 0.4
(8, 10.0, 10.0, 0.1): 0.733333333333
(8, 10.0, 10.0, 0.2): 0.666666666667
(8, 10.0, 10.0, 0.3): 0.4
(8, 100.0, 100.0, 0.1): 0.533333333333
(8, 100.0, 100.0, 0.2): 0.8
(8, 100.0, 100.0, 0.3): 0.4
(9, 0.1, 0.1, 0.3): 0.333333333333
(9, 1.0, 1.0, 0.1): 0.733333333333
(9, 1.0, 1.0, 0.3): 0.333333333333
(9, 10.0, 10.0, 0.1): 0.733333333333
(9, 10.0, 10.0, 0.2): 0.466666666667
(9, 10.0, 10.0, 0.3): 0.333333333333
(9, 100.0, 100.0, 0.1): 0.666666666667
(9, 100.0, 100.0, 0.3): 0.333333333333

Accuracy mean :0.5131782945736433
Std deviation :0.1841440194267291
Loss mean :0.4868217054263566
Std deviation :0.18414401942672906



QuantileLinPiecewise_3dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Using same parameters for all the clusterization: True
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 3
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: QuantileLinPiecewise
Cluster graph uses all connections: False
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random
Number of cluster considerated for validation (top_k): None


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.2): 0.933333333333
(1, 10.0, 10.0, 0.2): 0.733333333333
(2, 10.0, 10.0, 0.3): 0.466666666667
(3, 100.0, 100.0, 0.2): 0.933333333333
(4, 10.0, 10.0, 0.2): 1.0
(5, 10.0, 10.0, 0.2): 0.866666666667
(6, 100.0, 100.0, 0.2): 1.0
(7, 100.0, 100.0, 0.2): 1.0
(8, 1.0, 1.0, 0.3): 0.933333333333
(9, 10.0, 10.0, 0.2): 1.0

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.2): 0.0666666666667
(1, 10.0, 10.0, 0.2): 0.266666666667
(2, 10.0, 10.0, 0.3): 0.533333333333
(3, 100.0, 100.0, 0.2): 0.0666666666667
(4, 10.0, 10.0, 0.2): 0.0
(5, 10.0, 10.0, 0.2): 0.133333333333
(6, 100.0, 100.0, 0.2): 0.0
(7, 100.0, 100.0, 0.2): 0.0
(8, 1.0, 1.0, 0.3): 0.0666666666667
(9, 10.0, 10.0, 0.2): 0.0

Accuracy mean :0.8866666666666667
Std deviation :0.16069294390925268
Loss mean :0.11333333333333333
Std deviation :0.16069294390925265

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 1.0, 1.0, 0.2): 0.859259259259
(1, 10.0, 10.0, 0.2): 0.881481481481
(2, 10.0, 10.0, 0.3): 0.688888888889
(3, 100.0, 100.0, 0.2): 0.925925925926
(4, 10.0, 10.0, 0.2): 0.888888888889
(5, 10.0, 10.0, 0.2): 0.881481481481
(6, 100.0, 100.0, 0.2): 0.903703703704
(7, 100.0, 100.0, 0.2): 0.903703703704
(8, 1.0, 1.0, 0.3): 0.896296296296
(9, 10.0, 10.0, 0.2): 0.925925925926
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.2): 0.140740740741
(1, 10.0, 10.0, 0.2): 0.118518518519
(2, 10.0, 10.0, 0.3): 0.311111111111
(3, 100.0, 100.0, 0.2): 0.0740740740741
(4, 10.0, 10.0, 0.2): 0.111111111111
(5, 10.0, 10.0, 0.2): 0.118518518519
(6, 100.0, 100.0, 0.2): 0.0962962962963
(7, 100.0, 100.0, 0.2): 0.0962962962963
(8, 1.0, 1.0, 0.3): 0.103703703704
(9, 10.0, 10.0, 0.2): 0.0740740740741

Accuracy mean :0.8755555555555554
Std deviation :0.06515150645124747
Loss mean :0.12444444444444444
Std deviation :0.06515150645124748

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 1.0, 0.2): 0.8
(0, 1.0, 1.0, 0.3): 0.6
(0, 10.0, 10.0, 0.2): 0.8
(0, 10.0, 10.0, 0.3): 0.6
(0, 100.0, 100.0, 0.2): 0.8
(0, 100.0, 100.0, 0.3): 0.6
(1, 1.0, 1.0, 0.3): 0.466666666667
(1, 10.0, 10.0, 0.2): 0.733333333333
(1, 10.0, 10.0, 0.3): 0.466666666667
(1, 100.0, 100.0, 0.3): 0.466666666667
(2, 1.0, 1.0, 0.2): 0.133333333333
(2, 1.0, 1.0, 0.3): 0.733333333333
(2, 10.0, 10.0, 0.2): 0.133333333333
(2, 10.0, 10.0, 0.3): 0.733333333333
(2, 100.0, 100.0, 0.3): 0.733333333333
(3, 0.1, 0.1, 0.3): 0.666666666667
(3, 1.0, 1.0, 0.2): 0.666666666667
(3, 1.0, 1.0, 0.3): 0.666666666667
(3, 10.0, 10.0, 0.2): 0.666666666667
(3, 10.0, 10.0, 0.3): 0.266666666667
(3, 100.0, 100.0, 0.2): 0.866666666667
(3, 100.0, 100.0, 0.3): 0.266666666667
(4, 1.0, 1.0, 0.2): 0.8
(4, 1.0, 1.0, 0.3): 0.466666666667
(4, 10.0, 10.0, 0.2): 0.866666666667
(4, 10.0, 10.0, 0.3): 0.266666666667
(4, 100.0, 100.0, 0.2): 0.866666666667
(4, 100.0, 100.0, 0.3): 0.266666666667
(5, 1.0, 1.0, 0.3): 0.533333333333
(5, 10.0, 10.0, 0.2): 0.866666666667
(5, 10.0, 10.0, 0.3): 0.533333333333
(5, 100.0, 100.0, 0.2): 0.866666666667
(5, 100.0, 100.0, 0.3): 0.533333333333
(6, 1.0, 1.0, 0.2): 0.866666666667
(6, 1.0, 1.0, 0.3): 0.733333333333
(6, 10.0, 10.0, 0.2): 0.866666666667
(6, 10.0, 10.0, 0.3): 0.733333333333
(6, 100.0, 100.0, 0.2): 0.866666666667
(6, 100.0, 100.0, 0.3): 0.733333333333
(7, 1.0, 1.0, 0.2): 0.933333333333
(7, 1.0, 1.0, 0.3): 0.666666666667
(7, 10.0, 10.0, 0.2): 0.933333333333
(7, 10.0, 10.0, 0.3): 0.666666666667
(7, 100.0, 100.0, 0.2): 1.0
(7, 100.0, 100.0, 0.3): 0.666666666667
(8, 0.1, 0.1, 0.3): 0.666666666667
(8, 1.0, 1.0, 0.2): 0.866666666667
(8, 1.0, 1.0, 0.3): 0.933333333333
(8, 10.0, 10.0, 0.2): 0.933333333333
(8, 10.0, 10.0, 0.3): 0.666666666667
(8, 100.0, 100.0, 0.2): 0.866666666667
(8, 100.0, 100.0, 0.3): 0.933333333333
(9, 1.0, 1.0, 0.2): 0.8
(9, 1.0, 1.0, 0.3): 0.8
(9, 10.0, 10.0, 0.2): 0.866666666667
(9, 10.0, 10.0, 0.3): 0.8
(9, 100.0, 100.0, 0.2): 0.8
(9, 100.0, 100.0, 0.3): 0.8

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.2): 0.2
(0, 1.0, 1.0, 0.3): 0.4
(0, 10.0, 10.0, 0.2): 0.2
(0, 10.0, 10.0, 0.3): 0.4
(0, 100.0, 100.0, 0.2): 0.2
(0, 100.0, 100.0, 0.3): 0.4
(1, 1.0, 1.0, 0.3): 0.533333333333
(1, 10.0, 10.0, 0.2): 0.266666666667
(1, 10.0, 10.0, 0.3): 0.533333333333
(1, 100.0, 100.0, 0.3): 0.533333333333
(2, 1.0, 1.0, 0.2): 0.866666666667
(2, 1.0, 1.0, 0.3): 0.266666666667
(2, 10.0, 10.0, 0.2): 0.866666666667
(2, 10.0, 10.0, 0.3): 0.266666666667
(2, 100.0, 100.0, 0.3): 0.266666666667
(3, 0.1, 0.1, 0.3): 0.333333333333
(3, 1.0, 1.0, 0.2): 0.333333333333
(3, 1.0, 1.0, 0.3): 0.333333333333
(3, 10.0, 10.0, 0.2): 0.333333333333
(3, 10.0, 10.0, 0.3): 0.733333333333
(3, 100.0, 100.0, 0.2): 0.133333333333
(3, 100.0, 100.0, 0.3): 0.733333333333
(4, 1.0, 1.0, 0.2): 0.2
(4, 1.0, 1.0, 0.3): 0.533333333333
(4, 10.0, 10.0, 0.2): 0.133333333333
(4, 10.0, 10.0, 0.3): 0.733333333333
(4, 100.0, 100.0, 0.2): 0.133333333333
(4, 100.0, 100.0, 0.3): 0.733333333333
(5, 1.0, 1.0, 0.3): 0.466666666667
(5, 10.0, 10.0, 0.2): 0.133333333333
(5, 10.0, 10.0, 0.3): 0.466666666667
(5, 100.0, 100.0, 0.2): 0.133333333333
(5, 100.0, 100.0, 0.3): 0.466666666667
(6, 1.0, 1.0, 0.2): 0.133333333333
(6, 1.0, 1.0, 0.3): 0.266666666667
(6, 10.0, 10.0, 0.2): 0.133333333333
(6, 10.0, 10.0, 0.3): 0.266666666667
(6, 100.0, 100.0, 0.2): 0.133333333333
(6, 100.0, 100.0, 0.3): 0.266666666667
(7, 1.0, 1.0, 0.2): 0.0666666666667
(7, 1.0, 1.0, 0.3): 0.333333333333
(7, 10.0, 10.0, 0.2): 0.0666666666667
(7, 10.0, 10.0, 0.3): 0.333333333333
(7, 100.0, 100.0, 0.2): 0.0
(7, 100.0, 100.0, 0.3): 0.333333333333
(8, 0.1, 0.1, 0.3): 0.333333333333
(8, 1.0, 1.0, 0.2): 0.133333333333
(8, 1.0, 1.0, 0.3): 0.0666666666667
(8, 10.0, 10.0, 0.2): 0.0666666666667
(8, 10.0, 10.0, 0.3): 0.333333333333
(8, 100.0, 100.0, 0.2): 0.133333333333
(8, 100.0, 100.0, 0.3): 0.0666666666667
(9, 1.0, 1.0, 0.2): 0.2
(9, 1.0, 1.0, 0.3): 0.2
(9, 10.0, 10.0, 0.2): 0.133333333333
(9, 10.0, 10.0, 0.3): 0.2
(9, 100.0, 100.0, 0.2): 0.2
(9, 100.0, 100.0, 0.3): 0.2

Accuracy mean :0.6919540229885056
Std deviation :0.20745773191132835
Loss mean :0.3080459770114942
Std deviation :0.20745773191132832



Crisp_3dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Using same parameters for all the clusterization: True
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 3
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: Crisp
Cluster graph uses all connections: False
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random
Number of cluster considerated for validation (top_k): None


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.3): 0.333333333333
(1, 1.0, 1.0, 0.3): 0.133333333333
(2, 10.0, 10.0, 0.2): 0.333333333333
(3, 1.0, 1.0, 0.2): 0.466666666667
(4, 10.0, 10.0, 0.2): 0.4
(5, 100.0, 100.0, 0.2): 0.4
(6, 1.0, 1.0, 0.3): 0.333333333333
(7, 100.0, 100.0, 0.3): 0.466666666667
(8, 100.0, 100.0, 0.3): 0.4
(9, 10.0, 10.0, 0.3): 0.2

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.3): 0.666666666667
(1, 1.0, 1.0, 0.3): 0.866666666667
(2, 10.0, 10.0, 0.2): 0.666666666667
(3, 1.0, 1.0, 0.2): 0.533333333333
(4, 10.0, 10.0, 0.2): 0.6
(5, 100.0, 100.0, 0.2): 0.6
(6, 1.0, 1.0, 0.3): 0.666666666667
(7, 100.0, 100.0, 0.3): 0.533333333333
(8, 100.0, 100.0, 0.3): 0.6
(9, 10.0, 10.0, 0.3): 0.8

Accuracy mean :0.34666666666666673
Std deviation :0.1024152766382481
Loss mean :0.6533333333333333
Std deviation :0.10241527663824812

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 1.0, 1.0, 0.3): 0.42962962963
(1, 1.0, 1.0, 0.3): 0.555555555556
(2, 10.0, 10.0, 0.2): 0.444444444444
(3, 1.0, 1.0, 0.2): 0.422222222222
(4, 10.0, 10.0, 0.2): 0.37037037037
(5, 100.0, 100.0, 0.2): 0.4
(6, 1.0, 1.0, 0.3): 0.540740740741
(7, 100.0, 100.0, 0.3): 0.422222222222
(8, 100.0, 100.0, 0.3): 0.488888888889
(9, 10.0, 10.0, 0.3): 0.377777777778
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.3): 0.57037037037
(1, 1.0, 1.0, 0.3): 0.444444444444
(2, 10.0, 10.0, 0.2): 0.555555555556
(3, 1.0, 1.0, 0.2): 0.577777777778
(4, 10.0, 10.0, 0.2): 0.62962962963
(5, 100.0, 100.0, 0.2): 0.6
(6, 1.0, 1.0, 0.3): 0.459259259259
(7, 100.0, 100.0, 0.3): 0.577777777778
(8, 100.0, 100.0, 0.3): 0.511111111111
(9, 10.0, 10.0, 0.3): 0.622222222222

Accuracy mean :0.4451851851851852
Std deviation :0.06058244957212545
Loss mean :0.5548148148148149
Std deviation :0.06058244957212545

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 0.1, 0.1, 0.3): 0.533333333333
(0, 1.0, 1.0, 0.2): 0.266666666667
(0, 1.0, 1.0, 0.3): 0.4
(0, 10.0, 10.0, 0.2): 0.266666666667
(0, 10.0, 10.0, 0.3): 0.266666666667
(0, 100.0, 100.0, 0.2): 0.266666666667
(0, 100.0, 100.0, 0.3): 0.266666666667
(1, 1.0, 1.0, 0.2): 0.333333333333
(1, 1.0, 1.0, 0.3): 0.6
(1, 10.0, 10.0, 0.2): 0.4
(1, 10.0, 10.0, 0.3): 0.6
(1, 100.0, 100.0, 0.2): 0.4
(1, 100.0, 100.0, 0.3): 0.533333333333
(2, 1.0, 1.0, 0.2): 0.466666666667
(2, 1.0, 1.0, 0.3): 0.266666666667
(2, 10.0, 10.0, 0.2): 0.666666666667
(2, 10.0, 10.0, 0.3): 0.266666666667
(2, 100.0, 100.0, 0.2): 0.466666666667
(2, 100.0, 100.0, 0.3): 0.266666666667
(3, 0.1, 0.1, 0.3): 0.333333333333
(3, 1.0, 1.0, 0.2): 0.533333333333
(3, 1.0, 1.0, 0.3): 0.266666666667
(3, 10.0, 10.0, 0.2): 0.266666666667
(3, 10.0, 10.0, 0.3): 0.4
(3, 100.0, 100.0, 0.2): 0.133333333333
(3, 100.0, 100.0, 0.3): 0.333333333333
(4, 1.0, 1.0, 0.2): 0.466666666667
(4, 1.0, 1.0, 0.3): 0.2
(4, 10.0, 10.0, 0.2): 0.533333333333
(4, 10.0, 10.0, 0.3): 0.4
(4, 100.0, 100.0, 0.2): 0.266666666667
(4, 100.0, 100.0, 0.3): 0.466666666667
(5, 1.0, 1.0, 0.2): 0.133333333333
(5, 1.0, 1.0, 0.3): 0.266666666667
(5, 10.0, 10.0, 0.2): 0.466666666667
(5, 10.0, 10.0, 0.3): 0.2
(5, 100.0, 100.0, 0.2): 0.533333333333
(5, 100.0, 100.0, 0.3): 0.2
(6, 1.0, 1.0, 0.2): 0.2
(6, 1.0, 1.0, 0.3): 0.333333333333
(6, 10.0, 10.0, 0.2): 0.0666666666667
(6, 10.0, 10.0, 0.3): 0.266666666667
(6, 100.0, 100.0, 0.2): 0.2
(6, 100.0, 100.0, 0.3): 0.266666666667
(7, 1.0, 1.0, 0.2): 0.333333333333
(7, 1.0, 1.0, 0.3): 0.266666666667
(7, 10.0, 10.0, 0.2): 0.333333333333
(7, 10.0, 10.0, 0.3): 0.333333333333
(7, 100.0, 100.0, 0.2): 0.333333333333
(7, 100.0, 100.0, 0.3): 0.4
(8, 1.0, 1.0, 0.2): 0.2
(8, 1.0, 1.0, 0.3): 0.4
(8, 10.0, 10.0, 0.2): 0.266666666667
(8, 10.0, 10.0, 0.3): 0.466666666667
(8, 100.0, 100.0, 0.2): 0.333333333333
(8, 100.0, 100.0, 0.3): 0.533333333333
(9, 0.1, 0.1, 0.3): 0.4
(9, 1.0, 1.0, 0.2): 0.266666666667
(9, 1.0, 1.0, 0.3): 0.533333333333
(9, 10.0, 10.0, 0.2): 0.266666666667
(9, 10.0, 10.0, 0.3): 0.666666666667
(9, 100.0, 100.0, 0.2): 0.266666666667
(9, 100.0, 100.0, 0.3): 0.533333333333

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 0.1, 0.1, 0.3): 0.466666666667
(0, 1.0, 1.0, 0.2): 0.733333333333
(0, 1.0, 1.0, 0.3): 0.6
(0, 10.0, 10.0, 0.2): 0.733333333333
(0, 10.0, 10.0, 0.3): 0.733333333333
(0, 100.0, 100.0, 0.2): 0.733333333333
(0, 100.0, 100.0, 0.3): 0.733333333333
(1, 1.0, 1.0, 0.2): 0.666666666667
(1, 1.0, 1.0, 0.3): 0.4
(1, 10.0, 10.0, 0.2): 0.6
(1, 10.0, 10.0, 0.3): 0.4
(1, 100.0, 100.0, 0.2): 0.6
(1, 100.0, 100.0, 0.3): 0.466666666667
(2, 1.0, 1.0, 0.2): 0.533333333333
(2, 1.0, 1.0, 0.3): 0.733333333333
(2, 10.0, 10.0, 0.2): 0.333333333333
(2, 10.0, 10.0, 0.3): 0.733333333333
(2, 100.0, 100.0, 0.2): 0.533333333333
(2, 100.0, 100.0, 0.3): 0.733333333333
(3, 0.1, 0.1, 0.3): 0.666666666667
(3, 1.0, 1.0, 0.2): 0.466666666667
(3, 1.0, 1.0, 0.3): 0.733333333333
(3, 10.0, 10.0, 0.2): 0.733333333333
(3, 10.0, 10.0, 0.3): 0.6
(3, 100.0, 100.0, 0.2): 0.866666666667
(3, 100.0, 100.0, 0.3): 0.666666666667
(4, 1.0, 1.0, 0.2): 0.533333333333
(4, 1.0, 1.0, 0.3): 0.8
(4, 10.0, 10.0, 0.2): 0.466666666667
(4, 10.0, 10.0, 0.3): 0.6
(4, 100.0, 100.0, 0.2): 0.733333333333
(4, 100.0, 100.0, 0.3): 0.533333333333
(5, 1.0, 1.0, 0.2): 0.866666666667
(5, 1.0, 1.0, 0.3): 0.733333333333
(5, 10.0, 10.0, 0.2): 0.533333333333
(5, 10.0, 10.0, 0.3): 0.8
(5, 100.0, 100.0, 0.2): 0.466666666667
(5, 100.0, 100.0, 0.3): 0.8
(6, 1.0, 1.0, 0.2): 0.8
(6, 1.0, 1.0, 0.3): 0.666666666667
(6, 10.0, 10.0, 0.2): 0.933333333333
(6, 10.0, 10.0, 0.3): 0.733333333333
(6, 100.0, 100.0, 0.2): 0.8
(6, 100.0, 100.0, 0.3): 0.733333333333
(7, 1.0, 1.0, 0.2): 0.666666666667
(7, 1.0, 1.0, 0.3): 0.733333333333
(7, 10.0, 10.0, 0.2): 0.666666666667
(7, 10.0, 10.0, 0.3): 0.666666666667
(7, 100.0, 100.0, 0.2): 0.666666666667
(7, 100.0, 100.0, 0.3): 0.6
(8, 1.0, 1.0, 0.2): 0.8
(8, 1.0, 1.0, 0.3): 0.6
(8, 10.0, 10.0, 0.2): 0.733333333333
(8, 10.0, 10.0, 0.3): 0.533333333333
(8, 100.0, 100.0, 0.2): 0.666666666667
(8, 100.0, 100.0, 0.3): 0.466666666667
(9, 0.1, 0.1, 0.3): 0.6
(9, 1.0, 1.0, 0.2): 0.733333333333
(9, 1.0, 1.0, 0.3): 0.466666666667
(9, 10.0, 10.0, 0.2): 0.733333333333
(9, 10.0, 10.0, 0.3): 0.333333333333
(9, 100.0, 100.0, 0.2): 0.733333333333
(9, 100.0, 100.0, 0.3): 0.466666666667

Accuracy mean :0.35555555555555546
Std deviation :0.13438736818105856
Loss mean :0.6444444444444444
Std deviation :0.13438736818105856



Linear_3dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Using same parameters for all the clusterization: True
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 3
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: Linear
Cluster graph uses all connections: False
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random
Number of cluster considerated for validation (top_k): None


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.3): 0.666666666667
(1, 10.0, 10.0, 0.2): 0.866666666667
(2, 100.0, 100.0, 0.2): 0.8
(3, 10.0, 10.0, 0.2): 0.2
(4, 10.0, 10.0, 0.2): 0.8
(5, 10.0, 10.0, 0.2): 1.0
(6, 100.0, 100.0, 0.3): 0.466666666667
(7, 10.0, 10.0, 0.3): 0.4
(8, 1.0, 1.0, 0.2): 0.933333333333
(9, 10.0, 10.0, 0.2): 1.0

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.3): 0.333333333333
(1, 10.0, 10.0, 0.2): 0.133333333333
(2, 100.0, 100.0, 0.2): 0.2
(3, 10.0, 10.0, 0.2): 0.8
(4, 10.0, 10.0, 0.2): 0.2
(5, 10.0, 10.0, 0.2): 0.0
(6, 100.0, 100.0, 0.3): 0.533333333333
(7, 10.0, 10.0, 0.3): 0.6
(8, 1.0, 1.0, 0.2): 0.0666666666667
(9, 10.0, 10.0, 0.2): 0.0

Accuracy mean :0.7133333333333333
Std deviation :0.26
Loss mean :0.2866666666666667
Std deviation :0.26

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 1.0, 1.0, 0.3): 0.666666666667
(1, 10.0, 10.0, 0.2): 0.888888888889
(2, 100.0, 100.0, 0.2): 0.859259259259
(3, 10.0, 10.0, 0.2): 0.348148148148
(4, 10.0, 10.0, 0.2): 0.925925925926
(5, 10.0, 10.0, 0.2): 0.911111111111
(6, 100.0, 100.0, 0.3): 0.681481481481
(7, 10.0, 10.0, 0.3): 0.696296296296
(8, 1.0, 1.0, 0.2): 0.911111111111
(9, 10.0, 10.0, 0.2): 0.918518518519
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.3): 0.333333333333
(1, 10.0, 10.0, 0.2): 0.111111111111
(2, 100.0, 100.0, 0.2): 0.140740740741
(3, 10.0, 10.0, 0.2): 0.651851851852
(4, 10.0, 10.0, 0.2): 0.0740740740741
(5, 10.0, 10.0, 0.2): 0.0888888888889
(6, 100.0, 100.0, 0.3): 0.318518518519
(7, 10.0, 10.0, 0.3): 0.303703703704
(8, 1.0, 1.0, 0.2): 0.0888888888889
(9, 10.0, 10.0, 0.2): 0.0814814814815

Accuracy mean :0.7807407407407407
Std deviation :0.17579761402645283
Loss mean :0.21925925925925926
Std deviation :0.17579761402645286

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 1.0, 0.2): 0.266666666667
(0, 1.0, 1.0, 0.3): 0.8
(0, 10.0, 10.0, 0.2): 0.266666666667
(0, 10.0, 10.0, 0.3): 0.666666666667
(0, 100.0, 100.0, 0.2): 0.266666666667
(0, 100.0, 100.0, 0.3): 0.666666666667
(1, 0.1, 0.1, 0.3): 0.666666666667
(1, 1.0, 1.0, 0.2): 1.0
(1, 1.0, 1.0, 0.3): 0.666666666667
(1, 10.0, 10.0, 0.2): 1.0
(1, 10.0, 10.0, 0.3): 0.666666666667
(1, 100.0, 100.0, 0.2): 0.933333333333
(1, 100.0, 100.0, 0.3): 0.666666666667
(2, 1.0, 1.0, 0.2): 1.0
(2, 1.0, 1.0, 0.3): 0.666666666667
(2, 10.0, 10.0, 0.2): 1.0
(2, 10.0, 10.0, 0.3): 0.666666666667
(2, 100.0, 100.0, 0.2): 1.0
(2, 100.0, 100.0, 0.3): 0.6
(3, 1.0, 1.0, 0.2): 1.0
(3, 1.0, 1.0, 0.3): 0.733333333333
(3, 10.0, 10.0, 0.2): 1.0
(3, 10.0, 10.0, 0.3): 0.266666666667
(3, 100.0, 100.0, 0.2): 1.0
(3, 100.0, 100.0, 0.3): 0.733333333333
(4, 1.0, 1.0, 0.2): 0.8
(4, 1.0, 1.0, 0.3): 0.666666666667
(4, 10.0, 10.0, 0.2): 0.866666666667
(4, 10.0, 10.0, 0.3): 0.666666666667
(4, 100.0, 100.0, 0.2): 0.8
(4, 100.0, 100.0, 0.3): 0.666666666667
(5, 1.0, 1.0, 0.2): 0.8
(5, 1.0, 1.0, 0.3): 0.6
(5, 10.0, 10.0, 0.2): 0.8
(5, 10.0, 10.0, 0.3): 0.6
(5, 100.0, 100.0, 0.2): 0.8
(5, 100.0, 100.0, 0.3): 0.6
(6, 1.0, 1.0, 0.2): 0.133333333333
(6, 1.0, 1.0, 0.3): 0.733333333333
(6, 10.0, 10.0, 0.2): 0.133333333333
(6, 10.0, 10.0, 0.3): 0.733333333333
(6, 100.0, 100.0, 0.2): 0.133333333333
(6, 100.0, 100.0, 0.3): 0.733333333333
(7, 1.0, 1.0, 0.2): 0.8
(7, 1.0, 1.0, 0.3): 0.6
(7, 10.0, 10.0, 0.2): 0.8
(7, 10.0, 10.0, 0.3): 1.0
(7, 100.0, 100.0, 0.2): 0.8
(7, 100.0, 100.0, 0.3): 0.4
(8, 1.0, 1.0, 0.2): 0.866666666667
(8, 1.0, 1.0, 0.3): 0.666666666667
(8, 10.0, 10.0, 0.2): 0.866666666667
(8, 10.0, 10.0, 0.3): 0.6
(8, 100.0, 100.0, 0.2): 0.866666666667
(8, 100.0, 100.0, 0.3): 0.666666666667
(9, 1.0, 1.0, 0.2): 0.266666666667
(9, 1.0, 1.0, 0.3): 0.533333333333
(9, 10.0, 10.0, 0.2): 1.0
(9, 10.0, 10.0, 0.3): 0.533333333333
(9, 100.0, 100.0, 0.2): 1.0
(9, 100.0, 100.0, 0.3): 0.533333333333

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.2): 0.733333333333
(0, 1.0, 1.0, 0.3): 0.2
(0, 10.0, 10.0, 0.2): 0.733333333333
(0, 10.0, 10.0, 0.3): 0.333333333333
(0, 100.0, 100.0, 0.2): 0.733333333333
(0, 100.0, 100.0, 0.3): 0.333333333333
(1, 0.1, 0.1, 0.3): 0.333333333333
(1, 1.0, 1.0, 0.2): 0.0
(1, 1.0, 1.0, 0.3): 0.333333333333
(1, 10.0, 10.0, 0.2): 0.0
(1, 10.0, 10.0, 0.3): 0.333333333333
(1, 100.0, 100.0, 0.2): 0.0666666666667
(1, 100.0, 100.0, 0.3): 0.333333333333
(2, 1.0, 1.0, 0.2): 0.0
(2, 1.0, 1.0, 0.3): 0.333333333333
(2, 10.0, 10.0, 0.2): 0.0
(2, 10.0, 10.0, 0.3): 0.333333333333
(2, 100.0, 100.0, 0.2): 0.0
(2, 100.0, 100.0, 0.3): 0.4
(3, 1.0, 1.0, 0.2): 0.0
(3, 1.0, 1.0, 0.3): 0.266666666667
(3, 10.0, 10.0, 0.2): 0.0
(3, 10.0, 10.0, 0.3): 0.733333333333
(3, 100.0, 100.0, 0.2): 0.0
(3, 100.0, 100.0, 0.3): 0.266666666667
(4, 1.0, 1.0, 0.2): 0.2
(4, 1.0, 1.0, 0.3): 0.333333333333
(4, 10.0, 10.0, 0.2): 0.133333333333
(4, 10.0, 10.0, 0.3): 0.333333333333
(4, 100.0, 100.0, 0.2): 0.2
(4, 100.0, 100.0, 0.3): 0.333333333333
(5, 1.0, 1.0, 0.2): 0.2
(5, 1.0, 1.0, 0.3): 0.4
(5, 10.0, 10.0, 0.2): 0.2
(5, 10.0, 10.0, 0.3): 0.4
(5, 100.0, 100.0, 0.2): 0.2
(5, 100.0, 100.0, 0.3): 0.4
(6, 1.0, 1.0, 0.2): 0.866666666667
(6, 1.0, 1.0, 0.3): 0.266666666667
(6, 10.0, 10.0, 0.2): 0.866666666667
(6, 10.0, 10.0, 0.3): 0.266666666667
(6, 100.0, 100.0, 0.2): 0.866666666667
(6, 100.0, 100.0, 0.3): 0.266666666667
(7, 1.0, 1.0, 0.2): 0.2
(7, 1.0, 1.0, 0.3): 0.4
(7, 10.0, 10.0, 0.2): 0.2
(7, 10.0, 10.0, 0.3): 0.0
(7, 100.0, 100.0, 0.2): 0.2
(7, 100.0, 100.0, 0.3): 0.6
(8, 1.0, 1.0, 0.2): 0.133333333333
(8, 1.0, 1.0, 0.3): 0.333333333333
(8, 10.0, 10.0, 0.2): 0.133333333333
(8, 10.0, 10.0, 0.3): 0.4
(8, 100.0, 100.0, 0.2): 0.133333333333
(8, 100.0, 100.0, 0.3): 0.333333333333
(9, 1.0, 1.0, 0.2): 0.733333333333
(9, 1.0, 1.0, 0.3): 0.466666666667
(9, 10.0, 10.0, 0.2): 0.0
(9, 10.0, 10.0, 0.3): 0.466666666667
(9, 100.0, 100.0, 0.2): 0.0
(9, 100.0, 100.0, 0.3): 0.466666666667

Accuracy mean :0.692896174863388
Std deviation :0.23602003203692043
Loss mean :0.30710382513661194
Std deviation :0.23602003203692043



QuantileConstPiecewise_3dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Using same parameters for all the clusterization: True
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 3
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: QuantileConstPiecewise
Cluster graph uses all connections: False
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random
Number of cluster considerated for validation (top_k): None


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.3): 0.466666666667
(1, 10.0, 10.0, 0.3): 0.666666666667
(2, 100.0, 100.0, 0.3): 0.6
(3, 100.0, 100.0, 0.3): 0.466666666667
(4, 100.0, 100.0, 0.3): 0.4
(5, 10.0, 10.0, 0.3): 0.533333333333
(6, 100.0, 100.0, 0.3): 0.466666666667
(7, 1.0, 1.0, 0.2): 0.2
(8, 100.0, 100.0, 0.3): 0.4
(9, 1.0, 1.0, 0.3): 0.466666666667

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.3): 0.533333333333
(1, 10.0, 10.0, 0.3): 0.333333333333
(2, 100.0, 100.0, 0.3): 0.4
(3, 100.0, 100.0, 0.3): 0.533333333333
(4, 100.0, 100.0, 0.3): 0.6
(5, 10.0, 10.0, 0.3): 0.466666666667
(6, 100.0, 100.0, 0.3): 0.533333333333
(7, 1.0, 1.0, 0.2): 0.8
(8, 100.0, 100.0, 0.3): 0.6
(9, 1.0, 1.0, 0.3): 0.533333333333

Accuracy mean :0.4666666666666667
Std deviation :0.11925695879998877
Loss mean :0.5333333333333333
Std deviation :0.1192569587999888

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 10.0, 10.0, 0.3): 0.562962962963
(1, 10.0, 10.0, 0.3): 0.748148148148
(2, 100.0, 100.0, 0.3): 0.6
(3, 100.0, 100.0, 0.3): 0.666666666667
(4, 100.0, 100.0, 0.3): 0.444444444444
(5, 10.0, 10.0, 0.3): 0.481481481481
(6, 100.0, 100.0, 0.3): 0.540740740741
(7, 1.0, 1.0, 0.2): 0.340740740741
(8, 100.0, 100.0, 0.3): 0.674074074074
(9, 1.0, 1.0, 0.3): 0.533333333333
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.3): 0.437037037037
(1, 10.0, 10.0, 0.3): 0.251851851852
(2, 100.0, 100.0, 0.3): 0.4
(3, 100.0, 100.0, 0.3): 0.333333333333
(4, 100.0, 100.0, 0.3): 0.555555555556
(5, 10.0, 10.0, 0.3): 0.518518518519
(6, 100.0, 100.0, 0.3): 0.459259259259
(7, 1.0, 1.0, 0.2): 0.659259259259
(8, 100.0, 100.0, 0.3): 0.325925925926
(9, 1.0, 1.0, 0.3): 0.466666666667

Accuracy mean :0.5592592592592592
Std deviation :0.11404761597930232
Loss mean :0.44074074074074077
Std deviation :0.11404761597930231

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 1.0, 0.2): 0.4
(0, 1.0, 1.0, 0.3): 0.333333333333
(0, 10.0, 10.0, 0.2): 0.2
(0, 10.0, 10.0, 0.3): 0.6
(0, 100.0, 100.0, 0.2): 0.333333333333
(0, 100.0, 100.0, 0.3): 0.4
(1, 0.1, 0.1, 0.3): 0.666666666667
(1, 1.0, 1.0, 0.2): 0.333333333333
(1, 1.0, 1.0, 0.3): 0.333333333333
(1, 10.0, 10.0, 0.2): 0.133333333333
(1, 10.0, 10.0, 0.3): 0.4
(1, 100.0, 100.0, 0.2): 0.333333333333
(1, 100.0, 100.0, 0.3): 0.2
(2, 0.1, 0.1, 0.3): 0.466666666667
(2, 1.0, 1.0, 0.2): 0.266666666667
(2, 1.0, 1.0, 0.3): 0.466666666667
(2, 10.0, 10.0, 0.2): 0.266666666667
(2, 10.0, 10.0, 0.3): 0.6
(2, 100.0, 100.0, 0.2): 0.266666666667
(2, 100.0, 100.0, 0.3): 0.666666666667
(3, 1.0, 1.0, 0.2): 0.4
(3, 1.0, 1.0, 0.3): 0.6
(3, 10.0, 10.0, 0.2): 0.133333333333
(3, 10.0, 10.0, 0.3): 0.533333333333
(3, 100.0, 100.0, 0.2): 0.466666666667
(3, 100.0, 100.0, 0.3): 0.8
(4, 1.0, 1.0, 0.2): 0.2
(4, 1.0, 1.0, 0.3): 0.466666666667
(4, 10.0, 10.0, 0.2): 0.466666666667
(4, 10.0, 10.0, 0.3): 0.333333333333
(4, 100.0, 100.0, 0.2): 0.4
(4, 100.0, 100.0, 0.3): 0.466666666667
(5, 1.0, 1.0, 0.2): 0.333333333333
(5, 1.0, 1.0, 0.3): 0.266666666667
(5, 10.0, 10.0, 0.2): 0.333333333333
(5, 10.0, 10.0, 0.3): 0.466666666667
(5, 100.0, 100.0, 0.2): 0.333333333333
(5, 100.0, 100.0, 0.3): 0.2
(6, 0.1, 0.1, 0.3): 0.6
(6, 1.0, 1.0, 0.2): 0.533333333333
(6, 1.0, 1.0, 0.3): 0.666666666667
(6, 10.0, 10.0, 0.2): 0.2
(6, 10.0, 10.0, 0.3): 0.466666666667
(6, 100.0, 100.0, 0.2): 0.2
(6, 100.0, 100.0, 0.3): 0.733333333333
(7, 1.0, 1.0, 0.2): 0.4
(7, 1.0, 1.0, 0.3): 0.333333333333
(7, 10.0, 10.0, 0.2): 0.2
(7, 10.0, 10.0, 0.3): 0.0666666666667
(7, 100.0, 100.0, 0.2): 0.333333333333
(7, 100.0, 100.0, 0.3): 0.4
(8, 1.0, 1.0, 0.2): 0.0666666666667
(8, 1.0, 1.0, 0.3): 0.4
(8, 10.0, 10.0, 0.2): 0.466666666667
(8, 10.0, 10.0, 0.3): 0.4
(8, 100.0, 100.0, 0.2): 0.266666666667
(8, 100.0, 100.0, 0.3): 0.533333333333
(9, 1.0, 1.0, 0.2): 0.2
(9, 1.0, 1.0, 0.3): 0.533333333333
(9, 10.0, 10.0, 0.2): 0.466666666667
(9, 10.0, 10.0, 0.3): 0.333333333333
(9, 100.0, 100.0, 0.2): 0.333333333333
(9, 100.0, 100.0, 0.3): 0.466666666667

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.2): 0.6
(0, 1.0, 1.0, 0.3): 0.666666666667
(0, 10.0, 10.0, 0.2): 0.8
(0, 10.0, 10.0, 0.3): 0.4
(0, 100.0, 100.0, 0.2): 0.666666666667
(0, 100.0, 100.0, 0.3): 0.6
(1, 0.1, 0.1, 0.3): 0.333333333333
(1, 1.0, 1.0, 0.2): 0.666666666667
(1, 1.0, 1.0, 0.3): 0.666666666667
(1, 10.0, 10.0, 0.2): 0.866666666667
(1, 10.0, 10.0, 0.3): 0.6
(1, 100.0, 100.0, 0.2): 0.666666666667
(1, 100.0, 100.0, 0.3): 0.8
(2, 0.1, 0.1, 0.3): 0.533333333333
(2, 1.0, 1.0, 0.2): 0.733333333333
(2, 1.0, 1.0, 0.3): 0.533333333333
(2, 10.0, 10.0, 0.2): 0.733333333333
(2, 10.0, 10.0, 0.3): 0.4
(2, 100.0, 100.0, 0.2): 0.733333333333
(2, 100.0, 100.0, 0.3): 0.333333333333
(3, 1.0, 1.0, 0.2): 0.6
(3, 1.0, 1.0, 0.3): 0.4
(3, 10.0, 10.0, 0.2): 0.866666666667
(3, 10.0, 10.0, 0.3): 0.466666666667
(3, 100.0, 100.0, 0.2): 0.533333333333
(3, 100.0, 100.0, 0.3): 0.2
(4, 1.0, 1.0, 0.2): 0.8
(4, 1.0, 1.0, 0.3): 0.533333333333
(4, 10.0, 10.0, 0.2): 0.533333333333
(4, 10.0, 10.0, 0.3): 0.666666666667
(4, 100.0, 100.0, 0.2): 0.6
(4, 100.0, 100.0, 0.3): 0.533333333333
(5, 1.0, 1.0, 0.2): 0.666666666667
(5, 1.0, 1.0, 0.3): 0.733333333333
(5, 10.0, 10.0, 0.2): 0.666666666667
(5, 10.0, 10.0, 0.3): 0.533333333333
(5, 100.0, 100.0, 0.2): 0.666666666667
(5, 100.0, 100.0, 0.3): 0.8
(6, 0.1, 0.1, 0.3): 0.4
(6, 1.0, 1.0, 0.2): 0.466666666667
(6, 1.0, 1.0, 0.3): 0.333333333333
(6, 10.0, 10.0, 0.2): 0.8
(6, 10.0, 10.0, 0.3): 0.533333333333
(6, 100.0, 100.0, 0.2): 0.8
(6, 100.0, 100.0, 0.3): 0.266666666667
(7, 1.0, 1.0, 0.2): 0.6
(7, 1.0, 1.0, 0.3): 0.666666666667
(7, 10.0, 10.0, 0.2): 0.8
(7, 10.0, 10.0, 0.3): 0.933333333333
(7, 100.0, 100.0, 0.2): 0.666666666667
(7, 100.0, 100.0, 0.3): 0.6
(8, 1.0, 1.0, 0.2): 0.933333333333
(8, 1.0, 1.0, 0.3): 0.6
(8, 10.0, 10.0, 0.2): 0.533333333333
(8, 10.0, 10.0, 0.3): 0.6
(8, 100.0, 100.0, 0.2): 0.733333333333
(8, 100.0, 100.0, 0.3): 0.466666666667
(9, 1.0, 1.0, 0.2): 0.8
(9, 1.0, 1.0, 0.3): 0.466666666667
(9, 10.0, 10.0, 0.2): 0.533333333333
(9, 10.0, 10.0, 0.3): 0.666666666667
(9, 100.0, 100.0, 0.2): 0.666666666667
(9, 100.0, 100.0, 0.3): 0.533333333333

Accuracy mean :0.3883597883597883
Std deviation :0.15871604875557818
Loss mean :0.6116402116402117
Std deviation :0.15871604875557818



QuantileLinPiecewise_4dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Using same parameters for all the clusterization: True
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 4
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: QuantileLinPiecewise
Cluster graph uses all connections: False
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random
Number of cluster considerated for validation (top_k): None


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 100.0, 0.3): 0.466666666667
(1, 0.1, 0.1, 0.3): 0.533333333333
(2, 1.0, 1.0, 0.3): 0.666666666667
(3, 100.0, 100.0, 0.2): 0.266666666667
(4, 10.0, 10.0, 0.3): 0.533333333333
(5, 10.0, 10.0, 0.3): 0.733333333333
(6, 1.0, 1.0, 0.2): 0.8
(7, 100.0, 100.0, 0.2): 0.533333333333
(8, 1.0, 1.0, 0.3): 0.733333333333
(9, 0.1, 0.1, 0.3): 0.6

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 100.0, 0.3): 0.533333333333
(1, 0.1, 0.1, 0.3): 0.466666666667
(2, 1.0, 1.0, 0.3): 0.333333333333
(3, 100.0, 100.0, 0.2): 0.733333333333
(4, 10.0, 10.0, 0.3): 0.466666666667
(5, 10.0, 10.0, 0.3): 0.266666666667
(6, 1.0, 1.0, 0.2): 0.2
(7, 100.0, 100.0, 0.2): 0.466666666667
(8, 1.0, 1.0, 0.3): 0.266666666667
(9, 0.1, 0.1, 0.3): 0.4

Accuracy mean :0.5866666666666667
Std deviation :0.1484737163421339
Loss mean :0.4133333333333334
Std deviation :0.1484737163421339

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 100.0, 100.0, 0.3): 0.688888888889
(1, 0.1, 0.1, 0.3): 0.681481481481
(2, 1.0, 1.0, 0.3): 0.666666666667
(3, 100.0, 100.0, 0.2): 0.340740740741
(4, 10.0, 10.0, 0.3): 0.681481481481
(5, 10.0, 10.0, 0.3): 0.659259259259
(6, 1.0, 1.0, 0.2): 0.644444444444
(7, 100.0, 100.0, 0.2): 0.681481481481
(8, 1.0, 1.0, 0.3): 0.659259259259
(9, 0.1, 0.1, 0.3): 0.674074074074
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 100.0, 0.3): 0.311111111111
(1, 0.1, 0.1, 0.3): 0.318518518519
(2, 1.0, 1.0, 0.3): 0.333333333333
(3, 100.0, 100.0, 0.2): 0.659259259259
(4, 10.0, 10.0, 0.3): 0.318518518519
(5, 10.0, 10.0, 0.3): 0.340740740741
(6, 1.0, 1.0, 0.2): 0.355555555556
(7, 100.0, 100.0, 0.2): 0.318518518519
(8, 1.0, 1.0, 0.3): 0.340740740741
(9, 0.1, 0.1, 0.3): 0.325925925926

Accuracy mean :0.6377777777777778
Std deviation :0.09984624668298946
Loss mean :0.3622222222222222
Std deviation :0.09984624668298944

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 0.1, 0.1, 0.3): 0.533333333333
(0, 1.0, 1.0, 0.2): 0.133333333333
(0, 1.0, 1.0, 0.3): 0.533333333333
(0, 10.0, 10.0, 0.2): 0.2
(0, 10.0, 10.0, 0.3): 0.533333333333
(0, 100.0, 100.0, 0.2): 0.2
(0, 100.0, 100.0, 0.3): 0.533333333333
(1, 0.1, 0.1, 0.3): 0.733333333333
(1, 1.0, 1.0, 0.3): 0.733333333333
(1, 10.0, 10.0, 0.3): 0.733333333333
(1, 100.0, 100.0, 0.3): 0.733333333333
(2, 0.1, 0.1, 0.3): 0.8
(2, 1.0, 1.0, 0.2): 0.533333333333
(2, 1.0, 1.0, 0.3): 0.8
(2, 10.0, 10.0, 0.2): 0.8
(2, 10.0, 10.0, 0.3): 0.8
(2, 100.0, 100.0, 0.2): 0.133333333333
(2, 100.0, 100.0, 0.3): 0.8
(3, 1.0, 1.0, 0.2): 0.8
(3, 1.0, 1.0, 0.3): 0.8
(3, 10.0, 10.0, 0.2): 0.733333333333
(3, 10.0, 10.0, 0.3): 0.8
(3, 100.0, 100.0, 0.2): 0.8
(3, 100.0, 100.0, 0.3): 0.8
(4, 0.1, 0.1, 0.3): 0.6
(4, 1.0, 1.0, 0.2): 0.533333333333
(4, 1.0, 1.0, 0.3): 0.6
(4, 10.0, 10.0, 0.2): 0.533333333333
(4, 10.0, 10.0, 0.3): 0.6
(4, 100.0, 100.0, 0.2): 0.6
(4, 100.0, 100.0, 0.3): 0.6
(5, 0.1, 0.1, 0.2): 0.4
(5, 0.1, 0.1, 0.3): 0.6
(5, 1.0, 1.0, 0.2): 0.333333333333
(5, 1.0, 1.0, 0.3): 0.333333333333
(5, 10.0, 10.0, 0.2): 0.133333333333
(5, 10.0, 10.0, 0.3): 0.6
(5, 100.0, 100.0, 0.2): 0.333333333333
(5, 100.0, 100.0, 0.3): 0.6
(6, 1.0, 1.0, 0.2): 0.533333333333
(6, 1.0, 1.0, 0.3): 0.266666666667
(6, 10.0, 10.0, 0.3): 0.266666666667
(6, 100.0, 100.0, 0.3): 0.266666666667
(7, 0.1, 0.1, 0.2): 0.933333333333
(7, 0.1, 0.1, 0.3): 0.6
(7, 1.0, 1.0, 0.2): 0.933333333333
(7, 1.0, 1.0, 0.3): 0.6
(7, 10.0, 10.0, 0.2): 0.933333333333
(7, 10.0, 10.0, 0.3): 0.6
(7, 100.0, 100.0, 0.2): 0.933333333333
(7, 100.0, 100.0, 0.3): 0.6
(8, 0.1, 0.1, 0.3): 0.466666666667
(8, 1.0, 1.0, 0.3): 0.466666666667
(8, 10.0, 10.0, 0.2): 0.2
(8, 10.0, 10.0, 0.3): 0.466666666667
(8, 100.0, 100.0, 0.2): 0.0666666666667
(8, 100.0, 100.0, 0.3): 0.466666666667
(9, 0.1, 0.1, 0.3): 1.0
(9, 1.0, 1.0, 0.2): 0.4
(9, 1.0, 1.0, 0.3): 0.933333333333
(9, 10.0, 10.0, 0.2): 0.266666666667
(9, 10.0, 10.0, 0.3): 0.933333333333
(9, 100.0, 100.0, 0.3): 0.8

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 0.1, 0.1, 0.3): 0.466666666667
(0, 1.0, 1.0, 0.2): 0.866666666667
(0, 1.0, 1.0, 0.3): 0.466666666667
(0, 10.0, 10.0, 0.2): 0.8
(0, 10.0, 10.0, 0.3): 0.466666666667
(0, 100.0, 100.0, 0.2): 0.8
(0, 100.0, 100.0, 0.3): 0.466666666667
(1, 0.1, 0.1, 0.3): 0.266666666667
(1, 1.0, 1.0, 0.3): 0.266666666667
(1, 10.0, 10.0, 0.3): 0.266666666667
(1, 100.0, 100.0, 0.3): 0.266666666667
(2, 0.1, 0.1, 0.3): 0.2
(2, 1.0, 1.0, 0.2): 0.466666666667
(2, 1.0, 1.0, 0.3): 0.2
(2, 10.0, 10.0, 0.2): 0.2
(2, 10.0, 10.0, 0.3): 0.2
(2, 100.0, 100.0, 0.2): 0.866666666667
(2, 100.0, 100.0, 0.3): 0.2
(3, 1.0, 1.0, 0.2): 0.2
(3, 1.0, 1.0, 0.3): 0.2
(3, 10.0, 10.0, 0.2): 0.266666666667
(3, 10.0, 10.0, 0.3): 0.2
(3, 100.0, 100.0, 0.2): 0.2
(3, 100.0, 100.0, 0.3): 0.2
(4, 0.1, 0.1, 0.3): 0.4
(4, 1.0, 1.0, 0.2): 0.466666666667
(4, 1.0, 1.0, 0.3): 0.4
(4, 10.0, 10.0, 0.2): 0.466666666667
(4, 10.0, 10.0, 0.3): 0.4
(4, 100.0, 100.0, 0.2): 0.4
(4, 100.0, 100.0, 0.3): 0.4
(5, 0.1, 0.1, 0.2): 0.6
(5, 0.1, 0.1, 0.3): 0.4
(5, 1.0, 1.0, 0.2): 0.666666666667
(5, 1.0, 1.0, 0.3): 0.666666666667
(5, 10.0, 10.0, 0.2): 0.866666666667
(5, 10.0, 10.0, 0.3): 0.4
(5, 100.0, 100.0, 0.2): 0.666666666667
(5, 100.0, 100.0, 0.3): 0.4
(6, 1.0, 1.0, 0.2): 0.466666666667
(6, 1.0, 1.0, 0.3): 0.733333333333
(6, 10.0, 10.0, 0.3): 0.733333333333
(6, 100.0, 100.0, 0.3): 0.733333333333
(7, 0.1, 0.1, 0.2): 0.0666666666667
(7, 0.1, 0.1, 0.3): 0.4
(7, 1.0, 1.0, 0.2): 0.0666666666667
(7, 1.0, 1.0, 0.3): 0.4
(7, 10.0, 10.0, 0.2): 0.0666666666667
(7, 10.0, 10.0, 0.3): 0.4
(7, 100.0, 100.0, 0.2): 0.0666666666667
(7, 100.0, 100.0, 0.3): 0.4
(8, 0.1, 0.1, 0.3): 0.533333333333
(8, 1.0, 1.0, 0.3): 0.533333333333
(8, 10.0, 10.0, 0.2): 0.8
(8, 10.0, 10.0, 0.3): 0.533333333333
(8, 100.0, 100.0, 0.2): 0.933333333333
(8, 100.0, 100.0, 0.3): 0.533333333333
(9, 0.1, 0.1, 0.3): 0.0
(9, 1.0, 1.0, 0.2): 0.6
(9, 1.0, 1.0, 0.3): 0.0666666666667
(9, 10.0, 10.0, 0.2): 0.733333333333
(9, 10.0, 10.0, 0.3): 0.0666666666667
(9, 100.0, 100.0, 0.3): 0.2

Accuracy mean :0.5767195767195767
Std deviation :0.23850171065129716
Loss mean :0.42328042328042337
Std deviation :0.23850171065129716



Crisp_4dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Using same parameters for all the clusterization: True
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 4
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: Crisp
Cluster graph uses all connections: False
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random
Number of cluster considerated for validation (top_k): None


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 100.0, 0.3): 0.0666666666667
(1, 100.0, 100.0, 0.3): 0.2
(2, 10.0, 10.0, 0.3): 0.133333333333
(3, 10.0, 10.0, 0.2): 0.533333333333
(4, 10.0, 10.0, 0.3): 0.2
(5, 10.0, 10.0, 0.3): 0.466666666667
(6, 1.0, 1.0, 0.3): 0.266666666667
(7, 10.0, 10.0, 0.3): 0.333333333333
(8, 10.0, 10.0, 0.3): 0.333333333333
(9, 0.1, 0.1, 0.3): 0.466666666667

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 100.0, 0.3): 0.933333333333
(1, 100.0, 100.0, 0.3): 0.8
(2, 10.0, 10.0, 0.3): 0.866666666667
(3, 10.0, 10.0, 0.2): 0.466666666667
(4, 10.0, 10.0, 0.3): 0.8
(5, 10.0, 10.0, 0.3): 0.533333333333
(6, 1.0, 1.0, 0.3): 0.733333333333
(7, 10.0, 10.0, 0.3): 0.666666666667
(8, 10.0, 10.0, 0.3): 0.666666666667
(9, 0.1, 0.1, 0.3): 0.533333333333

Accuracy mean :0.3
Std deviation :0.14681810363696826
Loss mean :0.7000000000000001
Std deviation :0.14681810363696826

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 100.0, 100.0, 0.3): 0.555555555556
(1, 100.0, 100.0, 0.3): 0.348148148148
(2, 10.0, 10.0, 0.3): 0.37037037037
(3, 10.0, 10.0, 0.2): 0.296296296296
(4, 10.0, 10.0, 0.3): 0.474074074074
(5, 10.0, 10.0, 0.3): 0.459259259259
(6, 1.0, 1.0, 0.3): 0.459259259259
(7, 10.0, 10.0, 0.3): 0.340740740741
(8, 10.0, 10.0, 0.3): 0.466666666667
(9, 0.1, 0.1, 0.3): 0.459259259259
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 100.0, 0.3): 0.444444444444
(1, 100.0, 100.0, 0.3): 0.651851851852
(2, 10.0, 10.0, 0.3): 0.62962962963
(3, 10.0, 10.0, 0.2): 0.703703703704
(4, 10.0, 10.0, 0.3): 0.525925925926
(5, 10.0, 10.0, 0.3): 0.540740740741
(6, 1.0, 1.0, 0.3): 0.540740740741
(7, 10.0, 10.0, 0.3): 0.659259259259
(8, 10.0, 10.0, 0.3): 0.533333333333
(9, 0.1, 0.1, 0.3): 0.540740740741

Accuracy mean :0.42296296296296293
Std deviation :0.07564627813999492
Loss mean :0.577037037037037
Std deviation :0.07564627813999492

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 1.0, 1.0, 0.2): 0.266666666667
(0, 1.0, 1.0, 0.3): 0.333333333333
(0, 10.0, 10.0, 0.2): 0.533333333333
(0, 10.0, 10.0, 0.3): 0.4
(0, 100.0, 100.0, 0.2): 0.266666666667
(0, 100.0, 100.0, 0.3): 0.6
(1, 0.1, 0.1, 0.3): 0.6
(1, 1.0, 1.0, 0.3): 0.666666666667
(1, 10.0, 10.0, 0.3): 0.666666666667
(1, 100.0, 100.0, 0.3): 0.733333333333
(2, 1.0, 1.0, 0.2): 0.133333333333
(2, 1.0, 1.0, 0.3): 0.133333333333
(2, 10.0, 10.0, 0.2): 0.133333333333
(2, 10.0, 10.0, 0.3): 0.266666666667
(2, 100.0, 100.0, 0.2): 0.133333333333
(2, 100.0, 100.0, 0.3): 0.133333333333
(3, 0.1, 0.1, 0.3): 0.4
(3, 1.0, 1.0, 0.2): 0.266666666667
(3, 1.0, 1.0, 0.3): 0.4
(3, 10.0, 10.0, 0.2): 0.466666666667
(3, 10.0, 10.0, 0.3): 0.466666666667
(3, 100.0, 100.0, 0.2): 0.266666666667
(3, 100.0, 100.0, 0.3): 0.4
(4, 0.1, 0.1, 0.3): 0.266666666667
(4, 1.0, 1.0, 0.2): 0.2
(4, 1.0, 1.0, 0.3): 0.2
(4, 10.0, 10.0, 0.2): 0.266666666667
(4, 10.0, 10.0, 0.3): 0.333333333333
(4, 100.0, 100.0, 0.2): 0.2
(4, 100.0, 100.0, 0.3): 0.133333333333
(5, 0.1, 0.1, 0.3): 0.4
(5, 1.0, 1.0, 0.2): 0.4
(5, 1.0, 1.0, 0.3): 0.4
(5, 10.0, 10.0, 0.2): 0.4
(5, 10.0, 10.0, 0.3): 0.466666666667
(5, 100.0, 100.0, 0.2): 0.133333333333
(5, 100.0, 100.0, 0.3): 0.4
(6, 0.1, 0.1, 0.3): 0.533333333333
(6, 1.0, 1.0, 0.3): 0.666666666667
(6, 10.0, 10.0, 0.3): 0.533333333333
(6, 100.0, 100.0, 0.3): 0.533333333333
(7, 0.1, 0.1, 0.3): 0.333333333333
(7, 1.0, 1.0, 0.3): 0.4
(7, 10.0, 10.0, 0.3): 0.533333333333
(7, 100.0, 100.0, 0.3): 0.4
(8, 1.0, 1.0, 0.2): 0.4
(8, 1.0, 1.0, 0.3): 0.266666666667
(8, 10.0, 10.0, 0.2): 0.2
(8, 10.0, 10.0, 0.3): 0.466666666667
(8, 100.0, 100.0, 0.2): 0.266666666667
(8, 100.0, 100.0, 0.3): 0.466666666667
(9, 0.1, 0.1, 0.3): 0.333333333333
(9, 1.0, 1.0, 0.2): 0.133333333333
(9, 1.0, 1.0, 0.3): 0.0666666666667
(9, 10.0, 10.0, 0.2): 0.133333333333
(9, 10.0, 10.0, 0.3): 0.2
(9, 100.0, 100.0, 0.2): 0.2
(9, 100.0, 100.0, 0.3): 0.266666666667

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 1.0, 1.0, 0.2): 0.733333333333
(0, 1.0, 1.0, 0.3): 0.666666666667
(0, 10.0, 10.0, 0.2): 0.466666666667
(0, 10.0, 10.0, 0.3): 0.6
(0, 100.0, 100.0, 0.2): 0.733333333333
(0, 100.0, 100.0, 0.3): 0.4
(1, 0.1, 0.1, 0.3): 0.4
(1, 1.0, 1.0, 0.3): 0.333333333333
(1, 10.0, 10.0, 0.3): 0.333333333333
(1, 100.0, 100.0, 0.3): 0.266666666667
(2, 1.0, 1.0, 0.2): 0.866666666667
(2, 1.0, 1.0, 0.3): 0.866666666667
(2, 10.0, 10.0, 0.2): 0.866666666667
(2, 10.0, 10.0, 0.3): 0.733333333333
(2, 100.0, 100.0, 0.2): 0.866666666667
(2, 100.0, 100.0, 0.3): 0.866666666667
(3, 0.1, 0.1, 0.3): 0.6
(3, 1.0, 1.0, 0.2): 0.733333333333
(3, 1.0, 1.0, 0.3): 0.6
(3, 10.0, 10.0, 0.2): 0.533333333333
(3, 10.0, 10.0, 0.3): 0.533333333333
(3, 100.0, 100.0, 0.2): 0.733333333333
(3, 100.0, 100.0, 0.3): 0.6
(4, 0.1, 0.1, 0.3): 0.733333333333
(4, 1.0, 1.0, 0.2): 0.8
(4, 1.0, 1.0, 0.3): 0.8
(4, 10.0, 10.0, 0.2): 0.733333333333
(4, 10.0, 10.0, 0.3): 0.666666666667
(4, 100.0, 100.0, 0.2): 0.8
(4, 100.0, 100.0, 0.3): 0.866666666667
(5, 0.1, 0.1, 0.3): 0.6
(5, 1.0, 1.0, 0.2): 0.6
(5, 1.0, 1.0, 0.3): 0.6
(5, 10.0, 10.0, 0.2): 0.6
(5, 10.0, 10.0, 0.3): 0.533333333333
(5, 100.0, 100.0, 0.2): 0.866666666667
(5, 100.0, 100.0, 0.3): 0.6
(6, 0.1, 0.1, 0.3): 0.466666666667
(6, 1.0, 1.0, 0.3): 0.333333333333
(6, 10.0, 10.0, 0.3): 0.466666666667
(6, 100.0, 100.0, 0.3): 0.466666666667
(7, 0.1, 0.1, 0.3): 0.666666666667
(7, 1.0, 1.0, 0.3): 0.6
(7, 10.0, 10.0, 0.3): 0.466666666667
(7, 100.0, 100.0, 0.3): 0.6
(8, 1.0, 1.0, 0.2): 0.6
(8, 1.0, 1.0, 0.3): 0.733333333333
(8, 10.0, 10.0, 0.2): 0.8
(8, 10.0, 10.0, 0.3): 0.533333333333
(8, 100.0, 100.0, 0.2): 0.733333333333
(8, 100.0, 100.0, 0.3): 0.533333333333
(9, 0.1, 0.1, 0.3): 0.666666666667
(9, 1.0, 1.0, 0.2): 0.866666666667
(9, 1.0, 1.0, 0.3): 0.933333333333
(9, 10.0, 10.0, 0.2): 0.866666666667
(9, 10.0, 10.0, 0.3): 0.8
(9, 100.0, 100.0, 0.2): 0.8
(9, 100.0, 100.0, 0.3): 0.733333333333

Accuracy mean :0.34827586206896544
Std deviation :0.163319541265345
Loss mean :0.6517241379310345
Std deviation :0.16331954126534504



Linear_4dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Using same parameters for all the clusterization: True
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 4
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: Linear
Cluster graph uses all connections: False
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random
Number of cluster considerated for validation (top_k): None


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.3): 0.533333333333
(1, 100.0, 100.0, 0.3): 0.533333333333
(2, 10.0, 10.0, 0.2): 0.666666666667
(3, 100.0, 100.0, 0.3): 0.4
(4, 100.0, 100.0, 0.3): 0.733333333333
(5, 10.0, 10.0, 0.3): 0.666666666667
(6, 10.0, 10.0, 0.3): 0.666666666667
(7, 100.0, 100.0, 0.3): 0.533333333333
(8, 0.1, 0.1, 0.3): 0.6
(9, 100.0, 100.0, 0.3): 0.266666666667

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.3): 0.466666666667
(1, 100.0, 100.0, 0.3): 0.466666666667
(2, 10.0, 10.0, 0.2): 0.333333333333
(3, 100.0, 100.0, 0.3): 0.6
(4, 100.0, 100.0, 0.3): 0.266666666667
(5, 10.0, 10.0, 0.3): 0.333333333333
(6, 10.0, 10.0, 0.3): 0.333333333333
(7, 100.0, 100.0, 0.3): 0.466666666667
(8, 0.1, 0.1, 0.3): 0.4
(9, 100.0, 100.0, 0.3): 0.733333333333

Accuracy mean :0.5599999999999999
Std deviation :0.13399834161494517
Loss mean :0.44000000000000006
Std deviation :0.1339983416149452

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 10.0, 10.0, 0.3): 0.681481481481
(1, 100.0, 100.0, 0.3): 0.681481481481
(2, 10.0, 10.0, 0.2): 0.651851851852
(3, 100.0, 100.0, 0.3): 0.696296296296
(4, 100.0, 100.0, 0.3): 0.659259259259
(5, 10.0, 10.0, 0.3): 0.659259259259
(6, 10.0, 10.0, 0.3): 0.666666666667
(7, 100.0, 100.0, 0.3): 0.681481481481
(8, 0.1, 0.1, 0.3): 0.674074074074
(9, 100.0, 100.0, 0.3): 0.340740740741
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 10.0, 10.0, 0.3): 0.318518518519
(1, 100.0, 100.0, 0.3): 0.318518518519
(2, 10.0, 10.0, 0.2): 0.348148148148
(3, 100.0, 100.0, 0.3): 0.303703703704
(4, 100.0, 100.0, 0.3): 0.340740740741
(5, 10.0, 10.0, 0.3): 0.340740740741
(6, 10.0, 10.0, 0.3): 0.333333333333
(7, 100.0, 100.0, 0.3): 0.318518518519
(8, 0.1, 0.1, 0.3): 0.325925925926
(9, 100.0, 100.0, 0.3): 0.659259259259

Accuracy mean :0.6392592592592592
Std deviation :0.10031773937853268
Loss mean :0.36074074074074075
Std deviation :0.10031773937853265

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 0.1, 0.1, 0.3): 0.6
(0, 1.0, 1.0, 0.2): 0.2
(0, 1.0, 1.0, 0.3): 0.6
(0, 10.0, 10.0, 0.2): 0.266666666667
(0, 10.0, 10.0, 0.3): 0.6
(0, 100.0, 100.0, 0.2): 0.2
(0, 100.0, 100.0, 0.3): 0.6
(1, 0.1, 0.1, 0.3): 0.666666666667
(1, 1.0, 1.0, 0.2): 0.2
(1, 1.0, 1.0, 0.3): 0.666666666667
(1, 10.0, 10.0, 0.2): 0.2
(1, 10.0, 10.0, 0.3): 0.666666666667
(1, 100.0, 100.0, 0.2): 0.2
(1, 100.0, 100.0, 0.3): 0.666666666667
(2, 1.0, 1.0, 0.2): 0.533333333333
(2, 1.0, 1.0, 0.3): 0.2
(2, 10.0, 10.0, 0.2): 0.6
(2, 10.0, 10.0, 0.3): 0.2
(2, 100.0, 100.0, 0.2): 0.6
(2, 100.0, 100.0, 0.3): 0.2
(3, 1.0, 1.0, 0.2): 0.0666666666667
(3, 1.0, 1.0, 0.3): 0.6
(3, 10.0, 10.0, 0.2): 0.266666666667
(3, 10.0, 10.0, 0.3): 0.6
(3, 100.0, 100.0, 0.2): 0.2
(3, 100.0, 100.0, 0.3): 0.6
(4, 0.1, 0.1, 0.3): 0.6
(4, 1.0, 1.0, 0.2): 0.333333333333
(4, 1.0, 1.0, 0.3): 0.6
(4, 10.0, 10.0, 0.2): 0.333333333333
(4, 10.0, 10.0, 0.3): 0.6
(4, 100.0, 100.0, 0.2): 0.333333333333
(4, 100.0, 100.0, 0.3): 0.6
(5, 1.0, 1.0, 0.3): 0.733333333333
(5, 10.0, 10.0, 0.3): 0.8
(5, 100.0, 100.0, 0.3): 0.8
(6, 0.1, 0.1, 0.3): 0.666666666667
(6, 1.0, 1.0, 0.3): 0.666666666667
(6, 10.0, 10.0, 0.2): 0.666666666667
(6, 10.0, 10.0, 0.3): 0.666666666667
(6, 100.0, 100.0, 0.3): 0.666666666667
(7, 1.0, 1.0, 0.2): 0.333333333333
(7, 1.0, 1.0, 0.3): 0.533333333333
(7, 10.0, 10.0, 0.2): 0.266666666667
(7, 10.0, 10.0, 0.3): 0.533333333333
(7, 100.0, 100.0, 0.2): 0.266666666667
(7, 100.0, 100.0, 0.3): 0.533333333333
(8, 0.1, 0.1, 0.3): 0.8
(8, 1.0, 1.0, 0.2): 0.4
(8, 1.0, 1.0, 0.3): 0.8
(8, 10.0, 10.0, 0.2): 0.333333333333
(8, 10.0, 10.0, 0.3): 0.8
(8, 100.0, 100.0, 0.2): 0.4
(8, 100.0, 100.0, 0.3): 0.8
(9, 0.1, 0.1, 0.3): 0.666666666667
(9, 1.0, 1.0, 0.2): 0.4
(9, 1.0, 1.0, 0.3): 0.666666666667
(9, 10.0, 10.0, 0.3): 0.666666666667
(9, 100.0, 100.0, 0.2): 0.2
(9, 100.0, 100.0, 0.3): 0.666666666667

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 0.1, 0.1, 0.3): 0.4
(0, 1.0, 1.0, 0.2): 0.8
(0, 1.0, 1.0, 0.3): 0.4
(0, 10.0, 10.0, 0.2): 0.733333333333
(0, 10.0, 10.0, 0.3): 0.4
(0, 100.0, 100.0, 0.2): 0.8
(0, 100.0, 100.0, 0.3): 0.4
(1, 0.1, 0.1, 0.3): 0.333333333333
(1, 1.0, 1.0, 0.2): 0.8
(1, 1.0, 1.0, 0.3): 0.333333333333
(1, 10.0, 10.0, 0.2): 0.8
(1, 10.0, 10.0, 0.3): 0.333333333333
(1, 100.0, 100.0, 0.2): 0.8
(1, 100.0, 100.0, 0.3): 0.333333333333
(2, 1.0, 1.0, 0.2): 0.466666666667
(2, 1.0, 1.0, 0.3): 0.8
(2, 10.0, 10.0, 0.2): 0.4
(2, 10.0, 10.0, 0.3): 0.8
(2, 100.0, 100.0, 0.2): 0.4
(2, 100.0, 100.0, 0.3): 0.8
(3, 1.0, 1.0, 0.2): 0.933333333333
(3, 1.0, 1.0, 0.3): 0.4
(3, 10.0, 10.0, 0.2): 0.733333333333
(3, 10.0, 10.0, 0.3): 0.4
(3, 100.0, 100.0, 0.2): 0.8
(3, 100.0, 100.0, 0.3): 0.4
(4, 0.1, 0.1, 0.3): 0.4
(4, 1.0, 1.0, 0.2): 0.666666666667
(4, 1.0, 1.0, 0.3): 0.4
(4, 10.0, 10.0, 0.2): 0.666666666667
(4, 10.0, 10.0, 0.3): 0.4
(4, 100.0, 100.0, 0.2): 0.666666666667
(4, 100.0, 100.0, 0.3): 0.4
(5, 1.0, 1.0, 0.3): 0.266666666667
(5, 10.0, 10.0, 0.3): 0.2
(5, 100.0, 100.0, 0.3): 0.2
(6, 0.1, 0.1, 0.3): 0.333333333333
(6, 1.0, 1.0, 0.3): 0.333333333333
(6, 10.0, 10.0, 0.2): 0.333333333333
(6, 10.0, 10.0, 0.3): 0.333333333333
(6, 100.0, 100.0, 0.3): 0.333333333333
(7, 1.0, 1.0, 0.2): 0.666666666667
(7, 1.0, 1.0, 0.3): 0.466666666667
(7, 10.0, 10.0, 0.2): 0.733333333333
(7, 10.0, 10.0, 0.3): 0.466666666667
(7, 100.0, 100.0, 0.2): 0.733333333333
(7, 100.0, 100.0, 0.3): 0.466666666667
(8, 0.1, 0.1, 0.3): 0.2
(8, 1.0, 1.0, 0.2): 0.6
(8, 1.0, 1.0, 0.3): 0.2
(8, 10.0, 10.0, 0.2): 0.666666666667
(8, 10.0, 10.0, 0.3): 0.2
(8, 100.0, 100.0, 0.2): 0.6
(8, 100.0, 100.0, 0.3): 0.2
(9, 0.1, 0.1, 0.3): 0.333333333333
(9, 1.0, 1.0, 0.2): 0.6
(9, 1.0, 1.0, 0.3): 0.333333333333
(9, 10.0, 10.0, 0.3): 0.333333333333
(9, 100.0, 100.0, 0.2): 0.8
(9, 100.0, 100.0, 0.3): 0.333333333333

Accuracy mean :0.5022222222222222
Std deviation :0.20672639519213745
Loss mean :0.49777777777777776
Std deviation :0.20672639519213745



QuantileConstPiecewise_4dim, number of iterations: 10

Parameters info
Tradeoffs parameter: [  0.1   1.   10.  100. ]
Using same parameters for all the clusterization: True
Gaussian kernel sigmas: [0.05 0.1  0.2  0.3 ]
Number of principal dimension considerated: 4
Dataset length: 150

Clusterization info
Minimum size of a cluster: in perc: 0.01, in int: 2
Type of mu: Binary Muzzifier
Fuzzifier: QuantileConstPiecewise
Cluster graph uses all connections: False
Cluster to label info
Force the number of cluster to be the number of different labels: False
Force the labels to be always represent by a cluster: False

Validation info
Conflict resolution: random
Number of cluster considerated for validation (top_k): None


RESULTS

On TEST set

Accuracy on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 100.0, 0.3): 0.4
(1, 1.0, 1.0, 0.3): 0.333333333333
(2, 10.0, 10.0, 0.3): 0.466666666667
(3, 10.0, 10.0, 0.3): 0.333333333333
(4, 10.0, 10.0, 0.3): 0.666666666667
(5, 10.0, 10.0, 0.3): 0.266666666667
(6, 100.0, 100.0, 0.3): 0.333333333333
(7, 10.0, 10.0, 0.3): 0.4
(8, 10.0, 10.0, 0.3): 0.533333333333
(9, 1.0, 1.0, 0.3): 0.266666666667

Loss on test set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 100.0, 0.3): 0.6
(1, 1.0, 1.0, 0.3): 0.666666666667
(2, 10.0, 10.0, 0.3): 0.533333333333
(3, 10.0, 10.0, 0.3): 0.666666666667
(4, 10.0, 10.0, 0.3): 0.333333333333
(5, 10.0, 10.0, 0.3): 0.733333333333
(6, 100.0, 100.0, 0.3): 0.666666666667
(7, 10.0, 10.0, 0.3): 0.6
(8, 10.0, 10.0, 0.3): 0.466666666667
(9, 1.0, 1.0, 0.3): 0.733333333333

Accuracy mean :0.4
Std deviation :0.11925695879998878
Loss mean :0.6
Std deviation :0.11925695879998877

On TRAINING set

Accuracy on training set for every iteration (n_of_the_iter, c, sigma):
(0, 100.0, 100.0, 0.3): 0.518518518519
(1, 1.0, 1.0, 0.3): 0.57037037037
(2, 10.0, 10.0, 0.3): 0.644444444444
(3, 10.0, 10.0, 0.3): 0.548148148148
(4, 10.0, 10.0, 0.3): 0.377777777778
(5, 10.0, 10.0, 0.3): 0.533333333333
(6, 100.0, 100.0, 0.3): 0.57037037037
(7, 10.0, 10.0, 0.3): 0.496296296296
(8, 10.0, 10.0, 0.3): 0.459259259259
(9, 1.0, 1.0, 0.3): 0.340740740741
Loss on training set for every iteration (n_of_the_iter, best_c, best_sigma):
(0, 100.0, 100.0, 0.3): 0.481481481481
(1, 1.0, 1.0, 0.3): 0.42962962963
(2, 10.0, 10.0, 0.3): 0.355555555556
(3, 10.0, 10.0, 0.3): 0.451851851852
(4, 10.0, 10.0, 0.3): 0.622222222222
(5, 10.0, 10.0, 0.3): 0.466666666667
(6, 100.0, 100.0, 0.3): 0.42962962963
(7, 10.0, 10.0, 0.3): 0.503703703704
(8, 10.0, 10.0, 0.3): 0.540740740741
(9, 1.0, 1.0, 0.3): 0.659259259259

Accuracy mean :0.505925925925926
Std deviation :0.08727233757239344
Loss mean :0.494074074074074
Std deviation :0.08727233757239342

On ALL the sets

Accuracy on all the set for every iteration, for every couple c,sigma (n_of_the_iter, c, sigma):
(0, 0.1, 0.1, 0.3): 0.133333333333
(0, 1.0, 1.0, 0.3): 0.2
(0, 10.0, 10.0, 0.3): 0.266666666667
(0, 100.0, 100.0, 0.3): 0.333333333333
(1, 1.0, 1.0, 0.2): 0.266666666667
(1, 1.0, 1.0, 0.3): 0.4
(1, 10.0, 10.0, 0.2): 0.266666666667
(1, 10.0, 10.0, 0.3): 0.333333333333
(1, 100.0, 100.0, 0.2): 0.266666666667
(1, 100.0, 100.0, 0.3): 0.266666666667
(2, 1.0, 1.0, 0.2): 0.133333333333
(2, 1.0, 1.0, 0.3): 0.4
(2, 10.0, 10.0, 0.2): 0.133333333333
(2, 10.0, 10.0, 0.3): 0.4
(2, 100.0, 100.0, 0.2): 0.133333333333
(2, 100.0, 100.0, 0.3): 0.4
(3, 0.1, 0.1, 0.2): 0.333333333333
(3, 0.1, 0.1, 0.3): 0.2
(3, 1.0, 1.0, 0.2): 0.333333333333
(3, 1.0, 1.0, 0.3): 0.333333333333
(3, 10.0, 10.0, 0.2): 0.333333333333
(3, 10.0, 10.0, 0.3): 0.4
(3, 100.0, 100.0, 0.2): 0.333333333333
(3, 100.0, 100.0, 0.3): 0.2
(4, 1.0, 1.0, 0.3): 0.266666666667
(4, 10.0, 10.0, 0.3): 0.533333333333
(4, 100.0, 100.0, 0.3): 0.266666666667
(5, 0.1, 0.1, 0.3): 0.4
(5, 1.0, 1.0, 0.2): 0.2
(5, 1.0, 1.0, 0.3): 0.4
(5, 10.0, 10.0, 0.2): 0.2
(5, 10.0, 10.0, 0.3): 0.466666666667
(5, 100.0, 100.0, 0.2): 0.466666666667
(5, 100.0, 100.0, 0.3): 0.4
(6, 1.0, 1.0, 0.3): 0.4
(6, 10.0, 10.0, 0.3): 0.2
(6, 100.0, 100.0, 0.3): 0.6
(7, 0.1, 0.1, 0.3): 0.466666666667
(7, 1.0, 1.0, 0.2): 0.333333333333
(7, 1.0, 1.0, 0.3): 0.4
(7, 10.0, 10.0, 0.3): 0.6
(7, 100.0, 100.0, 0.3): 0.4
(8, 0.1, 0.1, 0.3): 0.4
(8, 1.0, 1.0, 0.2): 0.0666666666667
(8, 1.0, 1.0, 0.3): 0.333333333333
(8, 10.0, 10.0, 0.2): 0.266666666667
(8, 10.0, 10.0, 0.3): 0.466666666667
(8, 100.0, 100.0, 0.2): 0.133333333333
(8, 100.0, 100.0, 0.3): 0.466666666667
(9, 0.1, 0.1, 0.2): 0.133333333333
(9, 1.0, 1.0, 0.2): 0.133333333333
(9, 1.0, 1.0, 0.3): 0.266666666667
(9, 10.0, 10.0, 0.2): 0.2
(9, 10.0, 10.0, 0.3): 0.2
(9, 100.0, 100.0, 0.2): 0.133333333333
(9, 100.0, 100.0, 0.3): 0.133333333333

Loss on all the set for every iteration, for every couple c,sigma (n_of_the_iter, best_c, best_sigma):
(0, 0.1, 0.1, 0.3): 0.866666666667
(0, 1.0, 1.0, 0.3): 0.8
(0, 10.0, 10.0, 0.3): 0.733333333333
(0, 100.0, 100.0, 0.3): 0.666666666667
(1, 1.0, 1.0, 0.2): 0.733333333333
(1, 1.0, 1.0, 0.3): 0.6
(1, 10.0, 10.0, 0.2): 0.733333333333
(1, 10.0, 10.0, 0.3): 0.666666666667
(1, 100.0, 100.0, 0.2): 0.733333333333
(1, 100.0, 100.0, 0.3): 0.733333333333
(2, 1.0, 1.0, 0.2): 0.866666666667
(2, 1.0, 1.0, 0.3): 0.6
(2, 10.0, 10.0, 0.2): 0.866666666667
(2, 10.0, 10.0, 0.3): 0.6
(2, 100.0, 100.0, 0.2): 0.866666666667
(2, 100.0, 100.0, 0.3): 0.6
(3, 0.1, 0.1, 0.2): 0.666666666667
(3, 0.1, 0.1, 0.3): 0.8
(3, 1.0, 1.0, 0.2): 0.666666666667
(3, 1.0, 1.0, 0.3): 0.666666666667
(3, 10.0, 10.0, 0.2): 0.666666666667
(3, 10.0, 10.0, 0.3): 0.6
(3, 100.0, 100.0, 0.2): 0.666666666667
(3, 100.0, 100.0, 0.3): 0.8
(4, 1.0, 1.0, 0.3): 0.733333333333
(4, 10.0, 10.0, 0.3): 0.466666666667
(4, 100.0, 100.0, 0.3): 0.733333333333
(5, 0.1, 0.1, 0.3): 0.6
(5, 1.0, 1.0, 0.2): 0.8
(5, 1.0, 1.0, 0.3): 0.6
(5, 10.0, 10.0, 0.2): 0.8
(5, 10.0, 10.0, 0.3): 0.533333333333
(5, 100.0, 100.0, 0.2): 0.533333333333
(5, 100.0, 100.0, 0.3): 0.6
(6, 1.0, 1.0, 0.3): 0.6
(6, 10.0, 10.0, 0.3): 0.8
(6, 100.0, 100.0, 0.3): 0.4
(7, 0.1, 0.1, 0.3): 0.533333333333
(7, 1.0, 1.0, 0.2): 0.666666666667
(7, 1.0, 1.0, 0.3): 0.6
(7, 10.0, 10.0, 0.3): 0.4
(7, 100.0, 100.0, 0.3): 0.6
(8, 0.1, 0.1, 0.3): 0.6
(8, 1.0, 1.0, 0.2): 0.933333333333
(8, 1.0, 1.0, 0.3): 0.666666666667
(8, 10.0, 10.0, 0.2): 0.733333333333
(8, 10.0, 10.0, 0.3): 0.533333333333
(8, 100.0, 100.0, 0.2): 0.866666666667
(8, 100.0, 100.0, 0.3): 0.533333333333
(9, 0.1, 0.1, 0.2): 0.866666666667
(9, 1.0, 1.0, 0.2): 0.866666666667
(9, 1.0, 1.0, 0.3): 0.733333333333
(9, 10.0, 10.0, 0.2): 0.8
(9, 10.0, 10.0, 0.3): 0.8
(9, 100.0, 100.0, 0.2): 0.866666666667
(9, 100.0, 100.0, 0.3): 0.866666666667

Accuracy mean :0.3059523809523809
Std deviation :0.12647654008844395
Loss mean :0.694047619047619
Std deviation :0.12647654008844395



